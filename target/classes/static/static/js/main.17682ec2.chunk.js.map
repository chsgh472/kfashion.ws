{"version":3,"sources":["components/TopBar.js","components/SideMenu.js","components/ScrollToTop.js","components/DropzoneDialog.js","views/Home.js","views/Step.js","views/step2/Color.js","views/step2/SleeveLength.js","views/Step2.js","views/step3/Category.js","views/step3/Style.js","views/step3/Detail.js","views/step3/Print.js","views/step3/Texture.js","views/step3/ClothLength.js","views/step3/NeckLine.js","views/step3/ColorKara.js","views/step3/Fit.js","views/step3/Safe.js","views/step3/Silhouette.js","views/Step3.js","views/labeling/ImageList.js","views/labeling/BoundaryBox.js","views/labeling/Polygon.js","stores/AuthStore.js","views/SignIn.js","views/SignUp.js","views/admin/AddGroup.js","views/admin/CreateGroupDialog.js","views/admin/GroupList.js","views/admin/AdminVerify.js","views/admin/AdminGroup.js","views/verify.js","views/labeling/ImageUpload.js","views/admin/UserList.js","App.js","serviceWorker.js","common/Validation.js","components/alert.js","stores/SignUpStore.js","stores/SecondStepStore.js","stores/FileUploadStore.js","stores/ThirdStepStore.js","stores/CreateGroupDialogStore.js","stores/AdminAuthorityStore.js","stores/ProfessionalLabelStore.js","stores/BasicLabelStore.js","stores/UserListStore.js","stores/ImageStore.js","stores/RectStore.js","stores/index.js","index.js","configureTheme.js"],"names":["useStyles","makeStyles","theme","appBar","breakpoints","up","width","drawerWidth","marginLeft","menuButton","marginRight","spacing","display","title","sideMenuWidth","paddingLeft","flexGrow","link","textDecoration","color","TopBar","props","classes","mobileOpen","setMobileOpen","isLoggedIn","doLogout","loginUser","AppBar","position","className","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","to","id","drawer","flexShrink","paddingRight","mixins","toolbar","drawerPaper","height","border","backgroundColor","palette","primary","main","boxShadow","logo","menu","borderRight","nested","SideMenu","useTheme","React","useState","open1","setOpen1","open","setOpen","List","ListSubheader","inset","ListItem","button","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","component","disablePadding","Divider","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","src","alt","xsDown","ScrollToTop","prevProps","this","location","pathname","window","scrollTo","children","Component","DropzoneDialog","defaultProps","clearOnUnmount","filesLimit","initialFiles","DropzoneDialogExample","inject","observer","state","files","setState","file","userId","authStore","isUserId","fileUploadStore","fileupload","Button","handleOpen","bind","toolButton","onSave","handleSave","acceptedFiles","showPreviews","maxFileSize","handleClose","withSnackbar","withRouter","withStyles","toolBox","Home","enqueueSnackbar","Container","mainContainer","appBarSpacer","mainContent","padding","marginTop","flexDirection","alignItems","test","float","Step","SelectTest","handleChange","selectedOption","basicLabelStore","changeNewBasicLabelColor","text","colorList","axios","get","then","response","data","map","value","no","label","categoryItemName","catch","error","console","log","onChange","options","autoFocus","placeholder","changeNewBasicLabelSleeveLength","sleeveList","sleeve","TabPanel","index","role","hidden","aria-labelledby","Step2","handleClickOK","changeNewBasicLabelCreatedId","createdId","doBasicLabelUp","handleTabChange","event","newValue","checkLogin","imgData","imageStore","isWorkNo","changeNewBasicLabelWorkNo","Grid","container","item","xs","lg","style","margin","Tabs","Tab","minWidth","content","type","buttonType1","buttonType2","insertButton","professionalLabelStore","changeNewProfessionalLabelCategory","categoryList","category","changeNewProfessionalLabelStyle","isMulti","length","styleList","isClearable","Detail","changeNewProfessionalLabelDetail","detailList","detail","Print","changeNewProfessionalLabelPrint","printList","print","Texture","changeNewProfessionalLabelTexture","textureList","texture","ClothLength","changeNewProfessionalLabelClothLength","lengthList","NeckLine","changeNewProfessionalLabelNeckLine","neckLineList","neckLine","ColorKara","changeNewProfessionalLabelKara","karaList","kara","changeNewProfessionalLabelFit","fitList","fit","Safe","changeNewProfessionalLabelSafe","safeList","safe","Silhouette","changeNewProfessionalLabelSilhouette","silhouetteList","silhouette","Step3","handleClickSubmit","changeNewProfessionalLabelCreatedId","doProfessionalLabelUp","changeNewProfessionalLabelWorkNo","handleSubmitForm","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","ImageList","boundaryList","count","columns","field","filterPlaceholder","tooltip","initialEditValue","filter","b","icons","editable","onRowDelete","oldData","Promise","resolve","reject","setTimeout","indexOf","splice","actions","icon","rowData","workNo","BoundaryBox","i","winheight","winwidth","addRect","rectNo","obj","canvas","getObjects","forEach","o","rect","fabric","Rect","name","left","top","fill","grey","opacity","add","setActiveObject","alert","deleteObject","remove","SelectObject","j","renderAll","submit","rectStore","objGet","changeNewRectLocationCreatedId","changeNewRectLocationWorkNo","doRectLocationUp","__canvas","Canvas","setBackgroundImage","on","e","asd","target","setCoords","getBoundingRect","Math","max","min","brNew","scaleX","scaleY","left1","top1","scale1x","scale1y","width1","height1","root","Table","table","TableHead","TableRow","TableCell","TableBody","Tooltip","align","unit","overflowX","fab","absolute","bottom","right","maxWidth","fileText","paddingTop","textAlign","filebox","fileSelection","overflow","clip","borderRadius","Polygon","buttonDis1","buttonDis2","buttonDis3","buttonDis4","buttonDis5","save1","save2","save3","save4","save5","lineTwoPoint","polyPointX","polyPointY","lineCounter","polyCounter","onOff","onOff2","startPoly","polyNo","deleteOne","line","circle","x1","y1","x","y","deleteAll","objList","push","buttonState","finishPath","makePath","path","Path","originX","originY","selection","pointer","Circle","radius","selectable","evented","bringToFront","x2","x3","y2","y3","polyline","Line","stroke","strokeWidth","sendToBack","Paper","disabled","startIcon","divStyle","State","Authenticated","NotAuthenticated","Pending","Failed","EmptyLogin","password","EmptyUser","email","phone","groupNo","isAdmin","isApproved","authorityNo","groupAdmin","createdDatetime","updatedDatetime","AuthStore","doLogin","flow","loginState","param","login","post","token","user","localStorage","setItem","loginToken","Object","assign","getItem","removeItem","observable","action","confirm","computed","SignIn","handleChangeId","changeLoginId","handleChangePassword","changeLoginPassword","handleKeyUpPassword","keyCode","Avatar","lockOutAvatar","store","form","TextField","required","fullWidth","onKeyUp","CircularProgress","size","lockOpenAvatar","secondary","SignUp","signUpStore","changeNewMemberId","handleChangeEmail","changeNewMemberEmail","changeNewMemberPassword","handleChangePasswordConfirm","changeNewMemberPasswordConfirm","handleChangeUserName","changeNewMemberUserName","handleChangePhone","changeNewMemberPhone","handleChangeAllAgreements","changeAgreementsAll","checked","handleChangeServiceAgreements","changeAgreementsService","handleChangePrivacyAgreements","changeAgreementsPrivacy","doSignUp","handleClickToHome","history","search","slice","split","reduce","params","hash","key","val","decodeURIComponent","prevState","snapshot","isSignUpFailed","clearState","isNotAvailableEmail","isEmailInputed","isValidId","isValidEmail","isValidPassword","isPasswordConfirmed","isValidUsername","isValidPhone","isPending","isSignUpSuccess","canSignUp","newMember","agreements","serverMode","Fragment","mainTitle","mainComment","gutterMargin","InputLabelProps","shrink","helperText","autoComplete","passwordConfirm","userName","titleArea","FormControlLabel","control","Checkbox","all","checkAgreeTotal","service","Link","underline","href","termsCaption","privacy","okButton","successContainer","successTitle","successHeader","successHeader2","successBody","successButton","paddingBottom","justifyContent","marginBottom","down","fontWeight","checkAgreeMargin","fontSize","fontFamily","AddGroup","groupName","handleFormSubmit","handleValueChange","addGroup","handleClickOpen","preventDefault","nextState","formData","FormData","append","headers","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","CreateGroupDialog","userGroupAuthorityList","GroupList","adminAuthorityStore","changeNewAdminGroupNo","userGroupList","AdminVerify","userList","editPlaceholder","render","handleSubmit","onRowSelection","loading","res","changeNewAdminId","doAdminUp","sorting","minBodyHeight","actionsColumnIndex","headerStyle","cellStyle","onSelectionChange","rows","AdminGroup","Verify","ImageUpload","LoadImage","changeWorkNo","handlePrevious","handleNext","imgLayout","maxHeight","UserList","groupUserList","onRowAdd","userListStore","changeNewMemberGroupNo","addGroupUser","delete","editCellStyle","actionsCellStyle","App","interceptors","request","use","config","status","invalidateLogin","CssBaseline","exact","Boolean","hostname","match","validateEmail","String","toLowerCase","EmptyNewMember","EmptyAgreements","SignUpStore","doAction","responseid","isNotAvailEmail","result","isNotAvailId","toJS","undefined","getServerMode","emailVerification","validation","allAgreement","serviceAgreements","privacyAgreements","SecondStepStore","loadColorList","getColorList","loadSleeveList","getSleeveList","AddState","UpdateState","FileUploadStore","sessionStorage","Ready","uploadFile","ThirdStepStore","loadStyleList","getCategoryList","loadCategoryList","loadDetailList","loadPrintList","loadTextureList","loadLengthList","loadNeckLineList","loadKaraList","loadFitList","loadSafeList","loadSilhouetteList","CreateGroupDialogStore","loadGroupList","Authority","EmptyNewAdmin","AdminAuthorityStore","newAdmin","EmptyNewProfessionalLabel","workStep","createId","styleNoList","styleCategoryNoList","styleSub","styleCategoryNo","styleCategorySubNo","categoryCategoryNo","detailCategoryNo","printCategoryNo","textureCategoryNo","clothLength","clothLengthCategoryNo","neckLineCategoryNo","karaCategoryNo","fitCategoryNo","safeCategoryNo","silhouetteCategoryNo","ProfessionalLabelStore","newProfessionalLabel","categoryNo","EmptyNewBasicLabel","colorCategoryNo","sleeveLength","sleeveLengthCategoryNo","BasicLabelStore","newBasicLabel","Success","Fail","UserListStore","NotAvailableEmail","WorkNo","ImageStore","loadImage","imageData","EmptyNewRectLocation","locationX","locationY","locationWidth","locationHeight","RectStore","kfashionRectList","rectList","r","NewRectLocation","stores","secondStepStore","thirdStepStore","createGroupDialogStore","configure","enforceActions","createMuiTheme","ReactDOM","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.17682ec2.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppBar, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\n\nconst logoWidth = 120;\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${theme.drawerWidth}px)`,\n            marginLeft: theme.drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        marginLeft: (theme.sideMenuWidth - logoWidth) / 2,\n        paddingLeft: theme.spacing(3),\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}));\n\nexport default function TopBar(props) {\n    const classes = useStyles();\n    const { mobileOpen, setMobileOpen, isLoggedIn, doLogout, loginUser } = props;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"start\"\n                    onClick={handleDrawerToggle}\n                    className={classes.menuButton}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap className={classes.title}>\n                    <Link to='/' className={classes.link}>\n                        K-FASHION\n                    </Link>\n                </Typography>\n\n                { isLoggedIn ? (\n                    <IconButton color=\"inherit\" onClick={doLogout}>\n                        {loginUser.id}\n                        <ExitToAppIcon />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/SignUp\" className={classes.link}>\n                        <IconButton color=\"inherit\">\n                            <AssignmentIndIcon />\n                            <Typography variant=\"h6\" noWrap className={classes.title}>\n                                회원가입\n                            </Typography>\n                        </IconButton>\n                    </Link>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Divider, Drawer, Hidden, List, ListItem, ListItemIcon, ListItemText, ListSubheader, Toolbar} from \"@material-ui/core\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport FormatShapesIcon from '@material-ui/icons/FormatShapes';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst logoWidth = 129;\nconst logoHeight = 22;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: theme.drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        width: theme.drawerWidth,\n        paddingLeft: 0,\n        paddingRight: 0,\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        width: theme.drawerWidth,\n        height: '100%',\n        border: 'none',\n    },\n    toolbar: {\n        width: theme.drawerWidth,\n        backgroundColor: theme.palette.primary.main,\n        paddingLeft: 0,\n        paddingRight: 0,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    logo: {\n        width: logoWidth,\n        height: logoHeight,\n        marginLeft: (theme.drawerWidth - logoWidth) / 2,\n        marginRight: (theme.drawerWidth - logoWidth) / 2,\n    },\n    menu: {\n        borderRight: '1px solid rgba(0,0,0,0.12)',\n        height: '100%',\n    },\n\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function SideMenu(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { mobileOpen, setMobileOpen, isLoggedIn } = props;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n\n    };\n    const [open1, setOpen1] = React.useState(true);\n    const [open, setOpen] = React.useState(true);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    const handleClickAdmin = () => {\n        setOpen1(!open1);\n    };\n    const drawer = (\n        <div className={classes.menu}>\n            <List>\n                <ListSubheader inset>Process</ListSubheader>\n\n                <Link to=\"/home\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><ComputerIcon /></ListItemIcon>\n                        <ListItemText primary=\"홈\"></ListItemText>\n                    </ListItem>\n                </Link>\n                <Link className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><WallpaperIcon /></ListItemIcon>\n                        <ListItemText button onClick={handleClick} primary=\"1단계 영역지정\"></ListItemText>\n                        {open ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                </Link>\n                <Link to=\"/step/imageUpload\" className={classes.link}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <AspectRatioIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"ImageUpload\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n                </Link>\n                <Link to=\"/Step/boundaryBox\" className={classes.link}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem button className={classes.nested}>\n                                <ListItemIcon>\n                                    <AspectRatioIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"BoundaryBox\" />\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                </Link>\n                <Link to=\"/step/polygon\" className={classes.link}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <FormatShapesIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Polygon\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n                </Link>\n                <Link to=\"/step2\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><FormatListBulletedIcon /></ListItemIcon>\n                        <ListItemText primary=\"2단계 기본 레이블링\"></ListItemText>\n                    </ListItem>\n                </Link>\n                <Link to=\"/step3\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><PlaylistAddCheckIcon /></ListItemIcon>\n                        <ListItemText primary=\"3단계 전문 레이블링\"></ListItemText>\n                    </ListItem>\n                </Link>\n            </List>\n\n            <Divider />\n            <Link className={classes.link}>\n                <ListItem button>\n                    <ListItemIcon><WallpaperIcon /></ListItemIcon>\n                    <ListItemText button onClick={handleClickAdmin} primary=\"관리자 메뉴\"></ListItemText>\n                    {open1 ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n            </Link>\n            <Link to=\"/admin/createGroup\" className={classes.link}>\n                <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <AspectRatioIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"가입승인 & 그룹생성\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </Link>\n            <Link to=\"/admin/userList\" className={classes.link}>\n                <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <AspectRatioIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"회원 리스트\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </Link>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Hidden smUp implementation=\"css\">\n\n                <Drawer variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <Drawer variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n\n                        open\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n};","import React from \"react\";\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default ScrollToTop;\n","import React, { Component } from 'react'\nimport {DropzoneArea, DropzoneDialog} from 'material-ui-dropzone'\nimport Button from '@material-ui/core/Button';\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\nconst styles = theme => ({\n    toolButton:{\n        border:'1px solid black',\n        height:50,\n        width:'100%',\n    },\n    toolBox:{\n        border:'1px solid black',\n        marginRight: 1,\n        height:'100%',\n    },\n});\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 20,\n    initialFiles: [],\n};\n\n@inject('fileUploadStore','authStore','imageStore')\n@observer\nclass DropzoneDialogExample extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            files: [],\n        };\n    }\n    componentDidMount() {\n\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n    handleSave(file){\n        this.setState({\n            open: false,\n            files:file\n        });\n        const userId=this.props.authStore.isUserId;\n        this.props.fileUploadStore.fileupload(file,userId);\n    }\n\n    handleOpen() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Button onClick={this.handleOpen.bind(this)} className={classes.toolButton} variant=\"contained\"\n                        color=\"primary\">\n                    Add Image\n                </Button>\n                <DropzoneDialog\n                    open={this.state.open}\n                    onSave={this.handleSave.bind(this)}\n                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                    showPreviews={true}\n                    maxFileSize={5000000}\n                    onClose={this.handleClose.bind(this)}\n                />\n            </div>\n        );\n    }\n}\nexport default withSnackbar(withRouter(withStyles(styles) (DropzoneDialogExample)));","import React, { Component } from 'react'\nimport DropzoneDialogExample from \"../components/DropzoneDialog\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    test:{\n        float: 'left'\n    },\n});\n\nclass Home extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Welcome\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            Home 1024 x 720\n                        </Typography>\n                    </Toolbar>\n\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Home)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Container, Toolbar, Typography} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\nclass Step extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Labeling Work\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            이미지 업로드\n                        </Typography>\n                    </Toolbar>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Step)));","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n\n@inject('basicLabelStore','authStore')\n@observer\nexport default class SelectTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            colorList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/basic/color')\n            .then(response => {\n                const colorList = response.data.colorList;\n                this.setState({ colorList : colorList.map(color => {\n                        color.value = color.no;\n                        color.label = color.categoryItemName;\n                        return color\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.basicLabelStore.changeNewBasicLabelColor(selectedOption)\n        this.setState(\n            { selectedOption }\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const colorList= this.state.colorList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={colorList}\n                autoFocus={true}\n                placeholder={'색상을 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('basicLabelStore','authStore')\n@observer\nexport default class SelectTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            sleeveList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/basic/sleeve')\n            .then(response => {\n                const sleeveList = response.data.sleeveList;\n                this.setState({ sleeveList : sleeveList.map(sleeve => {\n                        sleeve.value = sleeve.no;\n                        sleeve.label = sleeve.categoryItemName;\n                        return sleeve\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.basicLabelStore.changeNewBasicLabelSleeveLength(selectedOption)\n        this.setState(\n            { selectedOption }\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const sleeveList= this.state.sleeveList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={sleeveList}\n                placeholder={'색상을 선택 하세요'}\n            />\n        );\n    }\n}","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Button, Container, Grid, Typography} from \"@material-ui/core\";\nimport Color from \"./step2/Color\";\nimport SleeveLength from \"./step2/SleeveLength\";\nimport {inject, observer} from \"mobx-react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nfunction TabPanel(props) {\n    const { children, value, index } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && (\n                <Typography>{children}</Typography>\n            )}\n        </div>\n    );\n}\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    content:{\n        marginTop: 15,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n    insertButton:{\n        width:110,\n        marginLeft: 'auto',\n    },\n});\n\n@inject('basicLabelStore','authStore','imageStore')\n@observer\nclass Step2 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            createdId: '',\n        }\n    }\n    componentDidMount() {\n        this.props.authStore.checkLogin();\n        const id = this.props.authStore.loginUser.id;\n        this.setState({createdId : id});\n        this.props.enqueueSnackbar(\"Step2\", {\n            variant: 'info',\n        });\n        this.setState({\n            imgData: `/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.isWorkNo}`,\n        })\n        this.props.basicLabelStore.changeNewBasicLabelWorkNo(this.props.imageStore.isWorkNo);\n    }\n\n    handleClickOK = () => {\n        this.props.basicLabelStore.changeNewBasicLabelCreatedId(this.state.createdId);\n        this.props.basicLabelStore.doBasicLabelUp();\n    }\n\n    handleTabChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                 <Grid container spacing={3}>\n                     <Grid item xs={12} lg={6} style={{margin:\"auto\"}}>\n                         <img src={this.state.imgData} alt=\"\" style={{display:\"block\" , width:'100%', height:'100%'}}></img>\n                     </Grid>\n                     <Grid item xs={12} lg={6}>\n                                 <AppBar position=\"static\">\n                                     <Tabs value={this.state.value} onChange={this.handleTabChange} aria-label=\"simple tabs example\" >\n                                         <Tab label=\"상의\" value={0}  style={{minWidth:'20%'}}/>\n                                         <Tab label=\"하의\" value={1} style={{minWidth:'20%'}}/>\n                                         <Tab label=\"신발\" value={2} style={{minWidth:'20%'}}/>\n                                         <Tab label=\"가방\" value={3} style={{minWidth:'20%'}}/>\n                                         <Tab label=\"악세서리\" value={4} style={{minWidth:'20%'}}/>\n                                     </Tabs>\n                                 </AppBar>\n                                 <TabPanel value={this.state.value} index={0}>\n                                     <div className={classes.content}>\n                                     <Typography variant=\"h5\" component=\"h2\">\n                                         색상\n                                     </Typography>\n                                     {/* <Button\n                                 variant=\"outlined\"\n                                 color=\"primary\"\n                                 className={classes.insertButton}\n                                 startIcon={<AddIcon />}\n                             >\n                                 항목추가\n                             </Button>*/}\n                                     <div>\n                                         <hr></hr>\n                                     </div>\n                                     <Color />\n                                     </div>\n                                     <div className={classes.content}>\n                                         <div style={{display:\"inline-flex\"}}>\n                                             <Typography variant=\"h5\" component=\"h2\">\n                                                 소매 길이\n                                             </Typography>\n                                             {/*<Button\n                                     variant=\"outlined\"\n                                     color=\"primary\"\n                                     className={classes.insertButton}\n                                     startIcon={<AddIcon />}\n                                 >\n                                     항목추가\n                                 </Button>*/}\n                                         </div>\n                                         <div>\n                                             <hr></hr>\n                                         </div>\n                                         <SleeveLength />\n                                     </div>\n                                     {/*<Grid container spacing={3} row>\n                         <Grid item xs={6}>\n                             <div className={classes.content}>\n                                 <div style={{display:\"inline-flex\"}}>\n                                 <Typography variant=\"h4\" component=\"h2\">\n                                     의상 길이\n                                 </Typography>\n                                 <Button\n                                     variant=\"outlined\"\n                                     color=\"primary\"\n                                     className={classes.insertButton}\n                                     startIcon={<AddIcon />}\n                                 >\n                                     항목추가\n                                 </Button>\n                             </div>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <SleeveLength />\n                             </div>\n                        </Grid>*/}\n                                 </TabPanel>\n                                 <TabPanel value={this.state.value} index={2}>\n                                     <div className={classes.content}>\n                                         <Typography variant=\"h5\" component=\"h2\">\n                                             색상\n                                         </Typography>\n                                         <div>\n                                             <hr></hr>\n                                         </div>\n                                         <Color />\n                                     </div>\n                                     <div className={classes.content}>\n                                         <div style={{display:\"inline-flex\"}}>\n                                             <Typography variant=\"h5\" component=\"h2\">\n                                                 소매 길이\n                                             </Typography>\n                                         </div>\n                                         <div>\n                                             <hr></hr>\n                                         </div>\n                                         <SleeveLength />\n                                     </div>\n                                 </TabPanel>\n                         <TabPanel value={this.state.value} index={3}>\n                             <div className={classes.content}>\n                                 <Typography variant=\"h5\" component=\"h2\">\n                                     색상\n                                 </Typography>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <Color />\n                             </div>\n                             <div className={classes.content}>\n                                 <div style={{display:\"inline-flex\"}}>\n                                     <Typography variant=\"h5\" component=\"h2\">\n                                         소매 길이\n                                     </Typography>\n                                 </div>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <SleeveLength />\n                             </div>\n                         </TabPanel>\n                         <TabPanel value={this.state.value} index={4}>\n                             <div className={classes.content}>\n                                 <Typography variant=\"h5\" component=\"h2\">\n                                     색상\n                                 </Typography>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <Color />\n                             </div>\n                             <div className={classes.content}>\n                                 <div style={{display:\"inline-flex\"}}>\n                                     <Typography variant=\"h5\" component=\"h2\">\n                                         소매 길이\n                                     </Typography>\n                                 </div>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <SleeveLength />\n                             </div>\n                         </TabPanel>\n                         <TabPanel value={this.state.value} index={1}>\n                             <div className={classes.content}>\n                                 <Typography variant=\"h5\" component=\"h2\">\n                                     색상\n                                 </Typography>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <Color />\n                             </div>\n                             <div className={classes.content}>\n                                 <div style={{display:\"inline-flex\"}}>\n                                     <Typography variant=\"h5\" component=\"h2\">\n                                         소매 길이\n                                     </Typography>\n                                 </div>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <SleeveLength />\n                             </div>\n                         </TabPanel>\n                     </Grid>\n                 </Grid>\n                </div>\n                <hr></hr>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType1}\n                    variant=\"outlined\"\n                    >\n                    Previous\n                </Button>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType1}\n                    variant=\"outlined\"\n                    onClick={this.handleClickOK}\n                     >\n                    Next\n                </Button>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType2}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    >\n                    Next Step\n                </Button>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Step2)));","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class SelectTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            categoryList: [\n                ],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/category')\n            .then(response => {\n                const categoryList = response.data.categoryList;\n                this.setState({\n                    categoryList:\n                        categoryList.map(category => {\n\n                            category.value = category.no;\n                            category.label = category.categoryItemName;\n\n                            return category\n                        })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelCategory(selectedOption);\n        this.setState(\n            { selectedOption },\n        );\n    };\n\n\n\n    render() {\n        const { selectedOption } = this.state;\n        const categoryList= this.state.categoryList;\n        return (\n\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={categoryList}\n                placeholder={'카테고리를 선택 하세요'}\n            />\n\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class SelectTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            styleList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/style')\n            .then(response => {\n                const styleList = response.data.styleList;\n                this.setState({ styleList : styleList.map(style => {\n                        style.value = style.no;\n                        style.label = style.categoryItemName;\n                        return style\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        if(selectedOption === null) {\n            selectedOption =[];\n        }\n        this.props.professionalLabelStore.changeNewProfessionalLabelStyle(selectedOption);\n        if (!selectedOption && this.props.isMulti ? [] : selectedOption && selectedOption.length <= 2) {\n            this.setState(\n                {selectedOption}\n            );\n        }else {\n        }\n\n    };\n    render() {\n        const { selectedOption } = this.state;\n        const styleList= this.state.styleList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={styleList}\n                autoFocus={true}\n                placeholder={'스타일을 선택 하세요 (Main, Sub)'}\n                isMulti\n                isClearable\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class Detail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            categoryList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/detail')\n            .then(response => {\n                const categoryList = response.data.detailList;\n                this.setState({ detailList : categoryList.map(detail => {\n                        detail.value = detail.no;\n                        detail.label = detail.categoryItemName;\n                        return detail\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelDetail(selectedOption);\n        this.setState(\n            { selectedOption },\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const detailList= this.state.detailList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={detailList}\n                placeholder={'디테일을 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class Print extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            categoryList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/print')\n            .then(response => {\n                const printList = response.data.printList;\n                this.setState({ printList : printList.map(print => {\n                        print.value = print.no;\n                        print.label = print.categoryItemName;\n                        return print\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelPrint(selectedOption);\n        this.setState(\n            { selectedOption }\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const printList= this.state.printList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={printList}\n                placeholder={'프린트를 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class Texture extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            textureList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/texture')\n            .then(response => {\n                const textureList = response.data.textureList;\n                this.setState({ textureList : textureList.map(texture => {\n                        texture.value = texture.no;\n                        texture.label = texture.categoryItemName;\n                        return texture\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelTexture(selectedOption);\n        this.setState(\n            { selectedOption },\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const textureList= this.state.textureList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={textureList}\n                placeholder={'소재감을 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class ClothLength extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            lengthList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/length')\n            .then(response => {\n                const lengthList = response.data.lengthList;\n                this.setState({ lengthList : lengthList.map(length => {\n                        length.value = length.no;\n                        length.label = length.categoryItemName;\n                        return length\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelClothLength(selectedOption);\n            this.setState(\n                { selectedOption },\n            );\n    };\n    render() {\n        const { selectedOption } = this.state;\n        const lengthList= this.state.lengthList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={lengthList}\n                placeholder={'기장을 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class NeckLine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            textureList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/neckLine')\n            .then(response => {\n                const neckLineList = response.data.neckLineList;\n                this.setState({ neckLineList : neckLineList.map(neckLine => {\n                        neckLine.value = neckLine.no;\n                        neckLine.label = neckLine.categoryItemName;\n                        return neckLine\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelNeckLine(selectedOption);\n        this.setState(\n            { selectedOption }\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const neckLineList= this.state.neckLineList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={neckLineList}\n                placeholder={'넥라인을 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class ColorKara extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            karaList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/kara')\n            .then(response => {\n                const karaList = response.data.karaList;\n                this.setState({ karaList : karaList.map(kara => {\n                        kara.value = kara.no;\n                        kara.label = kara.categoryItemName;\n                        return kara\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelKara(selectedOption);\n        this.setState(\n            { selectedOption },\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const karaList= this.state.karaList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={karaList}\n                placeholder={'카라를 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class ColorKara extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            fitList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/fit')\n            .then(response => {\n                const fitList = response.data.fitList;\n                this.setState({ fitList : fitList.map(fit => {\n                        fit.value = fit.no;\n                        fit.label = fit.categoryItemName;\n                        return fit\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelFit(selectedOption);\n        this.setState(\n            { selectedOption },\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const fitList= this.state.fitList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={fitList}\n                placeholder={'핏을 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class Safe extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            safeList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/safe')\n            .then(response => {\n                const safeList = response.data.safeList;\n                this.setState({ safeList : safeList.map(safe => {\n                        safe.value = safe.no;\n                        safe.label = safe.categoryItemName;\n                        return safe\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelSafe(selectedOption);\n        this.setState(\n            { selectedOption }\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const safeList= this.state.safeList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={safeList}\n                placeholder={'세이프를 선택 하세요'}\n            />\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('professionalLabelStore','authStore')\n@observer\nexport default class Silhouette extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            silhouetteList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/category/item/professional/silhouette')\n            .then(response => {\n                const silhouetteList = response.data.silhouetteList;\n                this.setState({ silhouetteList : silhouetteList.map(silhouette => {\n                        silhouette.value = silhouette.no;\n                        silhouette.label = silhouette.categoryItemName;\n                        return silhouette\n                    })\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelSilhouette(selectedOption);\n        this.setState(\n            { selectedOption },\n            () => console.log(`Option selected:`, this.state.selectedOption.no)\n        );\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const silhouetteList= this.state.silhouetteList;\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={silhouetteList}\n                placeholder={'실루엣을 선택 하세요'}\n            />\n        );\n    }\n}","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Button, Container, Grid, Typography} from \"@material-ui/core\";\nimport Category from \"./step3/Category\";\nimport Style from \"./step3/Style\";\nimport Detail from \"./step3/Detail\";\nimport Print from \"./step3/Print\";\nimport Texture from \"./step3/Texture\";\nimport ClothLength from \"./step3/ClothLength\";\nimport NeckLine from \"./step3/NeckLine\";\nimport ColorKara from \"./step3/ColorKara\";\nimport Fit from \"./step3/Fit\";\nimport Safe from \"./step3/Safe\";\nimport Silhouette from \"./step3/Silhouette\";\nimport {inject, observer} from \"mobx-react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nfunction TabPanel(props) {\n    const { children, value, index } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && (\n                <Typography>{children}</Typography>\n            )}\n        </div>\n    );\n}\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    content:{\n        marginTop: 15,\n        marginRight: 15,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n});\n\n@inject('professionalLabelStore','authStore', 'imageStore')\n@observer\nclass Step3 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value:0,\n            createdId: '',\n        }\n    }\n    componentDidMount() {\n        this.props.authStore.checkLogin();\n        const id = this.props.authStore.loginUser.id;\n        this.setState({createdId : id});\n        this.props.enqueueSnackbar(\"Step3\", {\n            variant: 'info'\n        });\n        this.setState({\n            imgData: `/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.isWorkNo}`,\n        })\n        this.props.professionalLabelStore.changeNewProfessionalLabelWorkNo(this.props.imageStore.isWorkNo);\n    }\n\n    handleClickSubmit = () => {\n        this.props.professionalLabelStore.changeNewProfessionalLabelCreatedId(this.state.createdId);\n        this.props.professionalLabelStore.doProfessionalLabelUp();\n    }\n\n    handleTabChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    }\n    render() {\n        const {classes} = this.props;\n\n            return (\n                <Container component=\"main\" className={classes.mainContainer}>\n                    <div className={classes.appBarSpacer} />\n                    <div className={classes.mainContent}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} lg={6} style={{margin:\"auto\"}}>\n                                <img src={this.state.imgData} alt=\"\" style={{display:\"block\" , width:'100%', height:'100%'}}></img>\n                            </Grid>\n                            <Grid container item xs={12} lg={6}>\n                                <AppBar position=\"static\">\n                                    <Tabs value={this.state.value} onChange={this.handleTabChange} aria-label=\"simple tabs example\" >\n                                        <Tab label=\"상의\" value={0}  style={{minWidth:'20%'}}/>\n                                        <Tab label=\"하의\" value={1} style={{minWidth:'20%'}}/>\n                                        <Tab label=\"신발\" value={2} style={{minWidth:'20%'}}/>\n                                        <Tab label=\"가방\" value={3} style={{minWidth:'20%'}}/>\n                                        <Tab label=\"악세서리\" value={4} style={{minWidth:'20%'}}/>\n                                    </Tabs>\n                                </AppBar>\n                            <Grid item xs={12} lg={6}>\n                                <div className={classes.content}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        스타일\n                                    </Typography>\n                                    <div>\n                                        <hr></hr>\n                                    </div>\n                                    <Style />\n                                </div>\n                            </Grid>\n                                <Grid item xs={12} lg={6}>\n                                <div className={classes.content}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        카테고리\n                                    </Typography>\n                                    <div>\n                                        <hr></hr>\n                                    </div>\n                                    <Category />\n                                </div>\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                <div className={classes.content}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        디테일\n                                    </Typography>\n                                    <div>\n                                        <hr></hr>\n                                    </div>\n                                    <Detail />\n                                </div>\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                        <div className={classes.content}>\n                                            <Typography variant=\"h5\" component=\"h5\">\n                                                프린트\n                                            </Typography>\n                                            <div>\n                                                <hr></hr>\n                                            </div>\n                                            <Print />\n                                        </div>\n                                    </Grid>\n                                <Grid item xs={12} lg={6}>\n                                        <div className={classes.content}>\n                                            <Typography variant=\"h5\" component=\"h5\">\n                                              소재감\n                                            </Typography>\n                                            <div>\n                                                <hr></hr>\n                                            </div>\n                                            <Texture />\n                                        </div>\n                                    </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <div className={classes.content}>\n                                        <Typography variant=\"h5\" component=\"h5\">\n                                            기장\n                                        </Typography>\n                                        <div>\n                                            <hr></hr>\n                                        </div>\n                                        <ClothLength />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <div className={classes.content}>\n                                        <Typography variant=\"h5\" component=\"h5\">\n                                            넥라인\n                                        </Typography>\n                                        <div>\n                                            <hr></hr>\n                                        </div>\n                                        <NeckLine />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <div className={classes.content}>\n                                        <Typography variant=\"h5\" component=\"h5\">\n                                            칼라(카라)\n                                        </Typography>\n                                        <div>\n                                            <hr></hr>\n                                        </div>\n                                        <ColorKara />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <div className={classes.content}>\n                                        <Typography variant=\"h5\" component=\"h5\">\n                                            핏\n                                        </Typography>\n                                        <div>\n                                            <hr></hr>\n                                        </div>\n                                        <Fit />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <div className={classes.content}>\n                                        <Typography variant=\"h5\" component=\"h5\">\n                                            세이프\n                                        </Typography>\n                                        <div>\n                                            <hr></hr>\n                                        </div>\n                                        <Safe />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <div className={classes.content}>\n                                        <Typography variant=\"h5\" component=\"h5\">\n                                            실루엣\n                                        </Typography>\n                                        <div>\n                                            <hr></hr>\n                                        </div>\n                                        <Silhouette />\n                                    </div>\n\n                                </Grid>\n                                </Grid>\n                            </Grid>\n                    </div>\n                    <hr></hr>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm}>\n                        Previous\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleClickSubmit}>\n                        Next\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType2}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={this.handleClickSubmit}>\n                        Next Step\n                    </Button>\n                </Container>\n            );\n        }\n\n    };\n\nexport default withSnackbar(withRouter(withStyles(styles) (Step3)));","import React, {forwardRef} from \"react\";\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n@inject('fileUploadStore','authStore')\n@observer\nclass ImageList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            boundaryList: [],\n            count: 0,\n            data: [],\n            columns: [\n                {title: '번호', field: 'workNo',type: 'button', filterPlaceholder: 'GroupNo filter', tooltip: 'workNo로 정렬'},\n                {title: '등록자', field: 'createdId', type: 'text', initialEditValue: 'test', tooltip: 'This is tooltip text'},\n                {title: '생성일', field: 'createdDatetime', type: 'date'},\n            ],\n        }\n    }\n    componentDidMount() {\n        const createdId = this.props.authStore.isUserId;\n\n        axios.get('/api/v1/kfashion/img/boundaryList?createdId='+createdId)\n            .then(response => {\n                this.setState({ boundaryList : response.data.boundaryList.filter(b =>b !==null)})\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    render() {\n        const {boundaryList} = this.state;\n        const {classes} = this.props;\n        return (\n                <MaterialTable\n                icons={tableIcons}\n                columns={this.state.columns}\n                data={boundaryList}\n                title=\"이미지 리스트\"\n                editable={{\n                    onRowDelete: oldData =>\n                    new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                    {\n                    let data = this.state.data;\n                    const index = data.indexOf(oldData);\n                    data.splice(index, 1);\n                    this.setState({ data }, () => resolve());\n                    }\n                    resolve();\n                    }, 1000);\n                    }),\n                    }}\n                    actions={[\n                        {\n                        icon: Edit,\n                        tooltip: 'Select Image',\n                        onClick: (event, rowData) => {\n                        this.setState({imgData : \"/api/v1/kfashion/img/getByteImage?workNo=\"+rowData.workNo})\n                        console.log(rowData);\n                        }\n                     }\n                    ]}\n                />\n        );\n    }\n};\nexport default ImageList;","import React, { Component, ReactDOM } from 'react';\nimport {fabric} from 'fabric';\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {inject, observer} from \"mobx-react\";\nimport {Container, Toolbar, Typography, Button, Grid} from \"@material-ui/core\";\nimport {green, grey ,red} from \"@material-ui/core/colors\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport ImageList from \"./ImageList\";\n\n\nconst styles = theme => ({\n    root: {\n        width: \"100%\",\n        marginTop: theme.spacing.unit * 3,\n        overflowX: \"auto\"\n    },\n    table: {\n        minWidth: 500,\n    },\n    // --START Test\n    fab: {\n        margin: theme.spacing(2),\n    },\n    absolute: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(3),\n    },\n    // --END Test\n\n    mainContainer: {\n        flexGrow: 1,\n        marginTop:20,\n        maxWidth:'100%',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n        padding:0,\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n    toolButton:{\n        border:'1px solid black',\n        height:50,\n        width:'100%',\n    },\n    test:{\n        border:'1px solid black',\n        height: '50%',\n    },\n    toolBox:{\n        border:'1px solid black',\n        marginRight: 1,\n        height:'100%',\n    },\n    canvas:{\n        backgroundColor:'black',\n    },\n    fileText: {\n        paddingTop: 32,\n        paddingRight: theme.spacing(2),\n        textAlign: 'left'\n\n    },\n    filebox: {\n        paddingTop: 35,\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    fileSelection: {\n        position: 'absolute',\n        width: 1,\n        height: 1,\n        padding: 0,\n        margin: -1,\n        overflow: 'hidden',\n        clip: 'rect(0,0,0,0)',\n        border: 0,\n        borderRadius: 12,\n    },\n});\nfunction TabPanel(props) {\n    const { children, value, index } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && (\n                <Typography>{children}</Typography>\n            )}\n        </div>\n    );\n}\n\n\n@inject('fileUploadStore','imageStore','rectStore','authStore')\n@observer\nclass BoundaryBox extends React.Component {\n\n    i=0;\n    width;\n    height;\n    canvas;\n    text;\n    fill;\n    x;\n    y;\n    id = []\n\n    state = {\n        value:0,\n        winheight: 0,\n        winwidth: 0\n    }\n    handleTabChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    }\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"BoundaryBox Work\", {\n            variant: 'info'\n        });\n        this.setState({\n            boundaryList: this.props.imageStore.boundaryList,\n            imgData: `/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.workNo}`,\n            workNo: this.props.imageStore.workNo\n        })\n\n        this.canvas = this.__canvas = new fabric.Canvas('c');\n        this.canvas.setBackgroundImage(`/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.isWorkNo}`, this.canvas.renderAll.bind(this.canvas));\n\n        // // -- START  < Testing... >\n        // this.canvas.on('selection:created', function (e) {\n        //     const asd = e.target;\n        //     console.log('1. created');\n        // });\n        // this.canvas.on('selection:cleared', function (e) {\n        //     const asd = e.target;\n        //     console.log('2. cleared');\n        // });\n        // this.canvas.on('selection:updated', function (e) {\n        //     const asd = e.target;\n        //     console.log('3. updated');\n        // });\n        this.canvas.on('object:moving', function (e) {\n            const asd = e.target;\n            console.log(\"name : \"+asd.name);\n\n        });\n        // this.canvas.on('mouse:over', function (e) {\n        //     const asd = e.target;\n        //     console.log('5. mouse:over');\n        // });\n        // this.canvas.on('mouse:out', function (e) {\n        //     const asd = e.target;\n        //     console.log('6. mouse:out');\n        // });\n        // // --END  < Testing... >\n\n        // -- START  < rect가 canvas를 못벗어나도록... >\n        this.canvas.on('object:moving', function (e) {\n            const obj = e.target;\n            // if object is too big ignore\n            if(obj.height > obj.canvas.height || obj.width > obj.canvas.width){\n                return;\n            }\n            obj.setCoords();\n            // top-left  corner\n            if(obj.getBoundingRect().top < 0 || obj.getBoundingRect().left < 0){\n                obj.top = Math.max(obj.top, obj.top-obj.getBoundingRect().top);\n                obj.left = Math.max(obj.left, obj.left-obj.getBoundingRect().left);\n            }\n            // bot-right corner\n            if(obj.getBoundingRect().top+obj.getBoundingRect().height  > obj.canvas.height || obj.getBoundingRect().left+obj.getBoundingRect().width  > obj.canvas.width){\n                obj.top = Math.min(obj.top, obj.canvas.height-obj.getBoundingRect().height+obj.top-obj.getBoundingRect().top);\n                obj.left = Math.min(obj.left, obj.canvas.width-obj.getBoundingRect().width+obj.left-obj.getBoundingRect().left);\n            }\n        });\n\n        const left1 = 0;\n        const top1 = 0 ;\n        const scale1x = 0 ;\n        const scale1y = 0 ;\n        const width1 = 0 ;\n        const height1 = 0 ;\n        this.canvas.on('object:scaling', function (e){\n            const obj = e.target;\n            obj.setCoords();\n            const brNew = obj.getBoundingRect();\n\n            if (((brNew.width+brNew.left)>=obj.canvas.width) || ((brNew.height+brNew.top)>=obj.canvas.height) || ((brNew.left<0) || (brNew.top<0))) {\n                obj.left = left1;\n                obj.top=top1;\n                obj.scaleX=scale1x;\n                obj.scaleY=scale1y;\n                obj.width=width1;\n                obj.height=height1;\n            }\n            else{\n                this.left1 =obj.left;\n                this.top1 =obj.top;\n                this.scale1x = obj.scaleX;\n                this.scale1y=obj.scaleY;\n                this.width1=obj.width;\n                this.height1=obj.height;\n            }\n        });\n        // --END  < rect가 canvas를 못벗어나도록... >\n    }\n\n    addRect = (rectNo) => {\n        this.id = rectNo;\n        let obj = 0;\n        this.canvas.getObjects().forEach(function( o) {\n            if(o.id == rectNo) {\n                obj = o;\n            }\n        })\n        if(obj==0){\n            const rect = new fabric.Rect({\n                id : `${rectNo}`,\n                name : `${rectNo}`,\n                left: 100,\n                top: 100,\n                width: 200,\n                height: 200,\n                fill: grey,\n                opacity: 0.20\n            });\n\n            this.canvas.add(rect);\n            this.canvas.setActiveObject(rect);\n        }else {\n            alert('이미 존재합니다.');\n        }\n    }\n\n    deleteObject = (rectNo) => {\n        let obj = 0;\n        this.canvas.getObjects().forEach(function( o) {\n            console.log(\"o : \" +o.id);\n            if(o.id == rectNo) {\n                obj = o;\n            }\n        })\n        this.canvas.remove(obj);\n    }\n\n    SelectObject = (j) => {\n        let obj = 0;\n        this.canvas.getObjects().forEach(function( o) {\n            console.log(\"o : \" +o.id);\n            if(o.id === j) {\n                obj = o;\n            }\n        })\n        this.canvas.setActiveObject(obj);\n        this.canvas.renderAll();\n    }\n\n\n    submit = () => {\n        // let b =this.canvas.getObjects().count();\n        // console.log(b);\n        // let obj = [];\n        // let a = 0;\n        this.props.rectStore.objGet(this.canvas.getObjects());\n        this.props.rectStore.changeNewRectLocationCreatedId(this.props.authStore.loginUser.id);\n        this.props.rectStore.changeNewRectLocationWorkNo(this.props.imageStore.isWorkNo);\n        this.props.rectStore.doRectLocationUp();\n\n\n        // this.canvas.getObjects().forEach(function(o) {\n        //\n        //     obj = o;\n        //\n        //     a+=1;\n        // })\n\n\n        //     for (let j =0; j < a ; j++){\n        //\n        //         this.props.rectStore.changeNewRectLocationRectNo(this.canvas.item(j).id);\n        //         this.props.rectStore.changeNewRectLocationX(this.canvas.item(j).left);\n        //         this.props.rectStore.changeNewRectLocationY(this.canvas.item(j).top);\n        //         this.props.rectStore.changeNewRectLocationWidth(this.canvas.item(j).width);\n        //         this.props.rectStore.changeNewRectLocationHeight(this.canvas.item(j).height);\n        //         this.props.rectStore.changeNewRectLocationScaleX(this.canvas.item(j).scaleX);\n        //         this.props.rectStore.changeNewRectLocationScaleY(this.canvas.item(j).scaleY);\n        //         this.props.rectStore.changeNewRectLocationCreatedId(this.props.authStore.loginUser.id);\n        //         this.props.rectStore.changeNewRectLocationWorkNo(this.props.imageStore.isWorkNo);\n        //     }\n        //     this.props.rectStore.doRectLocationUp();\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Container component=\"main\" className={classes.mainContainer} style={{height:'97vh', border: '1px solid black'}}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} lg={5} style={{margin:\"auto\", display:\"block\"}}>\n                            <canvas id=\"c\" width= \"600\" height= \"550\"  >  </canvas>\n                        </Grid>\n\n                        <Grid item xs={12} lg={6}>\n                            <div className={classes.root}>\n                                <AppBar position=\"static\">\n                                    <Tabs value={this.state.value} onChange={this.handleTabChange} aria-label=\"simple tabs example\">\n                                        <Tab label=\"영역지정\" value={0} style={{minWidth:'50%'}}/>\n                                        <Tab label=\"이미지 리스트\" value={1} style={{minWidth:'50%'}}/>\n                                    </Tabs>\n                                </AppBar>\n                                <TabPanel value={this.state.value} index={0}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>영역</TableCell>\n                                                <TableCell>추가버튼</TableCell>\n                                                <TableCell>삭제버튼</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell>상의 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        onClick={() => this.addRect(1) } >\n                                                        rect <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteObject(1)}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell>하의 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        onClick={() => this.addRect(2) } >\n                                                        rect <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteObject(2)}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell>신발 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        onClick={() => this.addRect(3) } >\n                                                        rect <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteObject(3)}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell>가방 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        onClick={() => this.addRect(4) } >\n                                                        rect <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteObject(4)}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell>악세사리 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        onClick={() => this.addRect(5) } >\n                                                        rect <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteObject(5)}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n\n\n                            <div style={{backgroundColor: 'grey'}}>\n                                <div align=\"center\">\n                                    <Button onClick={this.submit} color={'#999999'}>submit </Button>\n                                </div>\n                            </div>\n                        </TabPanel>\n                            </div>\n                                <TabPanel value={this.state.value} index={1}>\n                                    <ImageList />\n                                </TabPanel>\n                        </Grid>\n                    </Grid>\n                </div>\n\n                <div>\n                    <hr></hr>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Previous\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Next\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType2}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Save and Next\n                    </Button>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (BoundaryBox)));","import React, { Component, ReactDOM } from 'react';\nimport {fabric} from 'fabric';\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography, Button, Grid} from \"@material-ui/core\";\nimport {green, grey ,red} from \"@material-ui/core/colors\";\nimport createBreakpoints from \"@material-ui/core/styles/createBreakpoints\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {ArrowLeftIcon} from \"@material-ui/pickers/_shared/icons/ArrowLeftIcon\";\nimport {KeyboardIcon} from \"@material-ui/pickers/_shared/icons/KeyboardIcon\";\nimport {TimeIcon} from \"@material-ui/pickers/_shared/icons/TimeIcon\";\nimport {DateRangeIcon} from \"@material-ui/pickers/_shared/icons/DateRangeIcon\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport {inject, observer} from \"mobx-react\";\n\n\nconst styles = theme => ({\n    root: {\n        width: \"100%\",\n        marginTop: theme.spacing.unit * 3,\n        overflowX: \"auto\"\n    },\n    table: {\n        minWidth: 500,\n    },\n    // --START Test\n    fab: {\n        margin: theme.spacing(2),\n    },\n    absolute: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(3),\n    },\n    // --END Test\n\n    mainContainer: {\n        flexGrow: 1,\n        marginTop:20,\n        maxWidth:'100%',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n        padding:0,\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n    toolButton:{\n        border:'1px solid black',\n        height:50,\n        width:'100%',\n    },\n    test:{\n        border:'1px solid black',\n        height: '50%',\n    },\n    toolBox:{\n        border:'1px solid black',\n        marginRight: 1,\n        height:'100%',\n    },\n    canvas:{\n        backgroundColor:'black',\n    },\n    fileText: {\n        paddingTop: 32,\n        paddingRight: theme.spacing(2),\n        textAlign: 'left'\n\n    },\n    filebox: {\n        paddingTop: 35,\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    fileSelection: {\n        position: 'absolute',\n        width: 1,\n        height: 1,\n        padding: 0,\n        margin: -1,\n        overflow: 'hidden',\n        clip: 'rect(0,0,0,0)',\n        border: 0,\n        borderRadius: 12,\n    },\n\n    divStyle: {\n        display: 'inline',\n    },\n});\n\n@inject('fileUploadStore','imageStore')\n@observer\nclass Polygon extends React.Component {\n    state = {\n        buttonDis1 : false,\n        buttonDis2 : false,\n        buttonDis3 : false,\n        buttonDis4 : false,\n        buttonDis5 : false,\n    }\n    save1 = false;\n    save2 = false;\n    save3 = false;\n    save4 = false;\n    save5 = false;\n\n    polyNo;\n    canvas;\n    x;\n    y;\n    lineTwoPoint=[];\n    polyPointX = [];\n    polyPointY = [];\n    lineCounter = 0;\n    polyCounter = 0;\n    onOff = '';\n    onOff2 = 1;\n\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Polygon Work\", {\n            variant: 'info'\n        });\n\n        // canvas Drawing\n        this.canvas = new fabric.Canvas('c');\n        this.canvas.setBackgroundImage(`/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.isWorkNo}`, this.canvas.renderAll.bind(this.canvas), {\n            left: 25,\n            top: 25,\n            width : 700,\n            height : 800,\n            originX: 'left',\n            originY: 'top'\n        });\n\n        this.canvas.on('selection:created', function (e) {\n            const asd = e.target;\n        });\n\n        this.canvas.on('mouse:move', function (e) {\n            const asd = e.x;\n        });\n\n        this.canvas.on('mouse:down', (e) => {\n            console.log('polyNo : ' + this.polyNo);\n            if (this.onOff == 'lineUse') {\n                this.canvas.selection = false;\n                this.polyPointX[this.polyCounter] = e.pointer.x;\n                this.polyPointY[this.polyCounter] = e.pointer.y;\n                this.lineTwoPoint = [this.x, this.y, e.pointer.x, e.pointer.y];\n                this.x = e.pointer.x;\n                this.y = e.pointer.y;\n\n                let circle = new fabric.Circle({\n                    type: 'circle',\n                    id: this.polyCounter,\n                    radius: 8,\n                    fill: 'green',\n                    left: e.pointer.x - 5,\n                    top: e.pointer.y - 5,\n                    selectable: false,\n                    evented: false,\n                });\n                this.canvas.add(circle);\n                this.canvas.bringToFront(circle)\n                this.canvas.renderAll();\n                this.polyCounter += 1;\n            }\n\n            console.log(this.polyPointX);\n            console.log(this.polyPointY);\n        });\n\n        this.canvas.on('mouse:up', (e) => {\n\n            let x1 = this.lineTwoPoint[0];\n            let x2 = this.lineTwoPoint[2];\n            let x3 = 0;\n            let y1 = this.lineTwoPoint[1];\n            let y2 = this.lineTwoPoint[3];\n            let y3 = 0;\n            if(x2 <x1){\n                x3 = x1;\n                x1 = x2;\n                x2 = x3;\n            }\n            if(y2 <y1){\n                y3 = y1;\n                y1 = y2;\n                y2 = y3;\n            }\n            if(this.onOff == 'lineUse' && x1 !=0 ){\n                let polyline = new fabric.Line(\n                    [this.lineTwoPoint[0],\n                        this.lineTwoPoint[1],\n                        this.lineTwoPoint[2],\n                        this.lineTwoPoint[3]], {\n                        id : this.lineCounter,\n                        type : 'line',\n                        fill: 'red',\n                        stroke: 'red',\n                        strokeWidth: 1,\n                        padding: 1,\n                        selectable : false,\n                        evented : false,\n                        left: x1,\n                        top: y1,\n                    });\n                this.canvas.add(polyline);\n                this.canvas.sendToBack(polyline);\n                this.lineCounter +=1;\n            }\n            this.canvas.selection = true;\n        });\n\n        // this.canvas.on('mouse:down', (options) => {\n        //\n        //     if (this.drawingObject.type === \"roof\") {\n        //         console.log(\"if?\");\n        //         this.canvas.selection = false;\n        //         this.setStartingPoint(options); // set x,y\n        //         this.roofPoints.push(this.Point(this.x, this.y));\n        //         let points = [this.x, this.y, this.x, this.y];\n        //         this.lines.push(new fabric.Line(points, {\n        //             strokeWidth: 3,\n        //             selectable: false,\n        //             stroke: 'red'\n        //         }).set('originX', this.x).set('originY', this.y));\n        //             // .setOriginX(this.x).setOriginY(toString(this.y)));\n        //\n        //\n        //         this.canvas.add(this.lines[this.lineCounter]);\n        //         this.lineCounter++;\n        //         this.canvas.on('mouse:up', (options) =>{\n        //             this.canvas.selection = true;\n        //             this.canvas.renderAll();\n        //         });\n        //     }\n        // });\n        // this.canvas.on('mouse:move', function (options) {\n        //     if (this.lines[0] != null && this.lines[0] != undefined && this.drawingObject.type == \"roof\") {\n        //         this.setStartingPoint(options);\n        //         this.lines[this.lineCounter - 1].set({\n        //             x2: this.x,\n        //             y2: this.y\n        //         });\n        //         this.canvas.renderAll();\n        //     }\n        // });\n    }\n\n\n    startPoly = (polyNo) => {\n        this.onOff = 'lineUse';\n        this.polyNo = polyNo;\n\n        this.setState({\n            buttonDis1: true,\n            buttonDis2: true,\n            buttonDis3: true,\n            buttonDis4: true,\n            buttonDis5: true,\n        });\n        console.log(polyNo);\n        switch (polyNo) {\n            case 1 : console.log('1'); this.setState({buttonDis1: false}); break;\n            case 2 : console.log('2');this.setState({buttonDis2: false}); break;\n            case 3 : console.log('3');this.setState({buttonDis3: false}); break;\n            case 4 : console.log('4');this.setState({buttonDis4: false}); break;\n            case 5 : console.log('5');this.setState({buttonDis5: false}); break;\n         }\n    }\n\n    deleteOne = () => {\n        let j = (this.polyCounter);\n        let line = 0;\n        let circle = 0;\n        this.canvas.getObjects().forEach(function( o) {\n            if(o.id == j-1 && o.type == 'line')     line = o;\n            if(o.id == j-1 && o.type == 'circle')   circle = o;\n        })\n        this.canvas.remove(line);\n        this.canvas.remove(circle);\n\n        let x1 =this.polyPointX[this.polyCounter -2];\n        let y1 =this.polyPointY[this.polyCounter -2];\n        this.x = x1;\n        this.y = y1;\n        this.polyCounter -=1;\n        this.lineCounter -=1;\n        this.polyPointX[this.polyCounter] = 0;\n        this.polyPointY[this.polyCounter] = 0;\n\n\n    }\n\n    deleteAll = (b) =>{\n        let objList =[];\n        this.canvas.getObjects().forEach(function( o) {\n            objList.push(o);\n        })\n        for (let i=0 ; i<=objList.length; i++ ){\n            this.canvas.remove(objList[i]);\n        }\n\n\n\n        if( b != -1) {\n            this.x = 0;\n            this.y = 0;\n            this.polyCounter =0;\n            this.lineCounter =0;\n            this.polyPointX.length =0;\n            this.polyPointY.length =0;\n           this.buttonState();\n        }\n    }\n\n    buttonState = () => {\n        console.log(\"왜안나와?\");\n        this.setState({\n            buttonDis1: this.save1,\n            buttonDis2: this.save2,\n            buttonDis3: this.save3,\n            buttonDis4: this.save4,\n            buttonDis5: this.save5,\n        });\n    }\n    finishPath = () => {\n\n\n        if(this.canvas.getObjects().length !=0) {\n            console.log(\"여기는 피니시\");\n            this.onOff = '';\n            let makePath = 'M' + this.polyPointX[0] + ' ' + this.polyPointY[0];\n            for (let i = 1; i < this.polyCounter; i++) {\n                makePath += ' L ' + this.polyPointX[i] + ' ' + this.polyPointY[i];\n            }\n            makePath += ' z';\n            let path = new fabric.Path(makePath);\n            this.deleteAll(-1);\n            this.canvas.add(path);\n        }else{\n            alert(\"입력된 polygon이 존재하지 않습니다.\");\n        }\n    }\n\n    submit = (polyNo) => {\n        console.log(this.polyNo);\n        console.log(this.polyPointX);\n        console.log(this.polyPointY);\n        console.log(this.canvas.getObjects().length);\n        console.log(this.canvas.getObjects());\n\n\n        if(this.canvas.getObjects().length !=0){\n            switch (polyNo) {\n                case 1 : console.log('1');this.save1 = true; break;\n                case 2 : console.log('2');this.save2 = true; break;\n                case 3 : console.log('3');this.save3 = true; break;\n                case 4 : console.log('4');this.save4 = true; break;\n                case 5 : console.log('5');this.save5 = true; break;\n            }\n            this.buttonState();\n        }else{\n            alert(\"입력된 polygon이 존재하지 않습니다.\");\n        }\n\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer}/>\n                <div className={classes.mainContent}>\n                    <Grid container spacing={3}>\n\n                        <Grid item xs={12} lg={5} style={{margin:\"auto\"}}>\n                            <div style ={{ backgroundColor : \"#13264E\"}}>\n                                <canvas id=\"c\" width= \"750\" height= \"850\"  >  </canvas>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} lg={6}>\n                            <div className={classes.mainContent}>\n                                <Typography variant=\"h4\" component=\"h2\">\n                                    Polygon 영역 지정\n                                </Typography>\n                                <Paper className={classes.root}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>영역</TableCell>\n                                                <TableCell>poly start</TableCell>\n                                                <TableCell>poly finish</TableCell>\n                                                <TableCell>delete One</TableCell>\n                                                <TableCell>delete All</TableCell>\n                                                <TableCell>save</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n\n                                        <TableBody>\n                                            <TableRow >\n                                                <TableCell>상의 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        id=\"1\"\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Draw Polygon\"\n                                                        onClick={() => this.startPoly(1) }\n                                                        disabled={this.state.buttonDis1}>\n                                                        start <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        id=\"2\"\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"finish\"\n                                                        onClick={() => this.finishPath() }\n                                                        disabled={this.state.buttonDis1}>\n                                                        finish\n                                                    </Button>\n\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton id=\"3\" aria-label=\"delete\" onClick={() => this.deleteOne()} disabled={this.state.buttonDis1}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        id=\"4\"\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.deleteAll(1) }\n                                                        disabled={this.state.buttonDis1}>\n                                                        All<DeleteIcon />\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        id=\"5\"\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.submit(1) }\n                                                        startIcon={<SaveIcon />}\n                                                        disabled={this.state.buttonDis1}>\n                                                        save\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody >\n                                            <TableRow>\n                                                <TableCell>하의 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Draw Polygon\"\n                                                        onClick={() => this.startPoly(2) }\n                                                        disabled={this.state.buttonDis2}>\n                                                        start <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"finish\"\n                                                        onClick={() => this.finishPath() }\n                                                        disabled={this.state.buttonDis2}>\n                                                        finish\n                                                    </Button>\n\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteOne()} disabled={this.state.buttonDis2}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.deleteAll(2) }\n                                                        disabled={this.state.buttonDis2}>\n                                                        All<DeleteIcon />\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.submit(2) }\n                                                        disabled={this.state.buttonDis2}>\n                                                        save\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell>신발 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Draw Polygon\"\n                                                        onClick={() => this.startPoly(3) }\n                                                        disabled={this.state.buttonDis3}>\n                                                        start <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"finish\"\n                                                        onClick={() => this.finishPath() }\n                                                        disabled={this.state.buttonDis3}>\n                                                        finish\n                                                    </Button>\n\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteOne()} disabled={this.state.buttonDis3}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.deleteAll(3) }\n                                                        disabled={this.state.buttonDis3} >\n                                                        All<DeleteIcon />\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.submit(3) }\n                                                        disabled={this.state.buttonDis3} >\n                                                        save\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell>가방 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Draw Polygon\"\n                                                        onClick={() => this.startPoly(4) }\n                                                        disabled={this.state.buttonDis4}>\n                                                        start <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"finish\"\n                                                        onClick={() => this.finishPath() }\n                                                        disabled={this.state.buttonDis4} >\n                                                        finish\n                                                    </Button>\n\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteOne()} disabled={this.state.buttonDis4}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.deleteAll(4) }\n                                                        disabled={this.state.buttonDis4}>\n                                                        All<DeleteIcon />\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.submit(4) }\n                                                        disabled={this.state.buttonDis4}>\n                                                        save\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                        <TableBody>\n                                            <TableRow >\n                                                <TableCell>악세사리 영역</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Draw Polygon\"\n                                                        onClick={() => this.startPoly(5) }\n                                                        disabled={this.state.buttonDis5} >\n                                                        start <AddIcon/>\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"finish\"\n                                                        onClick={() => this.finishPath() }\n                                                        disabled={this.state.buttonDis5}>\n                                                        finish\n                                                    </Button>\n\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"Delete\">\n                                                        <IconButton aria-label=\"delete\" onClick={() => this.deleteOne()}  disabled={this.state.buttonDis5}>\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.deleteAll(5) }\n                                                        disabled={this.state.buttonDis5}>\n                                                        All<DeleteIcon />\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        className={classes.buttonType1}\n                                                        variant=\"outlined\"\n                                                        title=\"Delete All\"\n                                                        onClick={() => this.submit(5) }\n                                                        disabled={this.state.buttonDis5}>\n                                                        save\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n\n                                    </Table>\n                                </Paper>\n                            </div>\n\n                            <div style={{backgroundColor: 'grey'}}>\n                                <div align=\"center\">\n                                    <Button onClick={this.submit} color={'#999999'}>submit </Button>\n                                </div>\n                            </div>\n\n                            {/*<div className={classes.mainContent} >*/}\n                            {/*    <div>*/}\n                            {/*        <div style={{display: \"inline-block\"}}>*/}\n                            {/*            <Button id=\"poly\" title=\"Draw Polygon\" onClick={this.startPoly}>start</Button>*/}\n                            {/*        </div>*/}\n                            {/*        <div style={{display: \"inline-block\"}}>*/}\n                            {/*            <Button id=\"poly\" title=\"Draw Polygon\" onClick={this.finishPath}>finish</Button>*/}\n                            {/*        </div>*/}\n                            {/*        <div style={{display: \"inline-block\"}} align=\"right\">*/}\n                            {/*            <Button id=\"poly\" title=\"Draw Polygon\" onClick={this.deleteOne}>deleteOne</Button>*/}\n                            {/*        </div>*/}\n                            {/*    </div>*/}\n\n\n                            {/*    <div style={{backgroundColor: 'grey'}}>*/}\n                            {/*        <div align=\"right\">*/}\n                            {/*            <Button onClick={this.submit}>submit </Button>*/}\n                            {/*        </div>*/}\n                            {/*    </div>*/}\n                            {/*</div>*/}\n\n                        </Grid>\n                    </Grid>\n\n                </div>\n\n                {/*Stepper*/}\n                <div style={{marginTop:70}}>\n                </div>\n                <div>\n                    <hr></hr>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Previous\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Next\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType2}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Save and Next\n                    </Button>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Polygon)));","import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nexport const State = {\n    Authenticated: 'Authenticated',\n    NotAuthenticated: 'NotAuthenticated',\n    Pending: 'Pending',\n    Failed: 'Failed',\n};\n\nexport const LocalStorageTokenKey = '_BASKITOP_AUTHENTICATION_TOKEN_';\nexport const LocalStorageSaveIdKey = \"Kfashion_AUTHENTICATION_SAVE_ID_\";\nexport const LocalStorageSaveEmailKey = \"_Kfashion_AUTHENTICATION_EMAIL_\";\nexport const LocalStorageSaveNameKey = \"_Kfashion_AUTHENTICATION_NAME_\";\nexport const LocalStorageSaveIsAdminKey = \"_Kfashion_AUTHENTICATION_ISADMIN_\";\nexport const LocalStorageSaveIsApprovedKey = \"_Kfashion_AUTHENTICATION_ISAPPROVED_\";\nexport const LocalStorageSaveGroupAdminKey = \"_Kfashion_AUTHENTICATION_GROUPADMIN_\";\nexport const LocalStorageSaveGroupNoKey = \"_Kfashion_AUTHENTICATION_GROUPNO_\";\nexport const LocalStorageSaveAuthorityNoKey = \"_Kfashion_AUTHENTICATION_AUTHORITYNO_\";\n\n\n\nconst EmptyLogin = {\n    id: '',\n    password: '',\n};\n\nconst EmptyUser = {\n    id: '',\n    name: '',\n    email: '',\n    phone: '',\n    groupNo: '',\n    isAdmin: '',\n    isApproved: '',\n    authorityNo: '',\n    groupAdmin: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n\n};\n\nexport default class AuthStore {\n    @observable login = Object.assign({}, EmptyLogin);\n    @observable loginState = State.NotAuthenticated;\n    @observable loginToken = '';\n    @observable saveId = false;\n    @observable loginUser = Object.assign({}, EmptyUser);\n\n    // @action checkLoginId = () => {\n    //     const savedId = localStorage.getItem(LocalStorageSaveIdKey);\n    //     const saveEmail = localStorage.getItem(LocalStorageSaveEmailKey);\n    //     const saveName = localStorage.getItem(LocalStorageSaveNameKey);\n    //     const saveIsAdmin = localStorage.getItem(LocalStorageSaveIsAdminKey)\n    //     const saveIsApproved = localStorage.getItem(LocalStorageSaveIsApprovedKey)\n    //     const saveGroupAdmin = localStorage.getItem(LocalStorageSaveGroupAdminKey)\n    //     const saveSaveGroupNo = localStorage.getItem(LocalStorageSaveGroupNoKey)\n    //     const saveSaveAuthorityNo = localStorage.getItem(LocalStorageSaveAuthorityNoKey)\n    //\n    // };\n    @action changeLoginId = (id) => {\n        this.login.id = id;\n    };\n\n    @action changeLoginPassword = (password) => {\n        this.login.password = password;\n    };\n\n    @action logOut = pathname => {\n        // if(pathname.startsWith(\"/broadcast/\")) {\n        if (window.confirm(\"로그아웃 하시겠습니까?\")) {\n            this.doLogout();\n        }\n        // } else {\n        //     this.doLogout();\n        // }\n    };\n\n    @computed get isUserId() {\n       return this.loginUser.id;\n    }\n\n    @action invalidateLogin = () => {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n    };\n\n    doLogin = flow(function* doLogin() {\n        this.loginState = State.Pending;\n\n        try {\n            const param = this.login;\n            const response = yield axios.post('/api/v1/kfashion/authentications/signin', param);\n            const token = response.data.token;\n            const user = response.data;\n\n            localStorage.setItem(LocalStorageTokenKey, token);\n\n            console.log('doLogin');\n\n            this.loginState = State.Authenticated;\n            this.loginToken = token;\n            this.loginUser = user;\n            console.log(this.loginUser)\n        } catch (e) {\n            this.loginState = State.Failed;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n\n        }\n    });\n\n    checkLogin = flow(function* checkLogin() {\n        const token = localStorage.getItem(LocalStorageTokenKey);\n\n        if(token) {\n            try {\n                const response = yield axios.get('/api/v1/kfashion/authentications/signcheck');\n                const token = response.data.token;\n                const user = response.data;\n                console.log( 'user:', user)\n                this.loginState = State.Authenticated;\n                this.loginToken = token;\n                this.loginUser = user;\n                console.log(this.loginUser)\n\n            } catch(e) {\n                this.loginState = State.NotAuthenticated;\n                this.loginToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        }\n    });\n\n    doLogout = flow(function* doLogout() {\n        localStorage.removeItem(LocalStorageTokenKey);\n\n        try {\n            yield axios.post('/api/v1/kfashion/authentications/signout');\n\n            console.log(this);\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        } catch(e) {\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n}","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {inject, observer} from \"mobx-react\";\n\nimport {Avatar, Button, CircularProgress, Container, TextField, Typography} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport * as store from \"../stores/AuthStore\";\n\n\nconst style = theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    lockOpenAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    lockOutAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\n@inject('authStore')\n@observer\nclass SignIn extends React.Component {\n    handleChangeId = (e) => {\n        this.props.authStore.changeLoginId(e.target.value);\n    }\n\n    handleChangePassword = (e) => {\n        this.props.authStore.changeLoginPassword(e.target.value);\n    }\n\n    handleKeyUpPassword = (e) => {\n        if(e.keyCode === 13) {\n            this.props.authStore.doLogin();\n        }\n    }\n\n    handleSubmitForm = (e) => {\n        this.props.authStore.doLogin();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loginState, login } = this.props.authStore;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <div className={classes.appBarSpacer} />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.lockOutAvatar}><LockOutlinedIcon/></Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {loginState === store.State.Failed ? 'Sign in failed.' : 'Please sign in.'}\n                        </Typography>\n                        <div className={classes.form}>\n                            <TextField id=\"id\"\n                                       name=\"id\"\n                                       label=\"ID\"\n                                       variant=\"outlined\"\n                                       margin=\"normal\"\n                                       value={login.id}\n                                       onChange={this.handleChangeId}\n                                       required fullWidth />\n                            <TextField id=\"password\"\n                                       name=\"password\"\n                                       label=\"Password\"\n                                       type=\"password\"\n                                       variant=\"outlined\"\n                                       margin=\"normal\"\n                                       value={login.password}\n                                       onChange={this.handleChangePassword}\n                                       onKeyUp={this.handleKeyUpPassword}\n                                       required fullWidth />\n                            <Button type=\"submit\"\n                                    className={classes.submit}\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    disabled={loginState === store.State.Pending}\n                                    onClick={this.handleSubmitForm}\n                                    fullWidth >\n                                {loginState === store.State.Pending ? <CircularProgress size={22}/> : 'Sign In'}\n                            </Button>\n                        </div>\n                    </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(style) (SignIn)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {inject, observer} from \"mobx-react\";\n\nimport {\n    Button,\n    Checkbox,\n    CircularProgress,\n    Container,\n    FormControlLabel,\n    Grid,\n    Link,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport axios from \"axios\";\n\n\n\nconst style = theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom:'20px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent:'center',\n        padding: '60px 80px 40px 80px',\n        border:'1px solid #ddd',\n        //marginBottom:theme.spacing(2),\n        backgroundColor:'#fff',\n        [theme.breakpoints.down(\"sm\")]: {\n            padding:'0',\n            border:'0 none',\n        },\n    },\n    mainTitle: {\n        textAlign: 'center',\n        margin: theme.spacing(2, 0, 0),\n        padding: theme.spacing(1, 0),\n        fontWeight:'700'\n    },\n    mainContent: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    mainComment:{\n        textAlign: 'right',\n    },\n    checkAgreeMargin: {\n        marginTop: theme.spacing(3),\n    },\n    titleArea:{\n        position:'relative'\n    },\n    checkAgreeTotal:{\n        padding:'0 4px 0 0',\n    },\n    termsCaption:{\n        fontSize:'12px',\n        color:'#c1c1c1',\n        fontWeight:'600'\n    },\n    gutterMargin:{\n        margin:theme.spacing(3, 0, 2),\n        '& input[type=password]':{\n            fontFamily:'initial',\n        }\n    },\n    okButton: {\n        borderRadius: 24,\n    },\n\n    successContainer: {\n        textAlign: 'center',\n    },\n    successTitle: {\n        fontSize: 38,\n        color: '#333333',\n        paddingTop: theme.spacing(6),\n    },\n    successHeader: {\n        fontSize: 16,\n        color: '#333333',\n        paddingTop: theme.spacing(5),\n    },\n    successHeader2: {\n        fontSize: 16,\n        color: '#333333',\n    },\n    successBody: {\n        fontSize: 14,\n        color: '#b7b7b7',\n        paddingTop: theme.spacing(1),\n    },\n    successButton: {\n        borderRadius: 24,\n        fontSize: 16,\n        width: 200,\n        height: 48,\n        marginTop: theme.spacing(4),\n    },\n});\n\nconst decodeURLParams = search => {\n    const hashes = search.slice(search.indexOf(\"?\") + 1).split(\"&\");\n    return hashes.reduce((params, hash) => {\n        const split = hash.indexOf(\"=\");\n\n        if (split < 0) {\n            return Object.assign(params, {\n                [hash]: null\n            });\n        }\n\n        const key = hash.slice(0, split);\n        const val = hash.slice(split + 1);\n\n        return Object.assign(params, { [key]: decodeURIComponent(val) });\n    }, {});\n};\n\n@inject('signUpStore')\n@observer\nclass SignUp extends React.Component {\n    componentDidMount() {\n        const params = decodeURLParams(this.props.location.search);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.signUpStore.isSignUpFailed) {\n            this.props.enqueueSnackbar('회원 가입에 실패하였습니다.', {\n                variant: 'error'\n            });\n\n            this.props.signUpStore.clearState();\n        }\n\n        if(this.props.signUpStore.isNotAvailableEmail) {\n            this.props.enqueueSnackbar('이미 사용중인 이메일 입니다.', {\n                variant: 'error'\n            });\n\n            this.props.signUpStore.clearState();\n        }\n\n    }\n    handleChangeId = (event) => {\n        this.props.signUpStore.changeNewMemberId(event.target.value);\n    }\n\n    handleChangeEmail = (event) => {\n        this.props.signUpStore.changeNewMemberEmail(event.target.value);\n    }\n\n    handleChangePassword = (event) => {\n        this.props.signUpStore.changeNewMemberPassword(event.target.value);\n    }\n\n    handleChangePasswordConfirm = (event) => {\n        this.props.signUpStore.changeNewMemberPasswordConfirm(event.target.value);\n    }\n\n    handleChangeUserName = (event) => {\n        this.props.signUpStore.changeNewMemberUserName(event.target.value);\n    }\n\n    handleChangePhone = (event) => {\n        this.props.signUpStore.changeNewMemberPhone(event.target.value);\n    }\n\n    handleChangeAllAgreements = (event) => {\n        this.props.signUpStore.changeAgreementsAll(event.target.checked);\n    }\n\n    handleChangeServiceAgreements = (event) => {\n        this.props.signUpStore.changeAgreementsService(event.target.checked);\n    }\n\n    handleChangePrivacyAgreements = (event) => {\n        this.props.signUpStore.changeAgreementsPrivacy(event.target.checked);\n    }\n\n    handleClickOK = () => {\n        this.props.signUpStore.doSignUp();\n\n    }\n\n    handleClickToHome = () => {\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { isEmailInputed, isValidId, isValidEmail, isValidPassword, isPasswordConfirmed, isValidUsername, isValidPhone, isPending, isSignUpSuccess, canSignUp, newMember, agreements, serverMode} = this.props.signUpStore;\n\n        return (\n            <React.Fragment>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <div className={classes.appBarSpacer} />\n                    <div className={classes.paper}>\n                        <img src=\"https://placeimg.com/100/100/any\" alt={\"\"}/>\n                        {!isSignUpSuccess ?\n                            <div className={classes.mainContent}>\n                                <Typography className={classes.mainTitle} component=\"h1\" variant=\"h3\" >\n                                    회원가입\n                                </Typography>\n\n                                <Grid container>\n                                    <Grid item xs={12}>\n                                        <Typography variant=\"body2\" className={classes.mainComment}>* 필수입력</Typography>\n                                    </Grid>\n                                </Grid>\n                               <TextField id=\"id\"\n                                           name=\"id\"\n                                           label=\"아이디\"\n                                           margin=\"dense\"\n                                           value={newMember.id}\n                                           onChange={this.handleChangeId}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidPassword ? '' : '최소 4 글자 이상을 입력해 주세요.'}\n                                           autoFocus={isValidId ? false : true} required fullWidth/>\n                                <TextField id=\"email\"\n                                           name=\"email\"\n                                           label=\"이메일 주소\"\n                                           margin=\"dense\"\n                                           value={newMember.email}\n                                           onChange={this.handleChangeEmail}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidEmail ? '' : '이메일 형식이 아닙니다.'}\n                                           autoFocus={isEmailInputed ? false : true} required fullWidth/>\n                                <TextField id=\"password\"\n                                           type=\"password\"\n                                           name=\"password\"\n                                           label=\"비밀번호\"\n                                           margin=\"dense\"\n                                           autoComplete={\"off\"}\n                                           value={newMember.password}\n                                           onChange={this.handleChangePassword}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidPassword ? '' : '최소 4 글자 이상을 입력해 주세요.'}\n                                           autoFocus={isValidPassword ? true : false} required fullWidth/>\n                                <TextField id=\"passwordConfirm\"\n                                           type=\"password\"\n                                           name=\"passwordConfirm\"\n                                           label=\"비밀번호 확인\"\n                                           margin=\"dense\"\n                                           autoComplete={\"off\"}\n                                           value={newMember.passwordConfirm}\n                                           onChange={this.handleChangePasswordConfirm}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isPasswordConfirmed ? '' : '패스워드가 일치하지 않습니다.'}\n                                           required fullWidth/>\n                                <TextField id=\"name\"\n                                           name=\"name\"\n                                           label=\"이름\"\n                                           margin=\"dense\"\n                                           value={newMember.userName}\n                                           onChange={this.handleChangeUserName}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidUsername ? '' : '최소 2 글자 이상을 입력해 주세요.'}\n                                           required fullWidth/>\n                                <TextField id=\"phone\"\n                                           name=\"phone\"\n                                           label=\"휴대폰\"\n                                           margin=\"dense\"\n                                           value={newMember.phone}\n                                           onChange={this.handleChangePhone}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidPhone ? '' : 'EX)010-1234-5678 입력해주세요.'}\n                                           required fullWidth/>\n                                <div className={classes.titleArea}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        약관 동의자\n                                    </Typography>\n                                    <hr></hr>\n                                    <FormControlLabel\n                                        variant=\"body2\"\n                                        name=\"checkAgreeTotal\"\n                                        style={{paddingLeft: 9}}\n                                        control={\n                                            <Checkbox\n                                                checked={agreements.all}\n                                                onChange={this.handleChangeAllAgreements}\n                                                color=\"primary\"\n                                                className={classes.checkAgreeTotal}\n                                            />\n                                        }\n                                        label=\"전체 동의\"\n                                    />\n                                </div>\n                                <Grid item xs={12} style={{display: 'flex'}}>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            name=\"checkAgreeService\"\n                                            control={\n                                                <Checkbox\n                                                    checked={agreements.service}\n                                                    onChange={this.handleChangeServiceAgreements}\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"서비스 이용 약관\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs align={\"right\"}>\n                                        <Link underline={\"always\"} href=\"/terms/terms\"\n                                              className={classes.termsCaption}>내용보기</Link>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} style={{display: 'flex'}}>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            name=\"checkAgreePersonal\"\n                                            control={\n                                                <Checkbox\n                                                    checked={agreements.privacy}\n                                                    onChange={this.handleChangePrivacyAgreements}\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"개인 정보 처리 방침\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs align={\"right\"}>\n                                        <Link underline={\"always\"} href=\"/terms/privacy\"\n                                              className={classes.termsCaption}>내용보기</Link>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} align={\"center\"}>\n                                    <Button color=\"primary\" variant=\"contained\" className={classes.okButton}\n                                            disabled={(!canSignUp) || (isPending)}\n                                            onClick={this.handleClickOK}\n                                            fullWidth>\n                                        {isPending ? <CircularProgress size={16}/> : '회원 가입'}\n                                    </Button>\n                                </Grid>\n                            </div>\n                            :\n                            ''\n                        }\n                        {isSignUpSuccess ?\n                            <div className={classes.successContainer}>\n                                {serverMode === 'SERVER' ?\n                                    <React.Fragment>\n                                        <Typography className={classes.successTitle}>회원 가입 신청 완료</Typography>\n                                        <Typography className={classes.successHeader}>{`${newMember.email}로 회원 가입 신청 되었습니다.`}</Typography>\n                                        <Typography className={classes.successHeader2}>가입이 완료 되려면 관리자의 승인이 필요합니다.</Typography>\n                                        <Typography className={classes.successBody}>승인 후에 ONTHELIVE의 서비스를<br/> 이용하실 수 있습니다.</Typography>\n                                    </React.Fragment>\n                                    :\n                                    <React.Fragment>\n                                        <Typography className={classes.successTitle}>회원 가입 완료</Typography>\n                                        <Typography className={classes.successHeader}>{`${newMember.email}로 전송된 이메일을 확인하여`}</Typography>\n                                        <Typography className={classes.successHeader2}>가입절차를 완료해 주세요.</Typography>\n                                        <Typography className={classes.successBody}>이메일인증 완료 후에 Kfashion의 서비스를<br/> 이용하실 수 있습니다.</Typography>\n                                    </React.Fragment>\n                                }\n                                <Button color=\"primary\" variant=\"contained\"\n                                        className={classes.successButton}\n                                        onClick={() => this.handleClickToHome()}>\n                                    메인으로 가기\n                                </Button>\n                            </div>\n                            :\n                            ''\n                        }\n                    </div>\n                    <Grid container style={{ backgroundColor: '#fafafa', paddingBottom: 30}}>\n                        <Grid container item xs={12} style={{paddingTop: 16}} >\n                            <Grid item xs={12} style={{display: 'flex', justifyContent: 'center', paddingBottom: 16}}>\n                                <ErrorIcon style={{width: 16, height: 16, paddingTop: 2, paddingRight: 2}} /><Typography variant=\"subtitle2\">로그인 시스템</Typography>\n                            </Grid>\n                            <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n                                <Typography variant=\"body2\" style={{textAlign: 'left'}}>\n                                    회원 가입을 통해 <b>생성되는 아이디는 그룹 관리자 계정</b>입니다.<br/>\n                                    일반 계정은 로그인 후, 그룹 메뉴를 통해 직접 생성하시면 됩니다.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </React.Fragment>\n        );\n    }\n};\nexport default withSnackbar(withRouter(withStyles(style) (SignUp)));","import React from 'react'\nimport { post } from 'axios';\nimport axios from \"axios\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n});\n\nclass AddGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            groupName: '',\n            authorityNo:'',\n            open: false\n        }\n\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n        this.handleValueChange = this.handleValueChange.bind(this)\n        this.addGroup = this.addGroup.bind(this)\n        this.handleClickOpen = this.handleClickOpen.bind(this)\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault()\n        this.addGroup()\n            .then((response) => {\n                console.log(response.data);\n            })\n        this.setState({\n            groupName: '',\n            authorityNo: '',\n            open: false\n        })\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n\n\n    addGroup(){\n        const url = '/api/v1/kfashion/group/create';\n        const formData = new FormData();\n        formData.append('groupName', this.state.groupName)\n        formData.append('authorityNo', this.state.authorityNo)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        return post(url, formData, config)\n    }\n\n\n\n    handleClickOpen() {\n        this.setState({\n            open: true\n        });\n    }\n\n\n\n    handleClose() {\n        this.setState({\n            groupName: '',\n            authorityNo:'',\n            open: false\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>그룹 추가</Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>그룹 추가</DialogTitle>\n                    <DialogContent>\n                        <TextField label=\"그룹명\" type=\"text\" name=\"groupName\" value={this.state.groupName} onChange={this.handleValueChange} />\n                        <div style={{display:'inline-block'}}>\n                            <FormControl >\n                        <InputLabel id=\"demo-simple-select-label\">그룹권한</InputLabel>\n                        <Select style={{width: 130, marginLeft:10}}\n                            labelId=\"demo-simple-select-label\"\n                            onChange={this.handleValueChange}\n                            name='authorityNo'\n                        >\n                            <MenuItem value={1}>ImageUpload</MenuItem>\n                            <MenuItem value={2}>BoundaryBox</MenuItem>\n                            <MenuItem value={3}>Polygon</MenuItem>\n                            <MenuItem value={4}>Basic</MenuItem>\n                            <MenuItem value={5}>Professional</MenuItem>\n                        </Select>\n                            </FormControl>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(AddGroup)","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from \"axios\";\nimport {Button, Container, Grid} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport AddGroup from \"./AddGroup\";\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default class CreateGroupDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            text: 'text',\n            userGroupAuthorityList: [],\n            data: [],\n            columns: [\n                {title: '번호', field: 'groupNo', filterPlaceholder: 'GroupNo filter', tooltip: 'GroupNo로 정렬'},\n                {title: '그룹명', field: 'groupName', initialEditValue: 'test', tooltip: 'This is tooltip text'},\n                {title: '그룹권한', field: 'authorityName', type: 'date'},\n                {title: '생성일', field: 'createdDatetime', type: 'date'},\n                {title: '수정일', field: 'updatedDatetime', type: 'date'},\n            ],\n        }\n        this.handleClickOpen = this.handleClickOpen.bind(this)\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        this.setState({ open : false })\n        axios.get('/api/v1/kfashion/userGroupAuthority/userGroupAuthorityList')\n            .then(response => {\n                this.setState({ userGroupAuthorityList : response.data})\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleClickOpen() {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n    render() {\n        const {userGroupAuthorityList} = this.state.userGroupAuthorityList;\n        return (\n            <div style={{maxWidth:\"100%\"}}>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>그룹 관리</Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}\n                        maxWidth={\"md\"}\n                        fullWidth={\"100%\"}\n                >\n                    <DialogContent>\n                    <MaterialTable\n                        icons={tableIcons}\n                        columns={this.state.columns}\n                        data={userGroupAuthorityList}\n                        title=\"그룹 리스트\"\n                        /*editable={{\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    setTimeout(() => {\n                                        {\n                                            /!* let data = this.state.data;\n                                            const index = data.indexOf(oldData);\n                                            data.splice(index, 1);\n                                            this.setState({ data }, () => resolve()); *!/\n                                        }\n                                        resolve();\n                                    }, 1000);\n                                })\n                        }}*/\n                    />\n                <hr></hr>\n                            <Button style={{float:\"right\"}} variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    <AddGroup />\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\n\n@inject('adminAuthorityStore')\n@observer\nexport default class GroupList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: 'text',\n            userGroupAuthorityList: [],\n            selectedOption:null,\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/kfashion/userGroupAuthority/userGroupAuthorityList')\n            .then(response => {\n                const userGroupAuthorityList = response.data.userGroupAuthorityList;\n                this.setState({\n                    userGroupAuthorityList: userGroupAuthorityList.map(userGroupList => {\n                        userGroupList.value = userGroupList.no;\n                        userGroupList.label = userGroupList.groupName;\n                        return userGroupList\n                    })\n                })\n                console.log(response.data)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    handleChange = (selectedOption) => {\n        this.setState(\n            { selectedOption },\n            () => console.log(`Option selected:`, this.state.selectedOption)\n        );\n        this.props.adminAuthorityStore.changeNewAdminGroupNo(selectedOption.groupNo);\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        const userGroupAuthorityList= this.state.userGroupAuthorityList;\n        console.log(userGroupAuthorityList);\n        return (\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={userGroupAuthorityList}\n                placeholder={'그룹 선택'}\n            />\n        );\n    }\n}","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from \"axios\";\nimport {Button} from \"@material-ui/core\";\nimport GroupList from \"./GroupList\";\nimport {inject, observer} from \"mobx-react\";\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n@inject('adminAuthorityStore')\n@observer\nexport default class AdminVerify extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        userList : [],\n            id: '',\n        columns: [\n            { title: '아이디', field: 'id', filterPlaceholder: 'GroupNo filter', tooltip: 'GroupNo로 정렬', editPlaceholder: 'GroupNo 입력'},\n            { title: '이메일', field: 'email',type: 'text'},\n            { title: '이름', field: 'name', type: 'text'},\n            { title: '연락처', field: 'phone', type: 'number'},\n            { title: '소속', field: 'value', type:'',render: rowData => <GroupList />},\n            { title: '신청일', field: 'createdDatetime', type: 'date'},\n            ],\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onRowSelection = this.onRowSelection.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        axios.get('/api/v1/kfashion/users/userList')\n            .then(response => response.data)\n            .then(res => {\n                this.setState({ userList : res, loading: false})\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    onRowSelection(){\n\n    }\n    handleSubmit(){\n        this.props.adminAuthorityStore.changeNewAdminId(this.state.id);\n        this.props.adminAuthorityStore.doAdminUp();\n    }\n    render() {\n        const {userList} = this.state.userList;\n        return (\n            <div>\n            <div style={{ maxWidth: \"100%\" }}>\n                <MaterialTable\n                    icons={tableIcons}\n                    columns={this.state.columns}\n                    data={userList}\n                    title=\"그룹 관리자 승인\"\n                    editable={{\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    {\n                                        axios.get('/api/v1/kfashion/users/userList')\n                                            .then(response => response.data)\n                                            .then(res => {\n                                                this.setState({ userList : res, loading: false})\n                                            })\n                                    }\n                                    resolve();\n                                }, 1000);\n                            })\n                    }}\n                    options={{\n                        sorting: false,\n                        /*padding:'dense',*/\n                        minBodyHeight: '35em',\n                        selection: true,\n                        actionsColumnIndex: -1,\n                        headerStyle: {\n                            backgroundColor: '#01579b',\n                            color: '#FFF',\n                            textAlign:'center',\n                        },\n                        cellStyle: {\n                            textAlign: 'center'\n                        },\n                    }}\n                    onSelectionChange={(rows,rowData) => {this.setState({id : rowData.id})}\n                    }\n                />\n            </div>\n                <hr></hr>\n                <Button  style={{float:\"right\"}} variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\n                    승인\n                </Button>\n            </div>\n        );\n    }\n}","import React from 'react'\nimport {Container, Typography, Toolbar, Grid} from \"@material-ui/core\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport CreateGroupDialog from \"./CreateGroupDialog\";\nimport AdminVerify from \"./AdminVerify\";\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        width: '100%',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        alignItems: 'center',\n        width: '100%',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\nclass AdminGroup extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"AdminGroup Work\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                <Grid item xs={12} lg={12}>\n                    <AdminVerify />\n                </Grid>\n                <CreateGroupDialog />\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (AdminGroup)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {Container, Toolbar, Typography, Button} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    successContainer: {\n        marginTop : 200,\n        margin: 'auto',\n        textAlign: 'center',\n    },\n    successTitle: {\n        fontSize: 38,\n        color: '#333333',\n        paddingTop: theme.spacing(6),\n    },\n    successHeader: {\n        fontSize: 16,\n        color: '#333333',\n        paddingTop: theme.spacing(5),\n    },\n    successHeader2: {\n        fontSize: 16,\n        color: '#333333',\n    },\n    successBody: {\n        fontSize: 14,\n        color: '#b7b7b7',\n        paddingTop: theme.spacing(1),\n    },\n    successButton: {\n        borderRadius: 24,\n        fontSize: 16,\n        width: 200,\n        height: 48,\n        marginTop: theme.spacing(4),\n    },\n});\n\n\nclass Verify extends React.Component {\n    handleClickToHome = () => {\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div className={classes.successContainer}>\n                    <React.Fragment>\n                        <Typography className={classes.successTitle}>회원 가입 인증 완료</Typography>\n                        <Typography className={classes.successHeader}>{`가입을 축하합니다.`}</Typography>\n                        <Typography className={classes.successHeader2}>작업자를 등록 하려면 관리자의 승인이 필요합니다.</Typography>\n                        <Typography className={classes.successBody}>승인 후에 Kfashion의 서비스를<br/> 이용하실 수 있습니다.</Typography>\n                    </React.Fragment>\n                <Button color=\"primary\" variant=\"contained\"\n                        className={classes.successButton}\n                        onClick={() => this.handleClickToHome()}>\n                    로그인으로 이동\n                </Button>\n                    </div>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Verify)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {Link, withRouter, Router, Route} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Container, Toolbar, Typography, Button, Grid,} from \"@material-ui/core\";\nimport {inject, observer} from \"mobx-react\";\nimport DropzoneDialogExample from \"../../components/DropzoneDialog\";\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from \"axios\";\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        maxWidth:'100%',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n        padding:0,\n    },\n    buttonType1:{\n        width: '100%',\n        height: 50,\n    },\n    buttonType2:{\n        width: '100%',\n        height: 50,\n\n    },\n    toolButton:{\n        border:'1px solid black',\n        height:50,\n        width:'100%',\n    },\n    test:{\n        border:'1px solid black',\n        height: '50%',\n    },\n    toolBox:{\n        border:'1px solid black',\n        marginRight: 1,\n        height:'100%',\n    },\n    fileText: {\n        paddingTop: 32,\n        paddingRight: theme.spacing(2),\n        textAlign: 'left'\n\n    },\n    fileSelection: {\n        position: 'absolute',\n        width: 1,\n        height: 1,\n        padding: 0,\n        margin: -1,\n        overflow: 'hidden',\n        clip: 'rect(0,0,0,0)',\n        border: 0,\n        borderRadius: 12,\n    },\n    imgLayout:{\n        maxWidth: 600,\n        maxHeight: 600,\n    }\n});\n\n\n@inject('fileUploadStore','authStore','imageStore')\n@observer\nclass ImageUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            text: 'text',\n            boundaryList: [],\n            imgData : '',\n            count: 0,\n            data: [],\n            columns: [\n                {title: '번호', field: 'workNo',type: 'button', filterPlaceholder: 'GroupNo filter', tooltip: 'workNo로 정렬'},\n                {title: '등록자', field: 'createdId', type: 'text', initialEditValue: 'test', tooltip: 'This is tooltip text'},\n                {title: '생성일', field: 'createdDatetime', type: 'date'},\n            ],\n        }\n    }\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Image Upload\", {\n            variant: 'info'\n        })\n        const createdId = this.props.authStore.isUserId;\n        this.props.imageStore.LoadImage(createdId)\n        this.setState({\n            boundaryList: this.props.imageStore.boundaryList,\n            imgData: `/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.workNo}`,\n            workNo: this.props.imageStore.workNo\n        })\n    }\n\n\n    handlePrevious(){\n        this.setState({\n            count: this.state.count-1\n        });\n        {this.state.boundaryList.length - this.state.count >=0 ?this.props.imageStore.changeWorkNo(this.state.boundaryList[this.state.count].workNo)\n            : alert(\"첫번째 이미지 입니다.\")\n        }\n        this.setState({\n            imgData: `/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.isWorkNo}`,\n            workNo: this.props.imageStore.workNo\n        })\n    }\n    handleNext() {\n        this.setState({\n            count: this.state.count+1\n        });\n        {this.state.count < this.state.boundaryList.length ?\n         this.props.imageStore.changeWorkNo(this.state.boundaryList[this.state.count].workNo)\n         :alert(\"마지막 이미지 입니다.\")\n        }\n        this.setState({\n            imgData: `/api/v1/kfashion/img/getByteImage?workNo=${this.props.imageStore.isWorkNo}`,\n            workNo: this.props.imageStore.workNo\n        })\n    }\n    render() {\n        const {boundaryList} = this.props.imageStore;\n        const {classes, history} = this.props;\n        return (\n            <Container component=\"main\" className={classes.mainContainer} style={{height:'100vh'}}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Grid container>\n                            <Grid item xs={2} style={{marginRight:5}}>\n                                <DropzoneDialogExample />\n                            </Grid>\n                        </Grid>\n                    </Toolbar>\n                    <Grid container>\n                        <Grid item xs={12} lg={6}>\n                            <div style={{marginRight:15}}>\n                                <img src={this.state.imgData} style={{display:\"inline-block\" , width:'100%', height:'77vh'}}/>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <div>\n                            <MaterialTable style={{height:'77vh'}}\n                                icons={tableIcons}\n                                columns={this.state.columns}\n                                data={boundaryList}\n                                title=\"이미지 리스트\"\n                                editable={{\n                                    onRowDelete: oldData =>\n                                        new Promise((resolve, reject) => {\n                                            setTimeout(() => {\n                                                {\n                                                    let data = this.state.data;\n                                                    const index = data.indexOf(oldData);\n                                                    data.splice(index, 1);\n                                                    this.setState({ data }, () => resolve());\n                                                }\n                                                resolve();\n                                            }, 1000);\n                                        }),\n                                }}\n                                actions={[\n                                    {\n                                        icon: Edit,\n                                        tooltip: 'Select Image',\n                                        onClick: (event, rowData) => {\n                                            this.setState({imgData : \"/api/v1/kfashion/img/getByteImage?workNo=\"+rowData.workNo})\n                                            /*this.setState({count:rowData.indexOf()})*/\n                                            this.props.imageStore.changeWorkNo(rowData.workNo);\n                                        }\n                                    }\n                                ]}\n                            />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div>\n                    <hr></hr>\n                    <Grid container>\n                        <Grid item xs={3} lg={1} style={{marginRight:10}}>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handlePrevious.bind(this)}\n                         >\n                        Previous\n                    </Button>\n                        </Grid>\n                        <Grid item xs={3} lg={1}>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleNext.bind(this)}\n                         >\n                        Next\n                    </Button>\n                        </Grid>\n                        <Grid item xs={4} lg={2} style={{marginLeft:'auto'}}>\n                    <Button\n                        type=\"button\"\n                        className={classes.buttonType2}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={()=>history.push('/step/boundaryBox')}\n                        >\n                        Next Step\n                    </Button>\n                    </Grid>\n                    </Grid>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (ImageUpload)));","import React, {forwardRef} from 'react'\nimport {Container, Typography, Toolbar, Grid} from \"@material-ui/core\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport Check from \"@material-ui/icons/Check\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport Search from \"@material-ui/icons/Search\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport GroupList from \"./GroupList\";\nimport {toJS} from \"mobx\";\nimport {inject, observer} from \"mobx-react\";\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        width: '100%',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        alignItems: 'center',\n        width: '100%',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n@inject('authStore', 'userListStore')\n@observer\nclass UserList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: [],\n            groupNo:'',\n            id:'',\n            name:'',\n            password:'',\n            groupUserList:[],\n            newMember:[],\n            columns: [\n                {\n                    title: '아이디',\n                    field: 'id',\n                    filterPlaceholder: 'GroupNo filter',\n                    tooltip: 'GroupNo로 정렬',\n                    editPlaceholder: '아이디 입력'\n                },\n                {title: '이름', field: 'name', type: 'text'},\n                {title: '비밀번호', field: 'password', type: 'hidden'},\n                {title: '생성일', field: 'createdDatetime', type: 'date'},\n            ],\n        }\n    }\n    componentDidMount() {\n        const groupNo = this.props.authStore.loginUser.groupNo;\n        axios.get('/api/v1/kfashion/users/groupUserList?groupNo='+groupNo)\n            .then(response => response.data)\n            .then(res => {\n                this.setState({ groupUserList : res, loading: false})\n            })\n\n\n        this.props.enqueueSnackbar(\"User List\", {\n            variant: 'info'\n        });\n        this.props.authStore.checkLogin();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const groupNo = this.props.authStore.loginUser.groupNo;\n        const {groupUserList} = this.state.groupUserList;\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                console\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Grid item xs={12} lg={12}>\n                        <MaterialTable\n                            icons={tableIcons}\n                            columns={this.state.columns}\n                            data={groupUserList}\n                            title=\"그룹 회원 리스트\"\n                            editable={{\n                                onRowAdd:rowData =>\n                                    new Promise((resolve, reject) => {\n                                        setTimeout(() => {\n                                            try {\n                                                this.props.userListStore.changeNewMemberId(rowData.id)\n                                                this.props.userListStore.changeNewMemberPassword(rowData.password)\n                                                this.props.userListStore.changeNewMemberUserName(rowData.name)\n                                                this.props.userListStore.changeNewMemberGroupNo(groupNo)\n                                                this.props.userListStore.addGroupUser();\n                                            } catch (e) {\n                                                console.log('여기 에러 났음')\n                                            }\n                                            resolve();\n                                        }, 1000);\n                                    }),\n                                onRowDelete: rowData =>\n                                    new Promise((resolve, reject) => {\n                                        setTimeout(() => {\n                                            {\n                                                console.log('userId:', rowData.id)\n                                                axios.delete(`/api/v1/kfashion/users/deleteGroupUser`, {data: {userId: rowData.id},\n                                                });\n                                            }\n                                            resolve();\n                                        }, 1000);\n                                    })\n                            }}\n                            options={{\n                                editCellStyle: {\n                                  textAlign:\"center\"\n                                },\n                                /*padding:'dense',*/\n                                minBodyHeight: '35em',\n                                actionsColumnIndex: -1,\n                                headerStyle: {\n                                    backgroundColor: '#01579b',\n                                    color: '#FFF',\n                                    textAlign:'center',\n                                },\n                                cellStyle: {\n                                    textAlign: 'center'\n                                },\n                                actionsCellStyle: {\n                                    textAlign: 'center'\n                                },\n                            }}\n\n                        />\n                    </Grid>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (UserList)));","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {inject, observer} from \"mobx-react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport TopBar from \"./components/TopBar\";\nimport SideMenu from \"./components/SideMenu\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Home from \"./views/Home\";\nimport Step from \"./views/Step\";\nimport Step2 from \"./views/Step2\";\nimport Step3 from \"./views/Step3\";\nimport BoundaryBox from \"./views/labeling/BoundaryBox\";\nimport Polygon from \"./views/labeling/Polygon\";\nimport SignIn from \"./views/SignIn\";\nimport * as store from \"./stores/AuthStore\";\nimport SignUp from \"./views/SignUp\";\nimport AdminGroup from \"./views/admin/AdminGroup\";\nimport Verify from \"./views/verify\";\nimport ImageUpload from \"./views/labeling/ImageUpload\";\nimport UserList from \"./views/admin/UserList\";\n\n\nconst style = () => ({\n    root: {\n        display: 'flex',\n    }\n});\n\n\n@inject('authStore')\n@observer\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobileOpen: false,\n        };\n\n        this.setMobileOpen = this.setMobileOpen.bind(this);\n    }\n\n    componentDidMount() {\n        const axiosRequestInterceptors = (config) => {\n            const token = localStorage.getItem(store.LocalStorageTokenKey);\n            if(token) {\n                config.headers['X-Auth-Token'] = token;\n            }\n            return config;\n        };\n\n        const axiosRequestErrorHandler = (error) => {\n            return Promise.reject(error);\n        };\n\n        const axiosResponseInterceptor = (response) => {\n            if(response.status === 403) {\n                this.props.authStore.invalidateLogin();\n            }\n            return response;\n        };\n\n        const axiosResponseErrorHandler = (error) => {\n            if((error.response) && (error.response.status === 403)) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return Promise.reject(error);\n        };\n\n        console.log(\"========== RGate App componentDidMount ==========\");\n        axios.interceptors.request.use(axiosRequestInterceptors, axiosRequestErrorHandler);\n        axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n\n        this.props.authStore.checkLogin();\n    }\n\n    setMobileOpen(mobileOpen) {\n        this.setState({mobileOpen: mobileOpen});\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loginState, loginUser} = this.props.authStore;\n        return (\n            <div className={classes.root}>\n                <Router>\n                    <CssBaseline />\n                    <Route path=\"/\" component={ScrollToTop}>\n                        <TopBar mobileOpen={this.state.mobileOpen}\n                                setMobileOpen={this.setMobileOpen}\n                                isLoggedIn={loginState === store.State.Authenticated}\n                                loginUser={loginUser}\n                                doLogout={() => this.props.authStore.doLogout()} />\n                        <SideMenu mobileOpen={this.state.mobileOpen}\n                                  setMobileOpen={this.setMobileOpen}\n                                  isLoggedIn={loginState === store.State.Authenticated} />\n\n                        {loginState === store.State.Authenticated ? (\n                            <React.Fragment>\n                                <Switch>\n                                    <Route exact path=\"/home\" component={Home} />\n                                    <Route exact path=\"/step\" component={Step} />\n                                    <Route exact path=\"/step2\" component={Step2} />\n                                    <Route exact path=\"/step3\" component={Step3} />\n                                    <Route exact path=\"/Step/ImageUpload\" component={ImageUpload}/>\n                                    <Route exact path=\"/Step/BoundaryBox\" component={BoundaryBox} />\n                                    <Route exact path=\"/Step/Polygon\" component={Polygon} />\n                                    <Route exact path=\"/admin/createGroup\" component={AdminGroup} />\n                                    <Route exact path=\"/admin/userList\" component={UserList} />\n                                </Switch>\n                            </React.Fragment>\n                        ) : (\n                            <Switch>\n                                <Route path=\"/SignUp\" component={SignUp} />\n                                <Route path=\"/sign/success\" component={Verify} />\n                                <Route path=\"/\" component={SignIn} />\n                            </Switch>\n                        )}\n                    </Route>\n                </Router>\n            </div>\n        );\n    }\n};\n\nexport default withStyles(style) (App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function validateEmail(email) {\n    const regExp = /([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    return regExp.test(String(email).toLowerCase());\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function SimpleAlerts() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Alert severity=\"error\">이미 등록된 이메일 형식 입니다</Alert>\n        </div>\n    );\n}","import {action, computed, flow, observable, toJS} from \"mobx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport * as validation from \"../common/Validation\";\nimport SimpleAlerts from \"../components/alert\";\n\nconst MinUserId = 4;\nconst MinUserName = 2;\nconst MinPassword = 4;\nconst MinPhone = 13;\n\nconst State = {\n    Ready: 'Ready',\n    Pending: 'Pending',\n    NotAvailableEmail: 'NotAvailableEmail',\n    NotAvailableId: 'NotAvailableId',\n    Success: 'Success',\n    Fail: 'Fail',\n}\n\nconst EmptyNewMember = {\n    id: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n    name: '',\n    phone: '',\n}\n\nconst EmptyAgreements = {\n    all: false,\n    service: false,\n    privacy: false,\n}\n\nexport default class SignUpStore {\n    @observable state = State.Ready;\n    @observable newMember = {...EmptyNewMember}\n    @observable agreements = {...EmptyAgreements}\n    @observable serverMode = '';\n\n    @action initialize = (email) => {\n        this.state = State.Ready;\n        this.newMember = {...EmptyNewMember}\n        this.agreements = {...EmptyAgreements}\n\n        if((email !== undefined) && (email !== null) && (email.length > 0) && validation.validateEmail(email)) {\n            this.newMember.email = email;\n        }\n    }\n\n    @action clearState = () => {\n        this.state = State.Ready;\n    }\n    @action changeNewMemberId = (id) => {\n        this.newMember.id = id;\n    }\n    @action changeNewMemberEmail = (email) => {\n        this.newMember.email = email;\n    }\n\n    @action changeNewMemberPassword = (password) => {\n        this.newMember.password = password;\n    }\n\n    @action changeNewMemberPasswordConfirm = (passwordConfirm) => {\n        this.newMember.passwordConfirm = passwordConfirm;\n    }\n\n    @action changeNewMemberUserName = (name) => {\n        this.newMember.name = name;\n    }\n\n    @action changeNewMemberPhone = (phone) => {\n        this.newMember.phone = phone;\n    }\n\n    @action changeAgreementsAll = (allAgreement) => {\n        if(allAgreement) {\n            this.agreements.all = true;\n            this.agreements.service = true;\n            this.agreements.privacy = true;\n        } else {\n            this.agreements.all = false;\n            this.agreements.service = false;\n            this.agreements.privacy = false;\n        }\n    }\n\n    @action changeAgreementsService = (serviceAgreements) => {\n        if(serviceAgreements) {\n            this.agreements.service = true;\n        } else {\n            this.agreements.all = false;\n            this.agreements.service = false;\n        }\n    }\n\n    @action changeAgreementsPrivacy = (privacyAgreements) => {\n        if(privacyAgreements) {\n            this.agreements.privacy = true;\n        } else {\n            this.agreements.all = false;\n            this.agreements.privacy = false;\n        }\n    }\n\n    @computed get isEmailInputed() {\n        return (this.newMember.email !== undefined) && (this.newMember.email !== null) && (this.newMember.email.length > 0);\n    }\n\n    @computed get canSignUp() {\n        const id = this.newMember.id.length >= MinUserId;\n        const emailVerification = validation.validateEmail(this.newMember.email);\n        const agreements = this.agreements.service && this.agreements.privacy;\n        const passwordConfirm = this.newMember.password === this.newMember.passwordConfirm;\n        const password = this.newMember.password.length >= MinPassword;\n        const userName = this.newMember.name.length >= MinUserName;\n        const phone = this.newMember.phone.length >= MinPhone;\n\n        return emailVerification && agreements && passwordConfirm && password && userName && phone;\n    }\n\n    @computed get canAdminSignUp() {\n        const id = this.newMember.id.length >= MinUserId;\n        const emailVerification = validation.validateEmail(this.newMember.email);\n        const passwordConfirm = this.newMember.password === this.newMember.passwordConfirm;\n        const password = this.newMember.password.length >= MinPassword;\n        const userName = this.newMember.name.length >= MinUserName;\n        const phone = this.newMember.phone.length >= MinPhone;\n\n        return emailVerification && passwordConfirm && password && userName && phone;\n    }\n\n    @computed get isValidId() {\n        return this.newMember.id.length >= MinUserId;\n    }\n    @computed get isValidEmail() {\n        return validation.validateEmail(this.newMember.email);\n    }\n\n    @computed get isValidPassword() {\n        return this.newMember.password.length >= MinPassword;\n    }\n\n    @computed get isPasswordConfirmed() {\n        return this.newMember.password === this.newMember.passwordConfirm;\n    }\n\n    @computed get isValidUsername() {\n        return this.newMember.name.length >= MinUserName;\n    }\n\n    @computed get isValidPhone() {\n        return this.newMember.phone.length >= MinPhone;\n    }\n\n    @computed get isPending() {\n        return this.state === State.Pending;\n    }\n\n    @computed get isSignUpSuccess() {\n        return this.state === State.Success;\n    }\n\n    @computed get isSignUpFailed() {\n        return this.state === State.Fail;\n    }\n\n    @computed get isNotAvailableEmail() {\n        return this.state === State.NotAvailableEmail;\n    }\n\n    @computed get isNotAvailableId() {\n        return this.state === State.NotAvailableId;\n    }\n\n    doSignUp = flow(function* doSignUp(doAction) {\n        this.state = State.Pending;\n        try {\n        const response = yield axios.get(`/api/v1/kfashion/users/signupcheck/email?email=${this.newMember.email}`)\n        const responseid = yield axios.get(`/api/v1/kfashion/users/signupcheck/id?id=${this.newMember.id}`)\n            console.log(response.data);\n            console.log(responseid.data);\n        const isNotAvailEmail = response.data.result;\n        const isNotAvailId = response.data.result;\n\n        if(!isNotAvailEmail || !isNotAvailId) {\n\n            const param = toJS(this.newMember);\n            delete param.passwordConfirm;\n\n            const resp = yield axios.post('/api/v1/kfashion/users/signup', param);\n            if (resp.status === 200) {\n                this.state = State.Success;\n                if (doAction !== undefined) doAction();\n            } else {\n                this.state = State.NotAvailableEmail;\n            }\n        }else{\n             this.state = State.NotAvailableEmail;\n        }\n        } catch (e) {\n            console.log('에러좀 나지 마라')\n        }\n\n    });\n\n    getServerMode = flow(function* getServerMode() {\n        try {\n            const response = yield axios.get('/api/v1/informations/mode');\n            const serverMode = response.data;\n\n            this.serverMode = serverMode;\n        } catch(error) {\n            console.log(\"Can't get server mode\");\n        }\n    })\n}","import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nconst ListState = {\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n};\n\nexport default class SecondStepStore {\n    @observable colorList = []\n    @observable sleeveList = []\n\n\n    @computed\n    get color() {\n        return this.colorList === undefined ? [] : this.colorList;\n    }\n    @computed\n    get sleeve() {\n        return this.sleeveList === undefined ? [] : this.sleeveList;\n    }\n\n    loadColorList = flow(function* getColorList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/basic/color`)\n            if(response.status === 200) {\n                const color =response.data.colorList;\n                this.colorList=color\n            }\n        } catch(error) {\n            console.log(\"error getColorList\", error);\n        }\n    })\n\n    loadSleeveList = flow(function* getSleeveList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/basic/sleeve`)\n            if(response.status === 200) {\n                const sleeve =response.data.sleeveList;\n                this.sleeveList=sleeve\n            }\n        } catch(error) {\n            console.log(\"error getSleeveList\", error);\n        }\n    })\n\n   /* loadClothList = flow(function* getClothList() {\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/cloth`)\n            if(response.status === 200) {\n                this.clothLengthList = response.data;\n            }\n        } catch(error) {\n            console.log(\"error getClothList\", error);\n        }\n    })\n\n    loadPrintList = flow(function* getPrintList() {\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/print`)\n            if(response.status === 200) {\n                this.printList = response.data;\n            }\n        } catch(error) {\n            console.log(\"error getPrintList\", error);\n        }\n    })*/\n\n\n    /*changeCategoryStatus = flow(function* changeCategoryStatus(userId, statusCode) {\n        try {\n            const response = yield axios.put(`/api/v1/admin/users`, [{\"userId\": userId, \"statusCode\": statusCode}])\n            if(response.status === 200) {\n                this.loadCategoryList();\n            }\n        } catch(error) {\n            console.log(\"error getUserList\", error);\n        }\n    })*/\n\n}","import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\nimport {State} from \"./AuthStore\";\n\nconst AddState = {\n    Closed: 'Closed',\n    Opened: 'Opened',\n    Adding: 'Adding',\n    Added: 'Added',\n    AddFailed: 'AddFailed',\n};\nconst UpdateState = {\n    Closed: 'Closed',\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n    Updating: 'Updating',\n    Updated: 'Updated',\n    UpdateFailed: 'UpdateFailed',\n    Uploading: 'Uploading',\n    Uploaded: 'Uploaded',\n    UploadFailed: 'UploadFailed',\n};\nexport default class FileUploadStore {\n    @observable files = [];\n    @observable uploadFile = '';\n    @observable addState = AddState.Closed;\n    @observable updateState = UpdateState.Closed;\n    @observable state = State.Ready;\n/*\n    @action fileUploadHandle = () => {\n        this.fileUpload();\n    }\n*/\n    @action changeUploadFile = (file) => {\n        console.log('changeUploadFile 실행...:',file )\n        this.uploadFile = file;\n        const uploadFile = this.uploadFile;\n        console.log(\"this.uploadFile:\", uploadFile);\n    }\n\n    fileupload (file,userId){\n            const formData = new FormData();\n            for(let i=0; i < file.length; i++) {\n            formData.append(\"files\",file[i]);\n            console.log(file[i]);\n        }\n            formData.append('files', file);\n            formData.append(\"userId\",userId);\n            console.log(\"files:\", userId);\n            axios.post('/api/v1/kfashion/img/uploadMultipleFiles', formData, {headers: {'Content-Type':'multipart/form-data'},'Authorization': 'JWT ' + sessionStorage.getItem('token') });\n    };\n}","import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\n\nexport default class ThirdStepStore {\n    @observable styleList = []\n    @observable categoryList = []\n    @observable detailList = []\n    @observable printList = []\n    @observable textureList = []\n    @observable lengthList = []\n    @observable neckLineList = []\n    @observable karaList = []\n    @observable fitList = []\n    @observable safeList = []\n    @observable silhouetteList = []\n\n    @computed\n    get category() {\n        return this.categoryList === undefined ? [] : this.categoryList;\n    }\n\n    loadStyleList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/style`)\n            if(response.status === 200) {\n                const style =response.data.styleList;\n                this.styleList=style\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadCategoryList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/category`)\n            if(response.status === 200) {\n                const category =response.data.categoryList;\n                this.categoryList=category\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadDetailList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/detail`)\n            if(response.status === 200) {\n                const detail =response.data.detailList;\n                this.detailList=detail\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadPrintList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/print`)\n            if(response.status === 200) {\n                const print =response.data.printList;\n                this.printList=print\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadTextureList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/texture`)\n            if(response.status === 200) {\n                const texture =response.data.textureList;\n                this.textureList=texture\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadLengthList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/length`)\n            if(response.status === 200) {\n                const length =response.data.lengthList;\n                this.lengthList=length\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadNeckLineList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/neckLine`)\n            if(response.status === 200) {\n                const neckLine =response.data.neckLineList;\n                this.neckLineList=neckLine\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadKaraList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/kara`)\n            if(response.status === 200) {\n                const kara =response.data.karaList;\n                this.karaList=kara\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadFitList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/fit`)\n            if(response.status === 200) {\n                const fit =response.data.fitList;\n                this.fitList=fit\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadSafeList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/safe`)\n            if(response.status === 200) {\n                const safe =response.data.safeList;\n                this.safeList=safe\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n    loadSilhouetteList = flow(function* getCategoryList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/professional/silhouette`)\n            if(response.status === 200) {\n                const silhouette =response.data.silhouetteList;\n                this.silhouetteList=silhouette\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n}","import {action, computed, flow, observable, values} from \"mobx\";\nimport axios from \"axios\";\n\nexport default class CreateGroupDialogStore {\n    @observable userGroupAuthorityList = []\n\n    @computed\n    get group() {\n        return this.userGroupAuthorityList === undefined ? [] : this.userGroupAuthorityList;\n    }\n    loadGroupList = flow(function* userGroupAuthorityList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/userGroupAuthority/userGroupAuthorityList`)\n            if(response.status === 200) {\n                const Authority =response.data.userGroupAuthorityList;\n                this.userGroupAuthorityList=Authority;\n                console.log(this.userGroupAuthorityList);\n            }\n        } catch(error) {\n            console.log(\"error getGroupList\", error);\n        }\n    })\n}","import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\nconst State = {\n    Success: 'Success',\n    Fail: 'Fail',\n}\n\nconst EmptyNewAdmin = {\n    id : '',\n    groupNo : '',\n}\n\n\nexport default class AdminAuthorityStore {\n    @observable newAdmin = {...EmptyNewAdmin}\n\n    @action changeNewAdminId = (id) => {\n        this.newAdmin.id = id;\n        console.log(id);\n    }\n    @action changeNewAdminGroupNo = (groupNo) => {\n        this.newAdmin.groupNo = groupNo;\n        console.log(groupNo);\n    }\n\n    doAdminUp = flow(function* doAdminUp(doAction) {\n         const formData = new FormData();\n         formData.append(\"id\",this.newAdmin.id);\n         formData.append(\"groupNo\",this.newAdmin.groupNo);\n          console.log(formData);\n        const resp = yield axios.post('/api/v1/kfashion/group/updateUser', formData);\n            if (resp.status === 200) {\n            this.state = State.Success;\n            } else {\n                this.state = State.Fail;\n        }\n    });\n\n\n}","import {action, computed, flow, observable, toJS} from \"mobx\";\nimport axios from \"axios\";\n\nconst State = {\n    Ready: 'Ready',\n    Pending: 'Pending',\n    Success: 'Success',\n    Fail: 'Fail',\n}\n\nconst EmptyNewProfessionalLabel = {\n    workNo : '',\n    workStep : 5,\n    rectNo : 1,\n    polyNo : 1,\n    createId : '',\n    styleNoList: [],\n    styleCategoryNoList: [],\n    style : '',\n    styleSub : '',\n    styleCategoryNo : '',\n    styleCategorySubNo : '',\n    category : '',\n    categoryCategoryNo : '',\n    detail : '',\n    detailCategoryNo : '',\n    print : '',\n    printCategoryNo : '',\n    texture : '',\n    textureCategoryNo : '',\n    clothLength : '',\n    clothLengthCategoryNo : '',\n    neckLine : '',\n    neckLineCategoryNo : '',\n    kara : '',\n    karaCategoryNo : '',\n    fit : '',\n    fitCategoryNo : '',\n    safe : '',\n    safeCategoryNo : '',\n    silhouette : '',\n    silhouetteCategoryNo : '',\n}\n\nexport default class ProfessionalLabelStore {\n    @observable state = State.Ready;\n    @observable newProfessionalLabel = {...EmptyNewProfessionalLabel}\n\n    @action changeNewProfessionalLabelStyle = (style) => {\n        if(style) {\n            for(let i=0; i < style.length; i++) {\n                this.newProfessionalLabel.styleNoList[i] = style[i].no;\n                this.newProfessionalLabel.styleCategoryNoList[i] = style[i].categoryNo;\n            }\n            console.log(this.newProfessionalLabel.styleNoList);\n            console.log(this.newProfessionalLabel.styleCategoryNoList);\n            this.newProfessionalLabel.style = this.newProfessionalLabel.styleNoList[0]\n            this.newProfessionalLabel.styleCategoryNo = this.newProfessionalLabel.styleCategoryNoList[0]\n            this.newProfessionalLabel.styleSub = this.newProfessionalLabel.styleNoList[1]\n            this.newProfessionalLabel.styleCategorySubNo = this.newProfessionalLabel.styleCategoryNoList[1]\n        }\n    }\n\n    @action changeNewProfessionalLabelCategory = (category) => {\n        this.newProfessionalLabel.category = category.no;\n        this.newProfessionalLabel.categoryCategoryNo = category.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelDetail = (detail) => {\n        this.newProfessionalLabel.detail = detail.no;\n        this.newProfessionalLabel.detailCategoryNo = detail.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelPrint= (print) => {\n        this.newProfessionalLabel.print = print.no;\n        this.newProfessionalLabel.printCategoryNo = print.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelTexture = (texture) => {\n        this.newProfessionalLabel.texture = texture.no;\n        this.newProfessionalLabel.textureCategoryNo = texture.categoryNo;\n    }\n    @action changeNewProfessionalLabelClothLength = (clothLength) => {\n        this.newProfessionalLabel.clothLength = clothLength.no;\n        this.newProfessionalLabel.clothLengthCategoryNo = clothLength.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelNeckLine = (neckLine) => {\n        this.newProfessionalLabel.neckLine = neckLine.no;\n        this.newProfessionalLabel.neckLineCategoryNo = neckLine.categoryNo;\n    }\n    @action changeNewProfessionalLabelKara = (kara) => {\n        this.newProfessionalLabel.kara = kara.no;\n        this.newProfessionalLabel.karaCategoryNo = kara.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelFit = (fit) => {\n        this.newProfessionalLabel.fit = fit.no;\n        this.newProfessionalLabel.fitCategoryNo = fit.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelSafe= (safe) => {\n        this.newProfessionalLabel.safe = safe.no;\n        this.newProfessionalLabel.safeCategoryNo = safe.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelSilhouette = (silhouette) => {\n        this.newProfessionalLabel.silhouette = silhouette.no;\n        this.newProfessionalLabel.silhouetteCategoryNo = silhouette.categoryNo;\n    }\n\n    @action changeNewProfessionalLabelCreatedId = (createdId) => {\n        this.newProfessionalLabel.createdId = createdId;\n    }\n\n    @action changeNewProfessionalLabelWorkNo = (workNo) => {\n        this.newProfessionalLabel.workNo = workNo;\n    }\n\n    @computed get isPending() {\n        return this.state === State.Pending;\n    }\n\n    @computed get isSignUpSuccess() {\n        return this.state === State.Success;\n    }\n\n    @computed get isSignUpFailed() {\n        return this.state === State.Fail;\n    }\n\n    doProfessionalLabelUp = flow(function* doProfessionalLabelUp() {\n        this.state = State.Pending;\n        try {\n                const param = toJS(this.newProfessionalLabel);\n\n                const resp = yield axios.post('/api/v1/kfashion/label/professionalLabel', param);\n                if (resp.status === 200) {\n                    this.state = State.Success;\n                } else {\n                }\n        } catch (e) {\n            console.log('에러좀 나지 마라')\n        }\n    });\n\n\n\n\n}","import {action, computed, flow, observable, toJS} from \"mobx\";\nimport axios from \"axios\";\n\nconst State = {\n    Ready: 'Ready',\n    Pending: 'Pending',\n    Success: 'Success',\n    Fail: 'Fail',\n}\n\nconst EmptyNewBasicLabel= {\n    workNo : '',\n    workStep : 4,\n    rectNo : 1,\n    polyNo : 1,\n    no : 1,\n    color: '',\n    colorCategoryNo: '',\n    sleeveLength: '',\n    sleeveLengthCategoryNo : '',\n    createdId : '',\n}\n\nexport default class BasicLabelStore {\n    @observable state = State.Ready;\n    @observable newBasicLabel = {...EmptyNewBasicLabel}\n\n    @action changeNewBasicLabelColor = (color) => {\n        this.newBasicLabel.color = color.no;\n        this.newBasicLabel.colorCategoryNo = color.categoryNo;\n    }\n\n    @action changeNewBasicLabelWorkNo = (workNo) => {\n        this.newBasicLabel.workNo = workNo;\n    }\n\n    @computed get isWorkNo() {\n        return this.newBasicLabel.workNo;\n    }\n\n    @action changeNewBasicLabelCreatedId = (createdId) => {\n        this.newBasicLabel.createdId = createdId;\n    }\n\n    @action changeNewBasicLabelSleeveLength = (sleeveLength) => {\n        this.newBasicLabel.sleeveLength = sleeveLength.no;\n        this.newBasicLabel.sleeveLengthCategoryNo = sleeveLength.categoryNo;\n    }\n\n    @computed get isPending() {\n        return this.state === State.Pending;\n    }\n\n    @computed get isSignUpSuccess() {\n        return this.state === State.Success;\n    }\n\n    @computed get isSignUpFailed() {\n        return this.state === State.Fail;\n    }\n\n\n\n    doBasicLabelUp = flow(function* doBasicLabelUp(doAction) {\n        this.state = State.Pending;\n        try {\n            const param = toJS(this.newBasicLabel);\n\n            const resp = yield axios.post('/api/v1/kfashion/label/basicLabel', param);\n            if (resp.status === 200) {\n                this.state = State.Success;\n                if (doAction !== undefined) doAction();\n            } else {\n            }\n        } catch (e) {\n            console.log('에러좀 나지 마라')\n        }\n    });\n\n\n\n}","import {action, computed, flow, observable, toJS} from \"mobx\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nconst State = {\n    Ready: 'Ready',\n    Pending: 'Pending',\n    Success: 'Success',\n    Fail: 'Fail',\n}\n\nconst EmptyNewMember = {\n    id: '',\n    password: '',\n    name: '',\n    isApproved: 'Y',\n    groupNo: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n}\n\nexport default class UserListStore {\n\n    @observable state = State.Ready;\n    @observable newMember = {...EmptyNewMember}\n\n    @action clearState = () => {\n        this.state = State.Ready;\n    }\n    @action changeNewMemberId = (id) => {\n        this.newMember.id = id;\n    }\n    @action changeNewMemberPassword = (password) => {\n        this.newMember.password = password;\n    }\n\n    @action changeNewMemberUserName = (name) => {\n        this.newMember.name = name;\n    }\n\n    @action changeNewMemberIsApproved = (isApproved) => {\n        this.newMember.isApproved = isApproved;\n    }\n    @action changeNewMemberGroupNo = (groupNo) => {\n        this.newMember.groupNo = groupNo;\n    }\n\n    addGroupUser = flow(function* addGroupUser() {\n        this.state = State.Pending;\n        try {\n            const param = toJS(this.newMember);\n            console.log('param:', param)\n            const response = axios.post('/api/v1/kfashion/users/createGroupUser', param)\n            console.log(response.data);\n                if (response.status === 200) {\n                    this.state = State.Success;\n                } else {\n                    this.state = State.NotAvailableEmail;\n                }\n        } catch (e) {\n            console.log('에러좀 나지 마라')\n        }\n    });\n}","import {action, computed, flow, observable, toJS} from \"mobx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\nconst State = {\n    Ready: 'Ready',\n    Pending: 'Pending',\n    NotAvailableEmail: 'NotAvailableEmail',\n    Success: 'Success',\n    Fail: 'Fail',\n    boundaryList:[],\n}\n\nconst WorkNo = {\n    workNo : '',\n}\n\n\nexport default class ImageStore {\n    @observable state = State.Ready;\n    @observable workNo = {...WorkNo}\n\n    @action changeWorkNo = (workNo) => {\n        this.workNo = workNo;\n    }\n\n    @computed get isWorkNo() {\n        return this.workNo;\n    }\n\n\n    @action clearState = () => {\n        this.state = State.Ready;\n    }\n    LoadImage = flow(function* loadImage(createdId) {\n        try {\n          const response = yield axios.get('/api/v1/kfashion/img/boundaryList?createdId='+createdId)\n          const boundaryList = response.data.boundaryList;\n          this.boundaryList=boundaryList;\n          const workNo = this.boundaryList[0].workNo;\n          this.workNo = workNo;\n        } catch (e) {\n            this.loginState = State.Failed;\n            this.imageData = Object.assign({}, WorkNo);\n        }\n    });\n}","import {action, computed, flow, observable, toJS} from \"mobx\";\nimport axios from \"axios\";\n\nconst State = {\n    Ready: 'Ready',\n    Pending: 'Pending',\n    Success: 'Success',\n    Fail: 'Fail',\n}\n\nconst EmptyNewRectLocation = {\n    workNo : '',\n    workStep : 2,\n    createdId : '',\n    rectNo : '',\n    locationX : '',\n    locationY : '',\n    locationWidth : '',\n    locationHeight : '',\n    scaleX : '',\n    scaleY : '',\n}\n\nexport default class RectStore {\n    @observable state = State.Ready;\n    @observable NewRectLocation = {...EmptyNewRectLocation};\n    @observable List = [];\n    @observable rectList= [];\n\n    @action objGet = (obj) => {\n        console.log(obj);\n        this.rectList = obj;\n    }\n\n\n    @action changeNewRectLocationWorkNo = (workNo) => {\n        this.NewRectLocation.workNo = workNo;\n    }\n\n    @action changeNewRectLocationCreatedId = (createdId) => {\n        this.NewRectLocation.createdId = createdId;\n    }\n\n    @action changeNewRectLocationRectNo = (rectNo) => {\n        this.NewRectLocation.rectNo =rectNo;\n    }\n\n    @action changeNewRectLocationX = (locationX) => {\n        this.NewRectLocation.locationX = locationX;\n        console.log(locationX);\n    }\n\n    @action changeNewRectLocationY = (locationY) => {\n        this.NewRectLocation.locationY = locationY;\n    }\n\n    @action changeNewRectLocationWidth = (locationWidth) => {\n        this.NewRectLocation.locationWidth = locationWidth;\n    }\n    @action changeNewRectLocationHeight = (locationHeight) => {\n        this.NewRectLocation.locationHeight = locationHeight;\n    }\n\n    @action changeNewRectLocationScaleX = (scaleX) => {\n        this.NewRectLocation.scaleX = scaleX;\n    }\n\n    @action changeNewRectLocationScaleY = (scaleY) => {\n        this.NewRectLocation.scaleY = scaleY;\n    }\n\n\n    @computed get isPending() {\n        return this.state === State.Pending;\n    }\n\n    @computed get isSignUpSuccess() {\n        return this.state === State.Success;\n    }\n\n    @computed get isSignUpFailed() {\n        return this.state === State.Fail;\n    }\n\n\n\n    doRectLocationUp = flow(function* doRectLocationUp(doAction) {\n        this.state = State.Pending;\n        try {\n            // this.rectList.push(this.NewRectLocation.workNo);\n            // this.rectList.push(this.NewRectLocation.workStep);\n            // this.rectList.push(this.NewRectLocation.createdId);\n            // const param = this.rectList;\n            //\n            // console.log(param);\n\n            const kfashionRectList = this.rectList.map(r => ({\n                id: r.id,\n                left: r.left,\n                top: r.top,\n                width: r.width,\n                height: r.height,\n                scaleX: r.scaleX,\n                scaleY: r.scaleY,\n\n                createdId : this.NewRectLocation.createdId,\n                workNo :this.NewRectLocation.workNo,\n                workStep : this.NewRectLocation.workStep\n\n            }));\n            console.log(kfashionRectList);\n\n            const resp = yield axios.post(`/api/v1/kfashion/rect/location`, kfashionRectList);\n            if (resp.status === 200) {\n                this.state = State.Success;\n                if (doAction !== undefined) doAction();\n            } else {\n            }\n        } catch (e) {\n            console.log('에러좀 나지 마라')\n        }\n    });\n\n\n\n}","import { default as AuthStore } from \"./AuthStore\";\nimport SignUpStore from \"./SignUpStore\";\nimport SecondStepStore from \"./SecondStepStore\";\nimport FileUploadStore from \"./FileUploadStore\";\nimport ThirdStepStore from \"./ThirdStepStore\";\nimport CreateGroupDialogStore from \"./CreateGroupDialogStore\";\nimport AdminAuthorityStore from \"./AdminAuthorityStore\";\nimport ProfessionalLabelStore from \"./ProfessionalLabelStore\";\nimport BasicLabelStore from \"./BasicLabelStore\";\nimport UserListStore from \"./UserListStore\";\nimport ImageStore from \"./ImageStore\";\nimport RectStore from \"./RectStore\";\n\n\nexport const stores = {\n    signUpStore: new SignUpStore(),\n    authStore:  new AuthStore(),\n    secondStepStore: new SecondStepStore(),\n    fileUploadStore: new FileUploadStore(),\n    thirdStepStore: new ThirdStepStore(),\n    createGroupDialogStore : new CreateGroupDialogStore(),\n    adminAuthorityStore : new AdminAuthorityStore(),\n    professionalLabelStore : new ProfessionalLabelStore(),\n    basicLabelStore : new BasicLabelStore(),\n    userListStore: new UserListStore(),\n    imageStore : new ImageStore(),\n    rectStore : new RectStore(),\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {configure} from \"mobx\";\nimport {Provider as MobxProvider} from \"mobx-react\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {SnackbarProvider} from \"notistack\";\nimport {stores} from \"./stores\";\nimport configureTheme from \"./configureTheme\";\n\nconfigure({enforceActions: \"always\"});\n\nconst theme = configureTheme();\n\nReactDOM.render(\n    <MobxProvider {...stores}>\n        <ThemeProvider theme={theme}>\n            <SnackbarProvider maxSnack={3} anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}>\n                <App />\n            </SnackbarProvider>\n        </ThemeProvider>\n    </MobxProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createMuiTheme} from \"@material-ui/core\";\n\nexport default function configureTheme() {\n    return createMuiTheme({\n        drawerWidth: 240,\n    });\n};\n"],"sourceRoot":""}
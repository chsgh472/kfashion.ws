{"version":3,"sources":["components/TopBar.js","components/SideMenu.js","components/ScrollToTop.js","views/Home.js","stores/AuthStore.js","views/SignIn.js","App.js","serviceWorker.js","stores/index.js","index.js","configureTheme.js"],"names":["useStyles","makeStyles","theme","appBar","breakpoints","up","width","drawerWidth","marginLeft","menuButton","marginRight","spacing","display","title","sideMenuWidth","paddingLeft","flexGrow","link","textDecoration","color","TopBar","props","classes","mobileOpen","setMobileOpen","isLoggedIn","doLogout","AppBar","position","className","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","to","drawer","flexShrink","paddingRight","mixins","toolbar","drawerPaper","height","border","backgroundColor","palette","primary","main","boxShadow","logo","menu","borderRight","SideMenu","useTheme","List","ListSubheader","inset","ListItem","button","ListItemIcon","ListItemText","Divider","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","src","alt","xsDown","ScrollToTop","prevProps","this","location","pathname","window","scrollTo","children","React","Component","Home","enqueueSnackbar","Container","component","mainContainer","appBarSpacer","mainContent","withSnackbar","withRouter","withStyles","padding","marginTop","flexDirection","alignItems","State","EmptyLogin","id","password","EmptyUser","name","type","createdDatetime","updatedDatetime","AuthStore","doLogin","flow","loginState","param","login","axios","post","response","token","data","user","localStorage","setItem","console","log","loginToken","loginUser","Object","assign","checkLogin","getItem","get","removeItem","observable","action","SignIn","inject","observer","handleChangeId","e","authStore","changeLoginId","target","value","handleChangePassword","changeLoginPassword","handleKeyUpPassword","keyCode","handleSubmitForm","maxWidth","Avatar","lockOutAvatar","store","form","TextField","label","margin","onChange","required","fullWidth","onKeyUp","Button","submit","disabled","CircularProgress","size","lockOpenAvatar","secondary","App","state","bind","interceptors","request","use","config","headers","error","Promise","reject","status","invalidateLogin","setState","root","CssBaseline","path","Fragment","exact","Boolean","hostname","match","stores","configure","enforceActions","createMuiTheme","ReactDOM","render","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1fe48a2a.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppBar, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nconst logoWidth = 120;\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${theme.drawerWidth}px)`,\n            marginLeft: theme.drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        marginLeft: (theme.sideMenuWidth - logoWidth) / 2,\n        paddingLeft: theme.spacing(3),\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}));\n\nexport default function TopBar(props) {\n    const classes = useStyles();\n    const { mobileOpen, setMobileOpen, isLoggedIn, doLogout } = props;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"start\"\n                    onClick={handleDrawerToggle}\n                    className={classes.menuButton}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap className={classes.title}>\n                    <Link to='/' className={classes.link}>\n                        Project Base\n                    </Link>\n                </Typography>\n\n                { isLoggedIn ? (\n                    <IconButton color=\"inherit\" onClick={doLogout}>\n                        <ExitToAppIcon />\n                    </IconButton>\n                ) : (\n                    ''\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {Divider, Drawer, Hidden, List, ListItem, ListItemIcon, ListItemText, ListSubheader, Toolbar} from \"@material-ui/core\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport ComputerIcon from '@material-ui/icons/Computer';\n\nconst logoWidth = 129;\nconst logoHeight = 22;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: theme.drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        width: theme.drawerWidth,\n        paddingLeft: 0,\n        paddingRight: 0,\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        width: theme.drawerWidth,\n        height: '100%',\n        border: 'none',\n    },\n    toolbar: {\n        width: theme.drawerWidth,\n        backgroundColor: theme.palette.primary.main,\n        paddingLeft: 0,\n        paddingRight: 0,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    logo: {\n        width: logoWidth,\n        height: logoHeight,\n        marginLeft: (theme.drawerWidth - logoWidth) / 2,\n        marginRight: (theme.drawerWidth - logoWidth) / 2,\n    },\n    menu: {\n        borderRight: '1px solid rgba(0,0,0,0.12)',\n        height: '100%',\n    },\n\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n}));\n\nexport default function SideMenu(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { mobileOpen, setMobileOpen, isLoggedIn } = props;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div className={classes.menu}>\n            <List>\n                <ListSubheader inset>관리</ListSubheader>\n\n                <Link to=\"/home\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><ComputerIcon /></ListItemIcon>\n                        <ListItemText primary=\"홈\"></ListItemText>\n                    </ListItem>\n                </Link>\n            </List>\n\n            <Divider />\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Hidden smUp implementation=\"css\">\n\n                <Drawer variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <Drawer variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n\n                        open\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n};","import React from \"react\";\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default ScrollToTop;\n","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\nclass Home extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Welcome\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            Home\n                        </Typography>\n                    </Toolbar>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Home)));","import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nexport const State = {\n    Authenticated: 'Authenticated',\n    NotAuthenticated: 'NotAuthenticated',\n    Pending: 'Pending',\n    Failed: 'Failed',\n};\n\nexport const LocalStorageTokenKey = '_BASKITOP_AUTHENTICATION_TOKEN_';\n\nconst EmptyLogin = {\n    id: '',\n    password: '',\n};\n\nconst EmptyUser = {\n    id: '',\n    name: '',\n    type: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n};\n\nexport default class AuthStore {\n    @observable login = Object.assign({}, EmptyLogin);\n    @observable loginState = State.NotAuthenticated;\n    @observable loginToken = '';\n    @observable loginUser = Object.assign({}, EmptyUser);\n\n    @action changeLoginId = (id) => {\n        this.login.id = id;\n    };\n\n    @action changeLoginPassword = (password) => {\n        this.login.password = password;\n    };\n\n    @action invalidateLogin = () => {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n    };\n\n    doLogin = flow(function* doLogin() {\n        this.loginState = State.Pending;\n\n        try {\n            const param = this.login;\n            const response = yield axios.post('/api/v1/authentications/signin', param);\n            const token = response.data.token;\n            const user = response.data.user;\n\n            localStorage.setItem(LocalStorageTokenKey, token);\n\n            console.log('doLogin');\n            console.log(this);\n\n            this.loginState = State.Authenticated;\n            this.loginToken = token;\n            this.loginUser = user;\n        } catch (e) {\n            this.loginState = State.Failed;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n\n    checkLogin = flow(function* checkLogin() {\n        const token = localStorage.getItem(LocalStorageTokenKey);\n\n        if(token) {\n            try {\n                const response = yield axios.get('/api/v1/authentications/signcheck');\n                const token = response.data.token;\n                const user = response.data.user;\n\n                this.loginState = State.Authenticated;\n                this.loginToken = token;\n                this.loginUser = user;\n            } catch(e) {\n                this.loginState = State.NotAuthenticated;\n                this.loginToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        }\n    });\n\n    doLogout = flow(function* doLogout() {\n        localStorage.removeItem(LocalStorageTokenKey);\n\n        try {\n            yield axios.post('/api/v1/authentications/signout');\n\n            console.log(this);\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        } catch(e) {\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n}","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {inject, observer} from \"mobx-react\";\n\nimport {Avatar, Button, CircularProgress, Container, TextField, Typography} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport * as store from \"../stores/AuthStore\";\n\n\nconst style = theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    lockOpenAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    lockOutAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\n@inject('authStore')\n@observer\nclass SignIn extends React.Component {\n    handleChangeId = (e) => {\n        this.props.authStore.changeLoginId(e.target.value);\n    }\n\n    handleChangePassword = (e) => {\n        this.props.authStore.changeLoginPassword(e.target.value);\n    }\n\n    handleKeyUpPassword = (e) => {\n        if(e.keyCode === 13) {\n            this.props.authStore.doLogin();\n        }\n    }\n\n    handleSubmitForm = (e) => {\n        this.props.authStore.doLogin();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loginState, login } = this.props.authStore;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <div className={classes.appBarSpacer} />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.lockOutAvatar}><LockOutlinedIcon/></Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {loginState === store.State.Failed ? 'Sign in failed.' : 'Please sign in.'}\n                        </Typography>\n                        <div className={classes.form}>\n                            <TextField id=\"id\"\n                                       name=\"id\"\n                                       label=\"ID\"\n                                       variant=\"outlined\"\n                                       margin=\"normal\"\n                                       value={login.id}\n                                       onChange={this.handleChangeId}\n                                       required fullWidth />\n                            <TextField id=\"password\"\n                                       name=\"password\"\n                                       label=\"Password\"\n                                       type=\"password\"\n                                       variant=\"outlined\"\n                                       margin=\"normal\"\n                                       value={login.password}\n                                       onChange={this.handleChangePassword}\n                                       onKeyUp={this.handleKeyUpPassword}\n                                       required fullWidth />\n                            <Button type=\"submit\"\n                                    className={classes.submit}\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    disabled={loginState === store.State.Pending}\n                                    onClick={this.handleSubmitForm}\n                                    fullWidth >\n                                {loginState === store.State.Pending ? <CircularProgress size={22}/> : 'Sign In'}\n                            </Button>\n                        </div>\n                    </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(style) (SignIn)));","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {inject, observer} from \"mobx-react\";\n\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {CssBaseline} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport TopBar from \"./components/TopBar\";\nimport SideMenu from \"./components/SideMenu\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Home from \"./views/Home\";\nimport SignIn from \"./views/SignIn\";\nimport * as store from \"./stores/AuthStore\";\n\n\nconst style = () => ({\n    root: {\n        display: 'flex',\n    }\n});\n\n\n@inject('authStore')\n@observer\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobileOpen: false,\n        };\n\n        this.setMobileOpen = this.setMobileOpen.bind(this);\n    }\n\n    componentDidMount() {\n        const axiosRequestInterceptors = (config) => {\n            const token = localStorage.getItem(store.LocalStorageTokenKey);\n\n            if(token) {\n                config.headers['X-Auth-Token'] = token;\n            }\n\n            return config;\n        };\n\n        const axiosRequestErrorHandler = (error) => {\n            return Promise.reject(error);\n        };\n\n        const axiosResponseInterceptor = (response) => {\n            if(response.status === 403) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return response;\n        };\n\n        const axiosResponseErrorHandler = (error) => {\n            if((error.response) && (error.response.status === 403)) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return Promise.reject(error);\n        };\n\n        console.log(\"========== RGate App componentDidMount ==========\");\n        axios.interceptors.request.use(axiosRequestInterceptors, axiosRequestErrorHandler);\n        axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n\n        this.props.authStore.checkLogin();\n    }\n\n    setMobileOpen(mobileOpen) {\n        this.setState({mobileOpen: mobileOpen});\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loginState } = this.props.authStore;\n\n        return (\n            <div className={classes.root}>\n                <Router>\n                    <CssBaseline />\n\n                    <Route path=\"/\" component={ScrollToTop}>\n                        <TopBar mobileOpen={this.state.mobileOpen}\n                                setMobileOpen={this.setMobileOpen}\n                                isLoggedIn={loginState === store.State.Authenticated}\n                                doLogout={() => this.props.authStore.doLogout()} />\n                        <SideMenu mobileOpen={this.state.mobileOpen}\n                                  setMobileOpen={this.setMobileOpen}\n                                  isLoggedIn={loginState === store.State.Authenticated} />\n\n                        {loginState === store.State.Authenticated ? (\n                            <React.Fragment>\n                              <Switch>\n                                <Route exact path=\"/\" component={Home} />\n                                <Route exact path=\"/home\" component={Home} />\n                              </Switch>\n                            </React.Fragment>\n                        ) : (\n                            <Route path=\"/\" component={SignIn} />\n                        )}\n                  </Route>\n                </Router>\n            </div>\n        );\n    }\n};\n\nexport default withStyles(style) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { default as AuthStore } from \"./AuthStore\";\n\nexport const stores = {\n    authStore:  new AuthStore(),\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {configure} from \"mobx\";\nimport {Provider as MobxProvider} from \"mobx-react\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {SnackbarProvider} from \"notistack\";\nimport {stores} from \"./stores\";\nimport configureTheme from \"./configureTheme\";\n\nconfigure({enforceActions: \"always\"});\n\nconst theme = configureTheme();\n\nReactDOM.render(\n    <MobxProvider {...stores}>\n        <ThemeProvider theme={theme}>\n            <SnackbarProvider maxSnack={3} anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}>\n                <App />\n            </SnackbarProvider>\n        </ThemeProvider>\n    </MobxProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createMuiTheme} from \"@material-ui/core\";\n\nexport default function configureTheme() {\n    return createMuiTheme({\n        drawerWidth: 240,\n    });\n};\n"],"sourceRoot":""}
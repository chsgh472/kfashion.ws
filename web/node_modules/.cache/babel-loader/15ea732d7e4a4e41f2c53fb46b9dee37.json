{"ast":null,"code":"import _initializerDefineProperty from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;\n\nimport { action, flow, observable } from \"mobx\";\nimport axios from \"axios\";\nimport { State } from \"./AuthStore\";\nconst AddState = {\n  Closed: 'Closed',\n  Opened: 'Opened',\n  Adding: 'Adding',\n  Added: 'Added',\n  AddFailed: 'AddFailed'\n};\nconst UpdateState = {\n  Closed: 'Closed',\n  Loading: 'Loading',\n  Loaded: 'Loaded',\n  LoadFailed: 'LoadFailed',\n  Updating: 'Updating',\n  Updated: 'Updated',\n  UpdateFailed: 'UpdateFailed',\n  Uploading: 'Uploading',\n  Uploaded: 'Uploaded',\n  UploadFailed: 'UploadFailed'\n};\nlet FileUploadStore = (_class = (_temp = class FileUploadStore {\n  constructor() {\n    _initializerDefineProperty(this, \"files\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"uploadFile\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"addState\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"updateState\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"state\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"changeUploadFile\", _descriptor6, this);\n\n    this.fileupload = flow(function* changeUploadFile(file) {\n      let formData = new FormData();\n\n      for (let i = 0; i < file.length; i++) {\n        formData.append(\"files\", file.files[i], '1.jpg');\n      }\n\n      console.log(formData);\n      yield axios.post('/api/v1/img/uploadMultipleFiles', files, {\n        headers: {}\n      });\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"files\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"uploadFile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"addState\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return AddState.Closed;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"updateState\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return UpdateState.Closed;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"state\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return State.Ready;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"changeUploadFile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return files => {\n      console.log('changeUploadFile 실행...:', files);\n      this.uploadFile = files;\n      const uploadFile = this.uploadFile;\n      console.log(\"this.uploadFile:\", uploadFile);\n    };\n  }\n})), _class);\nexport { FileUploadStore as default };","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/stores/FileUploadStore.js"],"names":["action","flow","observable","axios","State","AddState","Closed","Opened","Adding","Added","AddFailed","UpdateState","Loading","Loaded","LoadFailed","Updating","Updated","UpdateFailed","Uploading","Uploaded","UploadFailed","FileUploadStore","fileupload","changeUploadFile","file","formData","FormData","i","length","append","files","console","log","post","headers","Ready","uploadFile"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,UAAtB,QAAuC,MAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAE,QADK;AAEbC,EAAAA,MAAM,EAAE,QAFK;AAGbC,EAAAA,MAAM,EAAE,QAHK;AAIbC,EAAAA,KAAK,EAAE,OAJM;AAKbC,EAAAA,SAAS,EAAE;AALE,CAAjB;AAOA,MAAMC,WAAW,GAAG;AAChBL,EAAAA,MAAM,EAAE,QADQ;AAEhBM,EAAAA,OAAO,EAAE,SAFO;AAGhBC,EAAAA,MAAM,EAAE,QAHQ;AAIhBC,EAAAA,UAAU,EAAE,YAJI;AAKhBC,EAAAA,QAAQ,EAAE,UALM;AAMhBC,EAAAA,OAAO,EAAE,SANO;AAOhBC,EAAAA,YAAY,EAAE,cAPE;AAQhBC,EAAAA,SAAS,EAAE,WARK;AAShBC,EAAAA,QAAQ,EAAE,UATM;AAUhBC,EAAAA,YAAY,EAAE;AAVE,CAApB;IAYqBC,e,sBAAN,MAAMA,eAAN,CAAsB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAkBjCC,UAlBiC,GAkBpBrB,IAAI,CAAC,UAAUsB,gBAAV,CAA2BC,IAA3B,EAAiC;AAC/C,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGH,IAAI,CAACI,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/BF,QAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBL,IAAI,CAACM,KAAL,CAAWH,CAAX,CAAzB,EAAwC,OAAxC;AACH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,YAAMtB,KAAK,CAAC8B,IAAN,CAAW,iCAAX,EAA8CH,KAA9C,EAAqD;AAACI,QAAAA,OAAO,EAAE;AAAV,OAArD,CAAN;AACH,KAPgB,CAlBgB;AAAA;;AAAA,C,+EAChChC,U;;;;;WAAmB,E;;8EACnBA,U;;;;;WAAwB,E;;4EACxBA,U;;;;;WAAsBG,QAAQ,CAACC,M;;+EAC/BJ,U;;;;;WAAyBS,WAAW,CAACL,M;;yEACrCJ,U;;;;;WAAmBE,KAAK,CAAC+B,K;;oFAMzBnC,M;;;;;WAA2B8B,KAAD,IAAW;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCF,KAAtC;AACA,WAAKM,UAAL,GAAkBN,KAAlB;AACA,YAAMM,UAAU,GAAG,KAAKA,UAAxB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCI,UAAhC;AACH,K;;;SAhBgBf,e","sourcesContent":["import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\nimport {State} from \"./AuthStore\";\n\nconst AddState = {\n    Closed: 'Closed',\n    Opened: 'Opened',\n    Adding: 'Adding',\n    Added: 'Added',\n    AddFailed: 'AddFailed',\n};\nconst UpdateState = {\n    Closed: 'Closed',\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n    Updating: 'Updating',\n    Updated: 'Updated',\n    UpdateFailed: 'UpdateFailed',\n    Uploading: 'Uploading',\n    Uploaded: 'Uploaded',\n    UploadFailed: 'UploadFailed',\n};\nexport default class FileUploadStore {\n    @observable files = [];\n    @observable uploadFile = '';\n    @observable addState = AddState.Closed;\n    @observable updateState = UpdateState.Closed;\n    @observable state = State.Ready;\n    /*\n        @action fileUploadHandle = () => {\n            this.fileUpload();\n        }\n    */\n    @action changeUploadFile = (files) => {\n        console.log('changeUploadFile 실행...:',files )\n        this.uploadFile = files;\n        const uploadFile = this.uploadFile;\n        console.log(\"this.uploadFile:\", uploadFile);\n    }\n\n    fileupload = flow(function* changeUploadFile(file) {\n        let formData = new FormData();\n        for(let i=0; i < file.length; i++) {\n            formData.append(\"files\", file.files[i], '1.jpg');\n        }\n        console.log(formData)\n        yield axios.post('/api/v1/img/uploadMultipleFiles', files, {headers: {}});\n    });\n\n}"]},"metadata":{},"sourceType":"module"}
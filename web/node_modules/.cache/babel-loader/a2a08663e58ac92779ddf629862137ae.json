{"ast":null,"code":"import _initializerDefineProperty from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _temp;\n\nimport { action, computed, flow, observable } from \"mobx\";\nimport axios from \"axios\";\nexport const State = {\n  Authenticated: 'Authenticated',\n  NotAuthenticated: 'NotAuthenticated',\n  Pending: 'Pending',\n  Failed: 'Failed'\n};\nexport const LocalStorageTokenKey = \"_OTL_AUTHENTICATION_TOKEN_\";\nexport const LocalStorageChatTokenKey = \"_OTL_AUTHENTICATION_CHAT_TOKEN_\";\nexport const LocalStorageSaveTypeKey = \"_OTL_AUTHENTICATION_TYPE_\";\nexport const LocalStorageSaveIdKey = \"_OTL_AUTHENTICATION_SAVE_ID_\";\nexport const LocalStorageSaveTeacherTypeKey = \"_OTL_AUTHENTICATION_TEACHER_TYPE_\";\nexport const LocalStorageSaveEmailKey = \"_OTL_AUTHENTICATION_EMAIL_\";\nexport const LocalStorageSaveTeacherNickNameKey = \"_OTL_AUTHENTICATION_TEACHER_NICK_NAME_\";\nexport const LocalStorageSaveNameKey = \"_OTL_AUTHENTICATION_NAME_\";\nconst EmptyLogin = {\n  id: '',\n  password: ''\n};\nconst EmptyMember = {\n  type: 'email',\n  email: '',\n  teacherNickName: '',\n  name: '',\n  password: ''\n};\nconst EmptyUser = {\n  userId: '',\n  email: '',\n  userName: '',\n  nickName: '',\n  typeCode: '',\n  profileUrl: '',\n  createdDatetime: '',\n  modifiedDatetime: ''\n};\nlet AuthStore = (_class = (_temp = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"loginType\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"login\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"member\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"saveId\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"loginState\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"loginToken\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"chatToken\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"loginUser\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"isOpenEnabledUserDialog\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"checkLoginId\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"clearLoginType\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"changeLoginType\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"changeLoginId\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"changeLoginPassword\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"changeMemberTeacherIdType\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"changeMemberEmail\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"changeMemberTeacherNickName\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"changeMemberName\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"changeMemberPassword\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"changeLoginMemberId\", _descriptor20, this);\n\n    _initializerDefineProperty(this, \"changeSaveId\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"invalidateLogin\", _descriptor22, this);\n\n    _initializerDefineProperty(this, \"logOut\", _descriptor23, this);\n\n    _initializerDefineProperty(this, \"changeEnabledUserDialog\", _descriptor24, this);\n\n    this.doLogin = flow(function* doLogin() {\n      this.loginState = State.Pending;\n\n      if (this.loginType === 'ADMIN' || this.loginType === 'USER') {\n        if (this.saveId) {\n          localStorage.setItem(LocalStorageSaveIdKey, this.login.id);\n        } else {\n          localStorage.setItem(LocalStorageSaveIdKey, '');\n          localStorage.setItem(LocalStorageSaveEmailKey, '');\n          localStorage.setItem(LocalStorageSaveNameKey, '');\n        }\n\n        try {\n          const param = {\n            email: this.login.id.trim(),\n            password: this.login.password\n          };\n          const url = this.loginType === 'ADMIN' ? '/api/v1/admin/signin' : '/api/v1/authentications/signin';\n          const response = yield axios.post(url, param);\n          const token = response.data.token;\n          const chatToken = response.data.chatToken;\n          const user = response.data.user;\n          localStorage.setItem(LocalStorageTokenKey, token);\n          localStorage.setItem(LocalStorageChatTokenKey, chatToken);\n          this.loginState = State.Authenticated;\n          this.loginToken = token;\n          this.chatToken = chatToken;\n          this.loginUser = user;\n        } catch (e) {\n          this.loginState = State.Failed;\n\n          if (e.response.data.message.startsWith(\"User is not enabled\")) {\n            this.isOpenEnabledUserDialog = true;\n          }\n\n          this.loginToken = '';\n          this.chatToken = '';\n          this.loginUser = Object.assign({}, EmptyUser);\n        }\n      } else if (this.loginType === 'MEMBER') {\n        if (this.saveId) {\n          localStorage.setItem(LocalStorageSaveTeacherTypeKey, this.member.type);\n          localStorage.setItem(LocalStorageSaveEmailKey, this.member.email);\n          localStorage.setItem(LocalStorageSaveTeacherNickNameKey, this.member.teacherNickName);\n          localStorage.setItem(LocalStorageSaveNameKey, this.member.name);\n        } else {\n          localStorage.setItem(LocalStorageSaveTeacherTypeKey, '');\n          localStorage.setItem(LocalStorageSaveIdKey, '');\n          localStorage.setItem(LocalStorageSaveEmailKey, '');\n          localStorage.setItem(LocalStorageSaveTeacherNickNameKey, '');\n          localStorage.setItem(LocalStorageSaveNameKey, '');\n        }\n\n        try {\n          const param = {\n            type: this.member.type,\n            email: this.member.email.trim(),\n            teacherNickName: this.member.teacherNickName.trim(),\n            userName: this.member.name.trim(),\n            password: this.member.password\n          };\n          const response = yield axios.post('/api/v1/authentications/members/signin', param);\n          const token = response.data.token;\n          const chatToken = response.data.chatToken;\n          const user = response.data.user;\n          localStorage.setItem(LocalStorageTokenKey, token);\n          localStorage.setItem(LocalStorageChatTokenKey, chatToken);\n          this.loginState = State.Authenticated;\n          this.loginToken = token;\n          this.chatToken = chatToken;\n          this.loginUser = user;\n        } catch (e) {\n          this.loginState = State.Failed;\n\n          if (e.response.data.message.startsWith(\"User is not enabled\")) {\n            this.isOpenEnabledUserDialog = true;\n          }\n\n          this.loginToken = '';\n          this.chatToken = '';\n          this.loginUser = Object.assign({}, EmptyUser);\n        }\n      }\n    });\n    this.checkLogin = flow(function* checkLogin() {\n      this.checkLoginId();\n      const token = localStorage.getItem(LocalStorageTokenKey);\n      const loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n      console.log(loginType);\n      this.loginType = loginType;\n\n      if (token) {\n        try {\n          const response = yield axios.get('/api/v1/authentications/signcheck');\n          const user = response.data;\n          this.loginState = State.Authenticated;\n          this.loginUser = user;\n        } catch (e) {\n          this.loginState = State.NotAuthenticated;\n          this.loginToken = '';\n          this.chatToken = '';\n          this.loginUser = Object.assign({}, EmptyUser);\n        }\n      }\n    });\n    this.doLogout = flow(function* doLogout() {\n      localStorage.removeItem(LocalStorageTokenKey);\n      localStorage.removeItem(LocalStorageChatTokenKey);\n\n      try {\n        yield axios.post('/api/v1/authentications/signout');\n        console.log(this);\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.chatToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n      } catch (e) {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.chatToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n      }\n\n      window.location.href = \"/\";\n    });\n  }\n\n  get isLoginTypeAdmin() {\n    return this.loginType === 'ADMIN';\n  }\n\n  get isLoginTypeUser() {\n    return this.loginType === 'USER';\n  }\n\n  get isLoginTypeMember() {\n    return this.loginType === 'MEMBER';\n  }\n\n  get isLoggedIn() {\n    return this.loginState === State.Authenticated;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"loginType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return localStorage.getItem(LocalStorageSaveTypeKey);\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"login\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return Object.assign({}, EmptyLogin);\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"member\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return Object.assign({}, EmptyMember);\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"saveId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"loginState\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return State.NotAuthenticated;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"loginToken\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"chatToken\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"loginUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return Object.assign({}, EmptyUser);\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"isOpenEnabledUserDialog\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"checkLoginId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      const loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n      const savedId = localStorage.getItem(LocalStorageSaveIdKey);\n      const saveTeacherIdType = localStorage.getItem(LocalStorageSaveTeacherTypeKey);\n      const saveEmail = localStorage.getItem(LocalStorageSaveEmailKey);\n      const teacherNickName = localStorage.getItem(LocalStorageSaveTeacherNickNameKey);\n      const saveName = localStorage.getItem(LocalStorageSaveNameKey);\n\n      if (loginType === 'USER') {\n        this.login.id = savedId;\n        this.saveId = true;\n      } else if (loginType === 'MEMBER') {\n        this.member.type = saveTeacherIdType ? saveTeacherIdType : 'email';\n        this.member.email = saveEmail ? saveEmail : '';\n        this.member.teacherNickName = teacherNickName ? teacherNickName : '';\n        this.member.name = saveName;\n        this.saveId = true;\n      } else if (loginType === 'ADMIN') {\n        this.loginType = 'ADMIN';\n        this.login.id = savedId;\n        this.saveId = true;\n      } else {\n        this.loginType = 'USER';\n      }\n    };\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"clearLoginType\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      localStorage.setItem(LocalStorageSaveTypeKey, '');\n      this.loginType = '';\n    };\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"changeLoginType\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return type => {\n      localStorage.setItem(LocalStorageSaveTypeKey, type);\n      this.loginType = type;\n    };\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"changeLoginId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      this.login.id = id;\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"changeLoginPassword\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return password => {\n      this.login.password = password;\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"changeMemberTeacherIdType\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return type => {\n      this.member.type = type;\n    };\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"changeMemberEmail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return email => {\n      this.member.email = email;\n    };\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"changeMemberTeacherNickName\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return teacherNickName => {\n      this.member.teacherNickName = teacherNickName;\n    };\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"changeMemberName\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return name => {\n      this.member.name = name;\n    };\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"changeMemberPassword\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return password => {\n      this.member.password = password;\n    };\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"changeLoginMemberId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return memberId => {\n      this.login.memberId = memberId;\n    };\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"changeSaveId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return saveId => {\n      this.saveId = saveId;\n    };\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"invalidateLogin\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.login = Object.assign({}, EmptyLogin);\n      this.loginState = State.NotAuthenticated;\n      this.loginToken = '';\n      this.loginUser = Object.assign({}, EmptyUser);\n    };\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"logOut\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return pathname => {\n      // if(pathname.startsWith(\"/broadcast/\")) {\n      if (window.confirm(\"로그아웃 하시겠습니까?\")) {\n        this.doLogout();\n      } // } else {\n      //     this.doLogout();\n      // }\n\n    };\n  }\n}), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, \"changeEnabledUserDialog\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return isOpenEnabledUserDialog => this.isOpenEnabledUserDialog = isOpenEnabledUserDialog;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"isLoginTypeAdmin\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoginTypeAdmin\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoginTypeUser\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoginTypeUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoginTypeMember\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoginTypeMember\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoggedIn\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoggedIn\"), _class.prototype)), _class);\nexport { AuthStore as default };","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/stores/AuthStore.js"],"names":["action","computed","flow","observable","axios","State","Authenticated","NotAuthenticated","Pending","Failed","LocalStorageTokenKey","LocalStorageChatTokenKey","LocalStorageSaveTypeKey","LocalStorageSaveIdKey","LocalStorageSaveTeacherTypeKey","LocalStorageSaveEmailKey","LocalStorageSaveTeacherNickNameKey","LocalStorageSaveNameKey","EmptyLogin","id","password","EmptyMember","type","email","teacherNickName","name","EmptyUser","userId","userName","nickName","typeCode","profileUrl","createdDatetime","modifiedDatetime","AuthStore","doLogin","loginState","loginType","saveId","localStorage","setItem","login","param","trim","url","response","post","token","data","chatToken","user","loginToken","loginUser","e","message","startsWith","isOpenEnabledUserDialog","Object","assign","member","checkLogin","checkLoginId","getItem","console","log","get","doLogout","removeItem","window","location","href","isLoginTypeAdmin","isLoginTypeUser","isLoginTypeMember","isLoggedIn","savedId","saveTeacherIdType","saveEmail","saveName","memberId","pathname","confirm"],"mappings":"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","sourcesContent":["import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nexport const State = {\n    Authenticated: 'Authenticated',\n    NotAuthenticated: 'NotAuthenticated',\n    Pending: 'Pending',\n    Failed: 'Failed',\n};\n\nexport const LocalStorageTokenKey = \"_OTL_AUTHENTICATION_TOKEN_\";\nexport const LocalStorageChatTokenKey = \"_OTL_AUTHENTICATION_CHAT_TOKEN_\";\nexport const LocalStorageSaveTypeKey = \"_OTL_AUTHENTICATION_TYPE_\";\nexport const LocalStorageSaveIdKey = \"_OTL_AUTHENTICATION_SAVE_ID_\";\nexport const LocalStorageSaveTeacherTypeKey = \"_OTL_AUTHENTICATION_TEACHER_TYPE_\";\nexport const LocalStorageSaveEmailKey = \"_OTL_AUTHENTICATION_EMAIL_\";\nexport const LocalStorageSaveTeacherNickNameKey = \"_OTL_AUTHENTICATION_TEACHER_NICK_NAME_\";\nexport const LocalStorageSaveNameKey = \"_OTL_AUTHENTICATION_NAME_\";\n\nconst EmptyLogin = {\n    id: '',\n    password: '',\n};\n\nconst EmptyMember = {\n    type: 'email',\n    email: '',\n    teacherNickName: '',\n    name: '',\n    password: '',\n};\n\nconst EmptyUser = {\n    userId: '',\n    email: '',\n    userName: '',\n    nickName: '',\n    typeCode: '',\n    profileUrl: '',\n    createdDatetime: '',\n    modifiedDatetime: '',\n};\n\nexport default class AuthStore {\n    @observable loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n    @observable login = Object.assign({}, EmptyLogin);\n    @observable member = Object.assign({}, EmptyMember);\n    @observable saveId = false;\n    @observable loginState = State.NotAuthenticated;\n    @observable loginToken = '';\n    @observable chatToken = '';\n    @observable loginUser = Object.assign({}, EmptyUser);\n    @observable isOpenEnabledUserDialog = false;\n\n    @action checkLoginId = () => {\n        const loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n        const savedId = localStorage.getItem(LocalStorageSaveIdKey);\n        const saveTeacherIdType = localStorage.getItem(LocalStorageSaveTeacherTypeKey);\n        const saveEmail = localStorage.getItem(LocalStorageSaveEmailKey);\n        const teacherNickName = localStorage.getItem(LocalStorageSaveTeacherNickNameKey);\n        const saveName = localStorage.getItem(LocalStorageSaveNameKey);\n\n        if(loginType === 'USER') {\n            this.login.id = savedId;\n            this.saveId = true;\n        } else if(loginType === 'MEMBER') {\n            this.member.type = saveTeacherIdType ? saveTeacherIdType : 'email';\n            this.member.email = saveEmail ? saveEmail : '';\n            this.member.teacherNickName = teacherNickName ? teacherNickName : '';\n            this.member.name = saveName;\n            this.saveId = true;\n        } else if(loginType === 'ADMIN') {\n            this.loginType = 'ADMIN';\n            this.login.id = savedId;\n            this.saveId = true;\n        } else {\n            this.loginType = 'USER';\n        }\n    };\n\n    @action clearLoginType = () => {\n        localStorage.setItem(LocalStorageSaveTypeKey, '');\n        this.loginType = '';\n    }\n\n\n    @action changeLoginType = (type) => {\n        localStorage.setItem(LocalStorageSaveTypeKey, type);\n        this.loginType = type;\n    }\n\n    @action changeLoginId = (id) => {\n        this.login.id = id;\n    };\n\n    @action changeLoginPassword = (password) => {\n        this.login.password = password;\n    };\n\n    @action changeMemberTeacherIdType = (type) => {\n        this.member.type = type;\n    }\n\n    @action changeMemberEmail = (email) => {\n        this.member.email = email;\n    }\n\n    @action changeMemberTeacherNickName = (teacherNickName) => {\n        this.member.teacherNickName = teacherNickName;\n    }\n\n    @action changeMemberName = (name) => {\n        this.member.name = name;\n    }\n\n    @action changeMemberPassword = (password) => {\n        this.member.password = password;\n    }\n\n    @action changeLoginMemberId = (memberId) => {\n        this.login.memberId = memberId;\n    }\n\n    @action changeSaveId = (saveId) => {\n        this.saveId = saveId;\n    };\n\n    @action invalidateLogin = () => {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n    };\n\n    @action logOut = pathname => {\n        // if(pathname.startsWith(\"/broadcast/\")) {\n        if (window.confirm(\"로그아웃 하시겠습니까?\")) {\n            this.doLogout();\n        }\n        // } else {\n        //     this.doLogout();\n        // }\n    };\n\n    @action changeEnabledUserDialog = isOpenEnabledUserDialog => this.isOpenEnabledUserDialog = isOpenEnabledUserDialog;\n\n    @computed get isLoginTypeAdmin() {\n        return this.loginType === 'ADMIN';\n    }\n\n    @computed get isLoginTypeUser() {\n        return this.loginType === 'USER';\n    }\n\n    @computed get isLoginTypeMember() {\n        return this.loginType === 'MEMBER';\n    }\n\n    @computed get isLoggedIn() {\n        return this.loginState === State.Authenticated;\n    }\n\n    doLogin = flow(function* doLogin() {\n        this.loginState = State.Pending;\n\n        if(this.loginType === 'ADMIN' || this.loginType === 'USER') {\n            if (this.saveId) {\n                localStorage.setItem(LocalStorageSaveIdKey, this.login.id);\n            } else {\n                localStorage.setItem(LocalStorageSaveIdKey, '');\n                localStorage.setItem(LocalStorageSaveEmailKey, '');\n                localStorage.setItem(LocalStorageSaveNameKey, '');\n            }\n\n            try {\n                const param = {\n                    email: this.login.id.trim(),\n                    password: this.login.password,\n                };\n                const url = this.loginType === 'ADMIN' ? '/api/v1/admin/signin' : '/api/v1/authentications/signin';\n                const response = yield axios.post(url, param);\n                const token = response.data.token;\n                const chatToken = response.data.chatToken;\n                const user = response.data.user;\n\n                localStorage.setItem(LocalStorageTokenKey, token);\n                localStorage.setItem(LocalStorageChatTokenKey, chatToken);\n\n                this.loginState = State.Authenticated;\n                this.loginToken = token;\n                this.chatToken = chatToken;\n                this.loginUser = user;\n            } catch (e) {\n                this.loginState = State.Failed;\n                if(e.response.data.message.startsWith(\"User is not enabled\")) {\n                    this.isOpenEnabledUserDialog = true;\n                }\n                this.loginToken = '';\n                this.chatToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        } else if(this.loginType === 'MEMBER') {\n            if (this.saveId) {\n                localStorage.setItem(LocalStorageSaveTeacherTypeKey, this.member.type);\n                localStorage.setItem(LocalStorageSaveEmailKey, this.member.email);\n                localStorage.setItem(LocalStorageSaveTeacherNickNameKey, this.member.teacherNickName);\n                localStorage.setItem(LocalStorageSaveNameKey, this.member.name);\n            } else {\n                localStorage.setItem(LocalStorageSaveTeacherTypeKey, '');\n                localStorage.setItem(LocalStorageSaveIdKey, '');\n                localStorage.setItem(LocalStorageSaveEmailKey, '');\n                localStorage.setItem(LocalStorageSaveTeacherNickNameKey, '');\n                localStorage.setItem(LocalStorageSaveNameKey, '');\n            }\n\n            try {\n                const param = {\n                    type: this.member.type,\n                    email: this.member.email.trim(),\n                    teacherNickName: this.member.teacherNickName.trim(),\n                    userName: this.member.name.trim(),\n                    password: this.member.password,\n                };\n                const response = yield axios.post('/api/v1/authentications/members/signin', param);\n                const token = response.data.token;\n                const chatToken = response.data.chatToken;\n                const user = response.data.user;\n\n                localStorage.setItem(LocalStorageTokenKey, token);\n                localStorage.setItem(LocalStorageChatTokenKey, chatToken);\n\n                this.loginState = State.Authenticated;\n                this.loginToken = token;\n                this.chatToken = chatToken;\n                this.loginUser = user;\n            } catch (e) {\n                this.loginState = State.Failed;\n                if(e.response.data.message.startsWith(\"User is not enabled\")) {\n                    this.isOpenEnabledUserDialog = true;\n                }\n                this.loginToken = '';\n                this.chatToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        }\n    });\n\n    checkLogin = flow(function* checkLogin() {\n        this.checkLoginId();\n        const token = localStorage.getItem(LocalStorageTokenKey);\n        const loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n        console.log(loginType);\n        this.loginType = loginType;\n        if(token) {\n            try {\n                const response = yield axios.get('/api/v1/authentications/signcheck');\n                const user = response.data;\n\n                this.loginState = State.Authenticated;\n                this.loginUser = user;\n            } catch(e) {\n                this.loginState = State.NotAuthenticated;\n                this.loginToken = '';\n                this.chatToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        }\n    });\n\n    doLogout = flow(function* doLogout() {\n        localStorage.removeItem(LocalStorageTokenKey);\n        localStorage.removeItem(LocalStorageChatTokenKey);\n        try {\n            yield axios.post('/api/v1/authentications/signout');\n\n            console.log(this);\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.chatToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        } catch (e) {\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.chatToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n\n        window.location.href = \"/\";\n    });\n}"]},"metadata":{},"sourceType":"module"}
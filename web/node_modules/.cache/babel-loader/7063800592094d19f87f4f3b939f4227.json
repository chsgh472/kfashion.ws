{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/jangseong-yeol/kfashion.ws/web/src/App.js\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport TopBar from \"./components/TopBar\";\nimport Home from \"./views/Home\";\nimport SignIn from \"./views/SignIn\";\nimport SignUp from \"./views/SignUp\";\n\nconst style = () => ({\n  root: {\n    backgroundColor: '#ffffff'\n  }\n});\n\nconst Janus = window.Janus;\nlet App = (_dec = inject('authStore', 'helpStore'), _dec(_class = observer(_class = (_temp = class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkWebRTC = () => {\n      Janus.init({\n        debug: [// 'error',\n          // 'warn',\n          // 'log',\n          //'debug',\n          //'trace',\n        ],\n        callback: () => {\n          console.log('[Demo] Initialized janus');\n\n          if (Janus && Janus.isWebrtcSupported()) {\n            this.setState({\n              janusInitialized: true\n            });\n          } else {\n            window.location.href = '/ie.html';\n          }\n        }\n      });\n    };\n\n    this.setMobileOpen = mobileOpen => {\n      this.setState({\n        mobileOpen: mobileOpen\n      });\n    };\n\n    this.state = {\n      mobileOpen: false,\n      deviceType: '',\n      browserType: '',\n      janusInitialized: false\n    };\n    moment.updateLocale('ko');\n  }\n\n  componentDidMount() {\n    console.log(\"========== OnTheLive App did mount ==========\"); // this.checkBrowser();\n\n    this.checkWebRTC();\n\n    const axiosRequestErrorHandler = error => {\n      return Promise.reject(error);\n    };\n\n    const axiosResponseInterceptor = response => {\n      if (response.status === 403) {\n        this.props.authStore.invalidateLogin();\n      }\n\n      return response;\n    };\n\n    const axiosResponseErrorHandler = error => {\n      if (error.response && error.response.status === 403) {\n        this.props.authStore.invalidateLogin();\n      }\n\n      return Promise.reject(error);\n    };\n\n    axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n    this.props.authStore.checkLogin();\n  } // checkBrowser = () => {\n  //     const isAlert = false;\n  //     const type = Params.getDeviceBrowserType(isAlert);\n  //     if(isAlert) {\n  //         alert(JSON.stringify(type));\n  //     } else {\n  //         console.log('type : ', type);\n  //     }\n  //\n  //     if(type.deviceType === Params.deviceType.android) {\n  //         if(type.browserType !== Params.browserType.chrome) {\n  //             window.location.href = '/ie.html';\n  //         }\n  //     } else if(type.deviceType === Params.deviceType.ios) {\n  //         if(type.browserType !== Params.browserType.safari) {\n  //             window.location.href = '/ie.html';\n  //         }\n  //     } else {\n  //         if(type.browserType !== Params.browserType.edge) {\n  //             window.location.href = '/ie.html';\n  //         }\n  //     }\n  // }\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      isLoggedIn,\n      loginType,\n      loginUser,\n      isLoginTypeAdmin\n    } = this.props.authStore;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      id: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(SignUp, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}, _temp)) || _class) || _class);\n;\nexport default withStyles(style)(App);","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","inject","observer","withStyles","axios","moment","TopBar","Home","SignIn","SignUp","style","root","backgroundColor","Janus","window","App","Component","constructor","props","checkWebRTC","init","debug","callback","console","log","isWebrtcSupported","setState","janusInitialized","location","href","setMobileOpen","mobileOpen","state","deviceType","browserType","updateLocale","componentDidMount","axiosRequestErrorHandler","error","Promise","reject","axiosResponseInterceptor","response","status","authStore","invalidateLogin","axiosResponseErrorHandler","interceptors","use","checkLogin","render","classes","isLoggedIn","loginType","loginUser","isLoginTypeAdmin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {inject, observer} from \"mobx-react\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\n\nimport TopBar from \"./components/TopBar\";\nimport Home from \"./views/Home\";\n\nimport SignIn from \"./views/SignIn\";\nimport SignUp from \"./views/SignUp\";\n\n\nconst style = () => ({\n    root: {\n        backgroundColor: '#ffffff',\n    }\n});\n\nconst Janus = window.Janus;\n\n@inject('authStore', 'helpStore')\n@observer\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobileOpen: false,\n            deviceType: '',\n            browserType: '',\n            janusInitialized: false,\n        };\n\n        moment.updateLocale('ko');\n    }\n\n    componentDidMount() {\n        console.log(\"========== OnTheLive App did mount ==========\");\n        // this.checkBrowser();\n        this.checkWebRTC();\n\n\n        const axiosRequestErrorHandler = (error) => {\n            return Promise.reject(error);\n        };\n\n        const axiosResponseInterceptor = (response) => {\n            if(response.status === 403) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return response;\n        };\n\n        const axiosResponseErrorHandler = (error) => {\n            if((error.response) && (error.response.status === 403)) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return Promise.reject(error);\n        };\n\n        axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n\n        this.props.authStore.checkLogin();\n    }\n\n    // checkBrowser = () => {\n    //     const isAlert = false;\n    //     const type = Params.getDeviceBrowserType(isAlert);\n    //     if(isAlert) {\n    //         alert(JSON.stringify(type));\n    //     } else {\n    //         console.log('type : ', type);\n    //     }\n    //\n    //     if(type.deviceType === Params.deviceType.android) {\n    //         if(type.browserType !== Params.browserType.chrome) {\n    //             window.location.href = '/ie.html';\n    //         }\n    //     } else if(type.deviceType === Params.deviceType.ios) {\n    //         if(type.browserType !== Params.browserType.safari) {\n    //             window.location.href = '/ie.html';\n    //         }\n    //     } else {\n    //         if(type.browserType !== Params.browserType.edge) {\n    //             window.location.href = '/ie.html';\n    //         }\n    //     }\n    // }\n\n    checkWebRTC = () => {\n        Janus.init({\n            debug: [\n\n                // 'error',\n                // 'warn',\n                // 'log',\n                //'debug',\n                //'trace',\n            ], callback: () => {\n                console.log('[Demo] Initialized janus');\n\n                if(Janus && Janus.isWebrtcSupported()) {\n                    this.setState({janusInitialized: true});\n                } else {\n                    window.location.href = '/ie.html';\n                }\n            }\n        });\n    }\n\n    setMobileOpen = (mobileOpen) => {\n        this.setState({mobileOpen: mobileOpen});\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { isLoggedIn, loginType, loginUser, isLoginTypeAdmin } = this.props.authStore;\n        return (\n            <div className={classes.root} id={\"root\"}>\n                <Router>\n                        <Switch>\n                            <Route exact path=\"/\"                           render={() => <Home loginType={loginType} />} />\n                            <Route       path=\"/signup\"                     render={() => <SignUp loginType={loginType} />} />\n                        </Switch>\n                </Router>\n            </div>\n        );\n    }\n};\n\nexport default withStyles(style) (App);"]},"metadata":{},"sourceType":"module"}
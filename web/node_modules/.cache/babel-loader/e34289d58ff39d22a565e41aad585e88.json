{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/jangseong-yeol/kfashion.ws/web/src/components/TopBar.js\";\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, IconButton, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nconst logoWidth = 120;\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${theme.drawerWidth}px)`,\n      marginLeft: theme.drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    marginLeft: (theme.sideMenuWidth - logoWidth) / 2,\n    paddingLeft: theme.spacing(3),\n    flexGrow: 1\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  }\n}));\nlet TopBar = (_dec = inject(\"authStore\", \"userStore\", \"signUpStore\"), _dec(_class = observer(_class = (_temp = class TopBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMenu = event => {\n      const name = event.currentTarget.name;\n      const anchorEl = event.currentTarget;\n      this.props.mainMenuStore.changeMenuData(name, \"anchorEl\", anchorEl);\n    };\n\n    this.handleMenuClose = target => {\n      this.props.mainMenuStore.changeMenuData(target, \"anchorEl\", null);\n    };\n\n    this.handleChannelCreateBtnClick = link => {\n      this.handleMenuClose(\"channelMenu\");\n      this.handlePushLink(link);\n    };\n\n    this.handleClickMyPage = event => {\n      let anchorEl = null;\n\n      if (!Boolean(this.props.mainMenuStore.menuData.myPage.anchorEl)) {\n        anchorEl = event.currentTarget;\n      }\n\n      const name = event.currentTarget.name;\n      this.props.mainMenuStore.changeMenuData(name, \"anchorEl\", anchorEl);\n      this.props.userStore.getUserData();\n    };\n\n    this.handleCloseMypagePopover = e => {\n      this.props.mainMenuStore.changeMenuData(\"myPage\", \"anchorEl\", null);\n    };\n\n    this.handleClickInfoModify = () => {\n      this.props.history.push('/mypage');\n      this.handleCloseMypagePopover();\n    };\n\n    this.handleClickMemberLogin = () => {\n      this.props.authStore.changeLoginType('MEMBER');\n      this.props.history.push('/channel/list');\n    };\n\n    this.handleClickUserLogin = () => {\n      this.props.authStore.changeLoginType('USER');\n      this.props.history.push('/channel/list');\n    };\n\n    this.handleToggleMenu = event => {\n      this.props.setMobileOpen(!this.props.mobileOpen);\n      this.props.mainMenuStore.changeMenuBarAnchorEl(event.currentTarget);\n    };\n\n    this.handleCloseMenu = () => {\n      this.props.mainMenuStore.changeMenuBarAnchorEl(null);\n    };\n\n    this.handlePushLink = link => {\n      if (this.props.location.pathname.startsWith(\"/broadcast/\")) {\n        if (this.props.location.pathname !== link) {\n          if (window.confirm(\"다른 메뉴로 이동하시겠습니까?\")) {\n            this.props.history.push(link);\n          }\n        }\n      } else {\n        this.props.history.push(link);\n      }\n    };\n\n    this.handleClickAnchorMenu = link => {\n      this.props.mainMenuStore.changeMenuBarAnchorEl(null);\n\n      if (this.props.location.pathname.startsWith(\"/broadcast/\")) {\n        if (this.props.location.pathname !== link) {\n          if (window.confirm(\"다른 메뉴로 이동하시겠습니까?\")) {\n            this.props.history.push(link);\n          }\n        }\n      } else {\n        this.props.history.push(link);\n      }\n    };\n\n    this.handleClickBoard = () => {\n      if (this.props.location.pathname.startsWith(\"/broadcast/\")) {\n        if (window.confirm(\"알림장으로 이동하시겠습니까?\")) {\n          this.props.history.push(\"/board/list\");\n        }\n      } else {\n        this.props.history.push(\"/board/list\");\n      }\n    };\n\n    this.state = {\n      memberLoginHover: false,\n      userLoginHover: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.userId && this.props.loginType) {\n      this.props.boardStore.loadUnreadBoardCount(this.props.userId, this.props.loginType);\n    }\n\n    this.props.signUpStore.getServerMode();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.userId && this.props.loginType) {\n      this.props.boardStore.loadUnreadBoardCount(this.props.userId, this.props.loginType);\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      isLoggedIn,\n      doLogout\n    } = this.props;\n    const {\n      menuBarAnchorEl\n    } = this.props.mainMenuStore;\n    const {\n      myPage\n    } = this.props.mainMenuStore.menuData;\n    const {\n      userData\n    } = this.props.userStore;\n    const {\n      isLoginTypeUser\n    } = this.props.authStore;\n    const {\n      serverMode\n    } = this.props.signUpStore;\n    const myPagePopoverOpen = Boolean(myPage.anchorEl);\n    const profileUrl = userData.profileUrl || \"/images/login-logo.png\";\n    return /*#__PURE__*/React.createElement(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      edge: \"start\",\n      onClick: handleDrawerToggle,\n      className: classes.menuButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: classes.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"K-FASHION\"), /*#__PURE__*/React.createElement(Button, {\n      className: classes.signUpBtn,\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => this.props.history.push(\"/signup\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")), isLoggedIn ? /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: doLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ExitToAppIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    })) : ''));\n  }\n\n}, _temp)) || _class) || _class);","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/components/TopBar.js"],"names":["React","Link","makeStyles","AppBar","IconButton","Toolbar","Typography","Button","MenuIcon","ExitToAppIcon","logoWidth","useStyles","theme","appBar","breakpoints","up","width","drawerWidth","marginLeft","menuButton","marginRight","spacing","display","title","sideMenuWidth","paddingLeft","flexGrow","link","textDecoration","color","TopBar","inject","observer","Component","constructor","props","handleMenu","event","name","currentTarget","anchorEl","mainMenuStore","changeMenuData","handleMenuClose","target","handleChannelCreateBtnClick","handlePushLink","handleClickMyPage","Boolean","menuData","myPage","userStore","getUserData","handleCloseMypagePopover","e","handleClickInfoModify","history","push","handleClickMemberLogin","authStore","changeLoginType","handleClickUserLogin","handleToggleMenu","setMobileOpen","mobileOpen","changeMenuBarAnchorEl","handleCloseMenu","location","pathname","startsWith","window","confirm","handleClickAnchorMenu","handleClickBoard","state","memberLoginHover","userLoginHover","componentDidMount","userId","loginType","boardStore","loadUnreadBoardCount","signUpStore","getServerMode","componentDidUpdate","prevProps","prevState","snapshot","render","classes","isLoggedIn","doLogout","menuBarAnchorEl","userData","isLoginTypeUser","serverMode","myPagePopoverOpen","profileUrl","handleDrawerToggle","signUpBtn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppBar, IconButton, Toolbar, Typography, Button} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nconst logoWidth = 120;\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${theme.drawerWidth}px)`,\n            marginLeft: theme.drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        marginLeft: (theme.sideMenuWidth - logoWidth) / 2,\n        paddingLeft: theme.spacing(3),\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}));\n\n@inject(\"authStore\", \"userStore\", \"signUpStore\")\n@observer\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            memberLoginHover: false,\n            userLoginHover: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.userId && this.props.loginType) {\n            this.props.boardStore.loadUnreadBoardCount(this.props.userId, this.props.loginType);\n        }\n        this.props.signUpStore.getServerMode();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.userId && this.props.loginType) {\n            this.props.boardStore.loadUnreadBoardCount(this.props.userId, this.props.loginType);\n        }\n    }\n\n    handleMenu = (event) => {\n        const name = event.currentTarget.name;\n        const anchorEl = event.currentTarget;\n        this.props.mainMenuStore.changeMenuData(name, \"anchorEl\", anchorEl);\n    };\n\n    handleMenuClose = (target) => {\n        this.props.mainMenuStore.changeMenuData(target, \"anchorEl\", null);\n    };\n\n    handleChannelCreateBtnClick = (link) => {\n        this.handleMenuClose(\"channelMenu\");\n        this.handlePushLink(link);\n    };\n\n    handleClickMyPage = (event) => {\n        let anchorEl = null;\n        if (!Boolean(this.props.mainMenuStore.menuData.myPage.anchorEl)) {\n            anchorEl = event.currentTarget;\n        }\n        const name = event.currentTarget.name;\n        this.props.mainMenuStore.changeMenuData(name, \"anchorEl\", anchorEl);\n        this.props.userStore.getUserData();\n    };\n\n    handleCloseMypagePopover = (e) => {\n        this.props.mainMenuStore.changeMenuData(\"myPage\", \"anchorEl\", null);\n    };\n\n    handleClickInfoModify = () => {\n        this.props.history.push('/mypage');\n        this.handleCloseMypagePopover();\n    };\n\n    handleClickMemberLogin = () => {\n        this.props.authStore.changeLoginType('MEMBER');\n        this.props.history.push('/channel/list');\n    };\n\n    handleClickUserLogin = () => {\n        this.props.authStore.changeLoginType('USER');\n        this.props.history.push('/channel/list');\n    };\n\n    handleToggleMenu = (event) => {\n        this.props.setMobileOpen(!this.props.mobileOpen);\n        this.props.mainMenuStore.changeMenuBarAnchorEl(event.currentTarget);\n    };\n\n    handleCloseMenu = () => {\n        this.props.mainMenuStore.changeMenuBarAnchorEl(null);\n    };\n\n    handlePushLink = link => {\n        if (this.props.location.pathname.startsWith(\"/broadcast/\")) {\n            if (this.props.location.pathname !== link) {\n                if (window.confirm(\"다른 메뉴로 이동하시겠습니까?\")) {\n                    this.props.history.push(link);\n                }\n            }\n        } else {\n            this.props.history.push(link);\n        }\n    }\n\n    handleClickAnchorMenu = (link) => {\n        this.props.mainMenuStore.changeMenuBarAnchorEl(null);\n        if (this.props.location.pathname.startsWith(\"/broadcast/\")) {\n            if (this.props.location.pathname !== link) {\n                if (window.confirm(\"다른 메뉴로 이동하시겠습니까?\")) {\n                    this.props.history.push(link);\n                }\n            }\n        } else {\n            this.props.history.push(link);\n        }\n    }\n\n    handleClickBoard = () => {\n        if (this.props.location.pathname.startsWith(\"/broadcast/\")) {\n            if (window.confirm(\"알림장으로 이동하시겠습니까?\")) {\n                this.props.history.push(\"/board/list\");\n            }\n        } else {\n            this.props.history.push(\"/board/list\");\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {isLoggedIn, doLogout} = this.props;\n        const {menuBarAnchorEl} = this.props.mainMenuStore;\n        const {myPage} = this.props.mainMenuStore.menuData;\n        const {userData} = this.props.userStore;\n        const {isLoginTypeUser} = this.props.authStore;\n        const {serverMode} = this.props.signUpStore;\n\n        const myPagePopoverOpen = Boolean(myPage.anchorEl);\n        const profileUrl = userData.profileUrl || \"/images/login-logo.png\";\n\n        return (\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\n                        <Link to='/' className={classes.link}>\n                            K-FASHION\n                        </Link>\n                        <Button className={classes.signUpBtn}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                                onClick={() => this.props.history.push(\"/signup\")}>\n                            회원가입\n                        </Button>\n                    </Typography>\n\n                    {isLoggedIn ? (\n                        <IconButton color=\"inherit\" onClick={doLogout}>\n                            <ExitToAppIcon/>\n                        </IconButton>\n                    ) : (\n                        ''\n                    )}\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
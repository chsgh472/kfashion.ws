{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/jangseong-yeol/kfashion.ws/web/src/App.js\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport TopBar from \"./components/TopBar\";\nimport Home from \"./views/Home\";\nimport SignIn from \"./views/SignIn\";\nimport SignUp from \"./views/SignUp\";\n\nconst style = () => ({\n  root: {\n    backgroundColor: '#ffffff'\n  }\n});\n\nconst Janus = window.Janus;\nlet App = (_dec = inject('authStore', 'helpStore'), _dec(_class = observer(_class = (_temp = class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkWebRTC = () => {\n      Janus.init({\n        debug: [// 'error',\n          // 'warn',\n          // 'log',\n          //'debug',\n          //'trace',\n        ],\n        callback: () => {\n          console.log('[Demo] Initialized janus');\n\n          if (Janus && Janus.isWebrtcSupported()) {\n            this.setState({\n              janusInitialized: true\n            });\n          } else {\n            window.location.href = '/ie.html';\n          }\n        }\n      });\n    };\n\n    this.setMobileOpen = mobileOpen => {\n      this.setState({\n        mobileOpen: mobileOpen\n      });\n    };\n\n    this.state = {\n      mobileOpen: false,\n      deviceType: '',\n      browserType: '',\n      janusInitialized: false\n    };\n    moment.updateLocale('ko');\n  }\n\n  componentDidMount() {\n    console.log(\"========== OnTheLive App did mount ==========\"); // this.checkBrowser();\n\n    this.checkWebRTC();\n\n    const axiosRequestInterceptors = config => {\n      const token = localStorage.getItem(store.LocalStorageTokenKey);\n      const chatToken = localStorage.getItem(store.LocalStorageChatTokenKey);\n\n      if (token) {\n        config.headers['X-Auth-Token'] = token;\n      }\n\n      if (chatToken) {\n        config.headers['C-Auth-Token'] = chatToken;\n      }\n\n      return config;\n    };\n\n    const axiosRequestErrorHandler = error => {\n      return Promise.reject(error);\n    };\n\n    const axiosResponseInterceptor = response => {\n      if (response.status === 403) {\n        this.props.authStore.invalidateLogin();\n      }\n\n      return response;\n    };\n\n    const axiosResponseErrorHandler = error => {\n      if (error.response && error.response.status === 403) {\n        this.props.authStore.invalidateLogin();\n      }\n\n      return Promise.reject(error);\n    };\n\n    axios.interceptors.request.use(axiosRequestInterceptors, axiosRequestErrorHandler);\n    axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n    this.props.authStore.checkLogin();\n  } // checkBrowser = () => {\n  //     const isAlert = false;\n  //     const type = Params.getDeviceBrowserType(isAlert);\n  //     if(isAlert) {\n  //         alert(JSON.stringify(type));\n  //     } else {\n  //         console.log('type : ', type);\n  //     }\n  //\n  //     if(type.deviceType === Params.deviceType.android) {\n  //         if(type.browserType !== Params.browserType.chrome) {\n  //             window.location.href = '/ie.html';\n  //         }\n  //     } else if(type.deviceType === Params.deviceType.ios) {\n  //         if(type.browserType !== Params.browserType.safari) {\n  //             window.location.href = '/ie.html';\n  //         }\n  //     } else {\n  //         if(type.browserType !== Params.browserType.edge) {\n  //             window.location.href = '/ie.html';\n  //         }\n  //     }\n  // }\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      isLoggedIn,\n      loginType,\n      loginUser,\n      isLoginTypeAdmin\n    } = this.props.authStore;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      id: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, isLoginTypeAdmin ? /*#__PURE__*/React.createElement(AdminTopBar, {\n      isLoggedIn: isLoggedIn,\n      userId: loginUser.userId,\n      doLogout: pathname => this.props.authStore.logOut(pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(TopBar, {\n      mobileOpen: this.state.mobileOpen,\n      setMobileOpen: this.setMobileOpen,\n      helpStore: this.props.helpStore,\n      isLoggedIn: isLoggedIn,\n      loginType: loginType,\n      userId: loginUser.userId,\n      doLogout: pathname => this.props.authStore.logOut(pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }), isLoggedIn ? /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/intro\",\n      render: () => /*#__PURE__*/React.createElement(Intro, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/channel/create/:selectedDay\",\n      render: () => /*#__PURE__*/React.createElement(ChannelCreate, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 104\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/channel/list\",\n      render: () => /*#__PURE__*/React.createElement(CalendarChannelList, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/broadCast/:channelId\",\n      render: () => /*#__PURE__*/React.createElement(Broadcast, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        janusInitialized: this.state.janusInitialized,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/group/list\",\n      render: () => /*#__PURE__*/React.createElement(GroupList, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/attendance/list\",\n      render: () => /*#__PURE__*/React.createElement(AttendanceList, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/ticket/list\",\n      render: () => /*#__PURE__*/React.createElement(TicketList, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/ticket/summary/:amount\",\n      render: () => /*#__PURE__*/React.createElement(TicketSummary, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/terms/:value\",\n      render: () => /*#__PURE__*/React.createElement(Terms, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/Payment/payment/:itemId\",\n      render: () => /*#__PURE__*/React.createElement(Payment, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 89\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/mypage\",\n      render: () => /*#__PURE__*/React.createElement(MyPage, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/board/list\",\n      render: () => /*#__PURE__*/React.createElement(BoardList, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/quiz/list\",\n      render: () => /*#__PURE__*/React.createElement(QuizList, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/faq\",\n      render: () => /*#__PURE__*/React.createElement(Faq, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/admin\",\n      render: () => /*#__PURE__*/React.createElement(Admin, {\n        loginType: loginType,\n        isLoginTypeAdmin: isLoginTypeAdmin,\n        userId: loginUser.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/lookaround\",\n      render: () => /*#__PURE__*/React.createElement(LookAroundTest, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        janusInitialized: this.state.janusInitialized,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/admin\",\n      render: () => /*#__PURE__*/React.createElement(AdminSignIn, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/intro\",\n      render: () => /*#__PURE__*/React.createElement(Intro, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(SignUp, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/terms/:value\",\n      render: () => /*#__PURE__*/React.createElement(Terms, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/findpassword\",\n      render: () => /*#__PURE__*/React.createElement(FindPassword, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/certification/email\",\n      render: () => /*#__PURE__*/React.createElement(MailCertification, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/certification/password\",\n      render: () => /*#__PURE__*/React.createElement(PassCertification, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/faq\",\n      render: () => /*#__PURE__*/React.createElement(Faq, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/lookaround\",\n      render: () => /*#__PURE__*/React.createElement(LookAroundTest, {\n        loginType: loginType,\n        userId: loginUser.userId,\n        janusInitialized: this.state.janusInitialized,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      render: () => /*#__PURE__*/React.createElement(SignIn, {\n        loginType: loginType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}, _temp)) || _class) || _class);\n;\nexport default withStyles(style)(App);","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","inject","observer","withStyles","axios","moment","TopBar","Home","SignIn","SignUp","style","root","backgroundColor","Janus","window","App","Component","constructor","props","checkWebRTC","init","debug","callback","console","log","isWebrtcSupported","setState","janusInitialized","location","href","setMobileOpen","mobileOpen","state","deviceType","browserType","updateLocale","componentDidMount","axiosRequestInterceptors","config","token","localStorage","getItem","store","LocalStorageTokenKey","chatToken","LocalStorageChatTokenKey","headers","axiosRequestErrorHandler","error","Promise","reject","axiosResponseInterceptor","response","status","authStore","invalidateLogin","axiosResponseErrorHandler","interceptors","request","use","checkLogin","render","classes","isLoggedIn","loginType","loginUser","isLoginTypeAdmin","userId","pathname","logOut","helpStore"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAGA,MAAMC,KAAK,GAAG,OAAO;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE;AADf;AADW,CAAP,CAAd;;AAMA,MAAMC,KAAK,GAAGC,MAAM,CAACD,KAArB;IAIME,G,WAFLd,MAAM,CAAC,WAAD,EAAc,WAAd,C,gBACNC,Q,mBADD,MAEMa,GAFN,SAEkBnB,KAAK,CAACoB,SAFxB,CAEkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmFnBC,WAnFmB,GAmFL,MAAM;AAChBN,MAAAA,KAAK,CAACO,IAAN,CAAW;AACPC,QAAAA,KAAK,EAAE,CAEH;AACA;AACA;AACA;AACA;AANG,SADA;AAQJC,QAAAA,QAAQ,EAAE,MAAM;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAEA,cAAGX,KAAK,IAAIA,KAAK,CAACY,iBAAN,EAAZ,EAAuC;AACnC,iBAAKC,QAAL,CAAc;AAACC,cAAAA,gBAAgB,EAAE;AAAnB,aAAd;AACH,WAFD,MAEO;AACHb,YAAAA,MAAM,CAACc,QAAP,CAAgBC,IAAhB,GAAuB,UAAvB;AACH;AACJ;AAhBM,OAAX;AAkBH,KAtGkB;;AAAA,SAwGnBC,aAxGmB,GAwGFC,UAAD,IAAgB;AAC5B,WAAKL,QAAL,CAAc;AAACK,QAAAA,UAAU,EAAEA;AAAb,OAAd;AACH,KA1GkB;;AAGf,SAAKC,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAE,KADH;AAETE,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITP,MAAAA,gBAAgB,EAAE;AAJT,KAAb;AAOAtB,IAAAA,MAAM,CAAC8B,YAAP,CAAoB,IAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBb,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EADgB,CAEhB;;AACA,SAAKL,WAAL;;AAEA,UAAMkB,wBAAwB,GAAIC,MAAD,IAAY;AACzC,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBC,KAAK,CAACC,oBAA3B,CAAd;AACA,YAAMC,SAAS,GAAGJ,YAAY,CAACC,OAAb,CAAqBC,KAAK,CAACG,wBAA3B,CAAlB;;AAEA,UAAGN,KAAH,EAAU;AACND,QAAAA,MAAM,CAACQ,OAAP,CAAe,cAAf,IAAiCP,KAAjC;AACH;;AAED,UAAGK,SAAH,EAAc;AACVN,QAAAA,MAAM,CAACQ,OAAP,CAAe,cAAf,IAAiCF,SAAjC;AACH;;AAED,aAAON,MAAP;AACH,KAbD;;AAeA,UAAMS,wBAAwB,GAAIC,KAAD,IAAW;AACxC,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAFD;;AAIA,UAAMG,wBAAwB,GAAIC,QAAD,IAAc;AAC3C,UAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AACxB,aAAKnC,KAAL,CAAWoC,SAAX,CAAqBC,eAArB;AACH;;AAED,aAAOH,QAAP;AACH,KAND;;AAQA,UAAMI,yBAAyB,GAAIR,KAAD,IAAW;AACzC,UAAIA,KAAK,CAACI,QAAP,IAAqBJ,KAAK,CAACI,QAAN,CAAeC,MAAf,KAA0B,GAAlD,EAAwD;AACpD,aAAKnC,KAAL,CAAWoC,SAAX,CAAqBC,eAArB;AACH;;AAED,aAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAND;;AAQA5C,IAAAA,KAAK,CAACqD,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BtB,wBAA/B,EAAyDU,wBAAzD;AACA3C,IAAAA,KAAK,CAACqD,YAAN,CAAmBL,QAAnB,CAA4BO,GAA5B,CAAgCR,wBAAhC,EAA0DK,yBAA1D;AAEA,SAAKtC,KAAL,CAAWoC,SAAX,CAAqBM,UAArB;AACH,GA1D6B,CA4D9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA2BAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAK5C,KAAzB;AACA,UAAM;AAAE6C,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA,SAAzB;AAAoCC,MAAAA;AAApC,QAAyD,KAAKhD,KAAL,CAAWoC,SAA1E;AACA,wBACI;AAAK,MAAA,SAAS,EAAEQ,OAAO,CAACnD,IAAxB;AAA8B,MAAA,EAAE,EAAE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKuD,gBAAgB,gBACb,oBAAC,WAAD;AACI,MAAA,UAAU,EAAEH,UADhB;AAEI,MAAA,MAAM,EAAEE,SAAS,CAACE,MAFtB;AAGI,MAAA,QAAQ,EAAEC,QAAQ,IAAI,KAAKlD,KAAL,CAAWoC,SAAX,CAAqBe,MAArB,CAA4BD,QAA5B,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,gBAMb,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWD,UAA/B;AACQ,MAAA,aAAa,EAAE,KAAKD,aAD5B;AAEQ,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWoD,SAF9B;AAGQ,MAAA,UAAU,EAAEP,UAHpB;AAIQ,MAAA,SAAS,EAAEC,SAJnB;AAKQ,MAAA,MAAM,EAAEC,SAAS,CAACE,MAL1B;AAMQ,MAAA,QAAQ,EAAEC,QAAQ,IAAI,KAAKlD,KAAL,CAAWoC,SAAX,CAAqBe,MAArB,CAA4BD,QAA5B,CAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPR,EAgBKL,UAAU,gBACP,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEC,SAAjB;AAA4B,QAAA,MAAM,EAAEC,SAAS,CAACE,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEH,SAAlB;AAA6B,QAAA,MAAM,EAAEC,SAAS,CAACE,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,8BAAlB;AAA6D,MAAA,MAAM,EAAE,mBAAM,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEH,SAA1B;AAAqC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,mBAAD;AAAqB,QAAA,SAAS,EAAEH,SAAhC;AAA2C,QAAA,MAAM,EAAEC,SAAS,CAACE,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,KAAD;AAAa,MAAA,IAAI,EAAC,uBAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEH,SAAtB;AAAiC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAnD;AAA2D,QAAA,gBAAgB,EAAE,KAAKnC,KAAL,CAAWL,gBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEqC,SAAtB;AAAiC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,kBAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAEH,SAA3B;AAAsC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,cAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEH,SAAvB;AAAkC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eASI,oBAAC,KAAD;AAAa,MAAA,IAAI,EAAC,yBAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEH,SAA1B;AAAqC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAUI,oBAAC,KAAD;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEH,SAAlB;AAA6B,QAAA,MAAM,EAAEC,SAAS,CAACE,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAWI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,0BAAlB;AAA8C,MAAA,MAAM,EAAE,mBAAM,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAEH,SAApB;AAA+B,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAYI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEH,SAAnB;AAA8B,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,eAaI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEH,SAAtB;AAAiC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,eAcI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEH,SAArB;AAAgC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,eAeI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eAiBI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEA,SAAlB;AAA6B,QAAA,gBAAgB,EAAEE,gBAA/C;AAAiE,QAAA,MAAM,EAAED,SAAS,CAACE,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,eAmBI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAEH,SAA3B;AAAsC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAxD;AAAgE,QAAA,gBAAgB,EAAE,KAAKnC,KAAL,CAAWL,gBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADO,gBAuBP,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEqC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEA,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,KAAD;AAAa,MAAA,IAAI,EAAC,SAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,KAAD;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEA,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,sBAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAEA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,yBAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAEA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eASI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAWI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAEA,SAA3B;AAAsC,QAAA,MAAM,EAAEC,SAAS,CAACE,MAAxD;AAAgE,QAAA,gBAAgB,EAAE,KAAKnC,KAAL,CAAWL,gBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAYI,oBAAC,KAAD;AAAgD,MAAA,MAAM,EAAE,mBAAM,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEqC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAvCR,CADJ,CADJ;AA2DH;;AA3K6B,C;AA4KjC;AAED,eAAe7D,UAAU,CAACO,KAAD,CAAV,CAAmBK,GAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {inject, observer} from \"mobx-react\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\n\nimport TopBar from \"./components/TopBar\";\nimport Home from \"./views/Home\";\n\nimport SignIn from \"./views/SignIn\";\nimport SignUp from \"./views/SignUp\";\n\n\nconst style = () => ({\n    root: {\n        backgroundColor: '#ffffff',\n    }\n});\n\nconst Janus = window.Janus;\n\n@inject('authStore', 'helpStore')\n@observer\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobileOpen: false,\n            deviceType: '',\n            browserType: '',\n            janusInitialized: false,\n        };\n\n        moment.updateLocale('ko');\n    }\n\n    componentDidMount() {\n        console.log(\"========== OnTheLive App did mount ==========\");\n        // this.checkBrowser();\n        this.checkWebRTC();\n\n        const axiosRequestInterceptors = (config) => {\n            const token = localStorage.getItem(store.LocalStorageTokenKey);\n            const chatToken = localStorage.getItem(store.LocalStorageChatTokenKey);\n\n            if(token) {\n                config.headers['X-Auth-Token'] = token;\n            }\n\n            if(chatToken) {\n                config.headers['C-Auth-Token'] = chatToken;\n            }\n\n            return config;\n        };\n\n        const axiosRequestErrorHandler = (error) => {\n            return Promise.reject(error);\n        };\n\n        const axiosResponseInterceptor = (response) => {\n            if(response.status === 403) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return response;\n        };\n\n        const axiosResponseErrorHandler = (error) => {\n            if((error.response) && (error.response.status === 403)) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return Promise.reject(error);\n        };\n\n        axios.interceptors.request.use(axiosRequestInterceptors, axiosRequestErrorHandler);\n        axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n\n        this.props.authStore.checkLogin();\n    }\n\n    // checkBrowser = () => {\n    //     const isAlert = false;\n    //     const type = Params.getDeviceBrowserType(isAlert);\n    //     if(isAlert) {\n    //         alert(JSON.stringify(type));\n    //     } else {\n    //         console.log('type : ', type);\n    //     }\n    //\n    //     if(type.deviceType === Params.deviceType.android) {\n    //         if(type.browserType !== Params.browserType.chrome) {\n    //             window.location.href = '/ie.html';\n    //         }\n    //     } else if(type.deviceType === Params.deviceType.ios) {\n    //         if(type.browserType !== Params.browserType.safari) {\n    //             window.location.href = '/ie.html';\n    //         }\n    //     } else {\n    //         if(type.browserType !== Params.browserType.edge) {\n    //             window.location.href = '/ie.html';\n    //         }\n    //     }\n    // }\n\n    checkWebRTC = () => {\n        Janus.init({\n            debug: [\n\n                // 'error',\n                // 'warn',\n                // 'log',\n                //'debug',\n                //'trace',\n            ], callback: () => {\n                console.log('[Demo] Initialized janus');\n\n                if(Janus && Janus.isWebrtcSupported()) {\n                    this.setState({janusInitialized: true});\n                } else {\n                    window.location.href = '/ie.html';\n                }\n            }\n        });\n    }\n\n    setMobileOpen = (mobileOpen) => {\n        this.setState({mobileOpen: mobileOpen});\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { isLoggedIn, loginType, loginUser, isLoginTypeAdmin } = this.props.authStore;\n        return (\n            <div className={classes.root} id={\"root\"}>\n                <Router>\n                    {isLoginTypeAdmin ?\n                        <AdminTopBar\n                            isLoggedIn={isLoggedIn}\n                            userId={loginUser.userId}\n                            doLogout={pathname => this.props.authStore.logOut(pathname)} />\n                        :\n                        <TopBar mobileOpen={this.state.mobileOpen}\n                                setMobileOpen={this.setMobileOpen}\n                                helpStore={this.props.helpStore}\n                                isLoggedIn={isLoggedIn}\n                                loginType={loginType}\n                                userId={loginUser.userId}\n                                doLogout={pathname => this.props.authStore.logOut(pathname)} />\n                    }\n\n                    {isLoggedIn ? (\n                        <Switch>\n                            <Route exact path=\"/\"                           render={() => <Home loginType={loginType} userId={loginUser.userId} /> } />\n                            <Route exact path=\"/intro\"                      render={() => <Intro loginType={loginType} userId={loginUser.userId}  /> } />\n                            <Route exact path=\"/channel/create/:selectedDay\"             render={() => <ChannelCreate loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/channel/list\"               render={() => <CalendarChannelList loginType={loginType} userId={loginUser.userId} />} />\n                            <Route       path=\"/broadCast/:channelId\"       render={() => <Broadcast loginType={loginType} userId={loginUser.userId} janusInitialized={this.state.janusInitialized} />} />\n                            <Route exact path=\"/group/list\"                 render={() => <GroupList loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/attendance/list\"            render={() => <AttendanceList loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/ticket/list\"                render={() => <TicketList loginType={loginType} userId={loginUser.userId} />} />\n                            <Route       path=\"/ticket/summary/:amount\"     render={() => <TicketSummary loginType={loginType} userId={loginUser.userId} />} />\n                            <Route       path=\"/terms/:value\"               render={() => <Terms loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/Payment/payment/:itemId\" \trender={() => <Payment loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/mypage\"                     render={() => <MyPage loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/board/list\"                 render={() => <BoardList loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/quiz/list\"                  render={() => <QuizList loginType={loginType} userId={loginUser.userId} />} />\n                            <Route exact path=\"/faq\"                        render={() => <Faq loginType={loginType} />} />\n\n                            <Route exact path=\"/admin\"                      render={() => <Admin loginType={loginType} isLoginTypeAdmin={isLoginTypeAdmin} userId={loginUser.userId} /> } />\n\n                            <Route exact path=\"/lookaround\"                 render={() => <LookAroundTest loginType={loginType} userId={loginUser.userId} janusInitialized={this.state.janusInitialized} />} />\n                        </Switch>\n                    ) : (\n                        <Switch>\n                            <Route exact path=\"/\"                           render={() => <Home loginType={loginType} />} />\n                            <Route exact path=\"/admin\"                      render={() => <AdminSignIn loginType={loginType} />} />\n                            <Route exact path=\"/intro\"                      render={() => <Intro loginType={loginType} />} />\n                            <Route       path=\"/signup\"                     render={() => <SignUp loginType={loginType} />} />\n                            <Route       path=\"/terms/:value\"               render={() => <Terms loginType={loginType} />} />\n                            <Route exact path=\"/findpassword\"               render={() => <FindPassword loginType={loginType} />} />\n                            <Route exact path=\"/certification/email\"        render={() => <MailCertification loginType={loginType} />} />\n                            <Route exact path=\"/certification/password\"     render={() => <PassCertification loginType={loginType} />} />\n                            <Route exact path=\"/faq\"                        render={() => <Faq loginType={loginType} />} />\n\n                            <Route exact path=\"/lookaround\"                 render={() => <LookAroundTest loginType={loginType} userId={loginUser.userId} janusInitialized={this.state.janusInitialized} />} />\n                            <Route                                          render={() => <SignIn loginType={loginType} />} />\n                        </Switch>\n                    )}\n                </Router>\n            </div>\n        );\n    }\n};\n\nexport default withStyles(style) (App);"]},"metadata":{},"sourceType":"module"}
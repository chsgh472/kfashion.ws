{"ast":null,"code":"import _initializerDefineProperty from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { action, computed, flow, observable } from \"mobx\";\nimport axios from \"axios\";\nconst ListState = {\n  Loading: 'Loading',\n  Loaded: 'Loaded',\n  LoadFailed: 'LoadFailed'\n};\nlet SecondStepStore = (_class = (_temp = class SecondStepStore {\n  constructor() {\n    _initializerDefineProperty(this, \"colorList\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"sleeveList\", _descriptor2, this);\n\n    this.loadColorList = flow(function* getColorList() {\n      try {\n        const response = yield axios.get(`/api/v1/kfashion/category/item/basic/color`);\n\n        if (response.status === 200) {\n          const color = response.data.colorList;\n          this.colorList = color;\n        }\n      } catch (error) {\n        console.log(\"error getColorList\", error);\n      }\n    });\n    this.loadSleeveList = flow(function* getSleeveList() {\n      try {\n        const response = yield axios.get(`/api/v1/kfashion/category/item/basic/sleeve`);\n\n        if (response.status === 200) {\n          const sleeve = response.data.sleeveList;\n          this.sleeveList = sleeve;\n        }\n      } catch (error) {\n        console.log(\"error getSleeveList\", error);\n      }\n    });\n  }\n\n  get color() {\n    return this.colorList === undefined ? [] : this.colorList;\n  }\n\n  get sleeve() {\n    return this.sleeveList === undefined ? [] : this.sleeveList;\n  }\n  /*@computed\n  get clothLength() {\n      return this.clothLengthList === undefined ? [] : this.clothLengthList;\n  }\n  @computed\n  get print() {\n      return this.printList === undefined ? [] : this.printList;\n  }\n  @action changeCategory =() => {\n      this.loadCategoryList();\n  }\n  @action changeColor =() => {\n      this.loadColorList();\n  }*/\n\n  /* loadClothList = flow(function* getClothList() {\n       try {\n           const response = yield axios.get(`/api/v1/category/item/basic/cloth`)\n           if(response.status === 200) {\n               this.clothLengthList = response.data;\n           }\n       } catch(error) {\n           console.log(\"error getClothList\", error);\n       }\n   })\n    loadPrintList = flow(function* getPrintList() {\n       try {\n           const response = yield axios.get(`/api/v1/category/item/basic/print`)\n           if(response.status === 200) {\n               this.printList = response.data;\n           }\n       } catch(error) {\n           console.log(\"error getPrintList\", error);\n       }\n   })*/\n\n  /*changeCategoryStatus = flow(function* changeCategoryStatus(userId, statusCode) {\n      try {\n          const response = yield axios.put(`/api/v1/admin/users`, [{\"userId\": userId, \"statusCode\": statusCode}])\n          if(response.status === 200) {\n              this.loadCategoryList();\n          }\n      } catch(error) {\n          console.log(\"error getUserList\", error);\n      }\n  })*/\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"colorList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"sleeveList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"color\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"color\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"sleeve\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"sleeve\"), _class.prototype)), _class);\nexport { SecondStepStore as default };","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/stores/SecondStepStore.js"],"names":["action","computed","flow","observable","axios","ListState","Loading","Loaded","LoadFailed","SecondStepStore","loadColorList","getColorList","response","get","status","color","data","colorList","error","console","log","loadSleeveList","getSleeveList","sleeve","sleeveList","undefined"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAiD,MAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,SADK;AAEdC,EAAAA,MAAM,EAAE,QAFM;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;IAMqBC,e,sBAAN,MAAMA,eAAN,CAAsB;AAAA;AAAA;;AAAA;;AAAA,SA8BjCC,aA9BiC,GA8BjBR,IAAI,CAAC,UAAUS,YAAV,GAAyB;AAC1C,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,4CAAX,CAAvB;;AACA,YAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA4B;AACxB,gBAAMC,KAAK,GAAEH,QAAQ,CAACI,IAAT,CAAcC,SAA3B;AACA,eAAKA,SAAL,GAAeF,KAAf;AACH;AACJ,OAND,CAME,OAAMG,KAAN,EAAa;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AACH;AACJ,KAVmB,CA9Ba;AAAA,SA0CjCG,cA1CiC,GA0ChBnB,IAAI,CAAC,UAAUoB,aAAV,GAA0B;AAC5C,UAAI;AACA,cAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,6CAAX,CAAvB;;AACA,YAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA4B;AACxB,gBAAMS,MAAM,GAAEX,QAAQ,CAACI,IAAT,CAAcQ,UAA5B;AACA,eAAKA,UAAL,GAAgBD,MAAhB;AACH;AACJ,OAND,CAME,OAAML,KAAN,EAAa;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACH;AACJ,KAVoB,CA1CY;AAAA;;AAKjC,MACIH,KADJ,GACY;AACR,WAAO,KAAKE,SAAL,KAAmBQ,SAAnB,GAA+B,EAA/B,GAAoC,KAAKR,SAAhD;AACH;;AACD,MACIM,MADJ,GACa;AACT,WAAO,KAAKC,UAAL,KAAoBC,SAApB,GAAgC,EAAhC,GAAqC,KAAKD,UAAjD;AACH;AACD;;;;;;;;;;;;;;;AAyCD;;;;;;;;;;;;;;;;;;;;;AAuBC;;;;;;;;;;;;AA7EiC,C,mFAChCrB,U;;;;;WAAuB,E;;8EACvBA,U;;;;;WAAwB,E;;0DAGxBF,Q,yIAIAA,Q;SATgBQ,e","sourcesContent":["import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nconst ListState = {\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n};\n\nexport default class SecondStepStore {\n    @observable colorList = []\n    @observable sleeveList = []\n\n\n    @computed\n    get color() {\n        return this.colorList === undefined ? [] : this.colorList;\n    }\n    @computed\n    get sleeve() {\n        return this.sleeveList === undefined ? [] : this.sleeveList;\n    }\n    /*@computed\n    get clothLength() {\n        return this.clothLengthList === undefined ? [] : this.clothLengthList;\n    }\n    @computed\n    get print() {\n        return this.printList === undefined ? [] : this.printList;\n    }\n    @action changeCategory =() => {\n        this.loadCategoryList();\n    }\n    @action changeColor =() => {\n        this.loadColorList();\n    }*/\n\n\n\n    loadColorList = flow(function* getColorList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/basic/color`)\n            if(response.status === 200) {\n                const color =response.data.colorList;\n                this.colorList=color\n            }\n        } catch(error) {\n            console.log(\"error getColorList\", error);\n        }\n    })\n\n    loadSleeveList = flow(function* getSleeveList() {\n        try {\n            const response = yield axios.get(`/api/v1/kfashion/category/item/basic/sleeve`)\n            if(response.status === 200) {\n                const sleeve =response.data.sleeveList;\n                this.sleeveList=sleeve\n            }\n        } catch(error) {\n            console.log(\"error getSleeveList\", error);\n        }\n    })\n\n   /* loadClothList = flow(function* getClothList() {\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/cloth`)\n            if(response.status === 200) {\n                this.clothLengthList = response.data;\n            }\n        } catch(error) {\n            console.log(\"error getClothList\", error);\n        }\n    })\n\n    loadPrintList = flow(function* getPrintList() {\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/print`)\n            if(response.status === 200) {\n                this.printList = response.data;\n            }\n        } catch(error) {\n            console.log(\"error getPrintList\", error);\n        }\n    })*/\n\n\n    /*changeCategoryStatus = flow(function* changeCategoryStatus(userId, statusCode) {\n        try {\n            const response = yield axios.put(`/api/v1/admin/users`, [{\"userId\": userId, \"statusCode\": statusCode}])\n            if(response.status === 200) {\n                this.loadCategoryList();\n            }\n        } catch(error) {\n            console.log(\"error getUserList\", error);\n        }\n    })*/\n\n}"]},"metadata":{},"sourceType":"module"}
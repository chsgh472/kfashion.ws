{"ast":null,"code":"import _initializerDefineProperty from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;\n\nimport { action, flow, observable } from \"mobx\";\nimport axios from \"axios\";\nexport const State = {\n  Authenticated: 'Authenticated',\n  NotAuthenticated: 'NotAuthenticated',\n  Pending: 'Pending',\n  Failed: 'Failed'\n};\nexport const LocalStorageTokenKey = '_BASKITOP_AUTHENTICATION_TOKEN_';\nexport const LocalStorageSaveTypeKey = \"_OTL_AUTHENTICATION_TYPE_\";\nconst EmptyLogin = {\n  id: '',\n  password: ''\n};\nconst EmptyUser = {\n  id: '',\n  name: '',\n  type: '',\n  createdDatetime: '',\n  updatedDatetime: ''\n};\nlet AuthStore = (_class = (_temp = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"loginType\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"login\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"loginState\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"loginToken\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"loginUser\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"checkLoginId\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"changeLoginPassword\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"invalidateLogin\", _descriptor8, this);\n\n    this.doLogin = flow(function* doLogin() {\n      this.loginState = State.Pending;\n\n      try {\n        const param = this.login;\n        const response = yield axios.post('/api/v1/authentications/signin', param);\n        const token = response.data.token;\n        const user = response.data.user;\n        localStorage.setItem(LocalStorageTokenKey, token);\n        console.log('doLogin');\n        console.log(this);\n        this.loginState = State.Authenticated;\n        this.loginToken = token;\n        this.loginUser = user;\n      } catch (e) {\n        this.loginState = State.Failed;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n      }\n    });\n    this.checkLogin = flow(function* checkLogin() {\n      const token = localStorage.getItem(LocalStorageTokenKey);\n\n      if (token) {\n        try {\n          const response = yield axios.get('/api/v1/authentications/signcheck');\n          const token = response.data.token;\n          const user = response.data.user;\n          this.loginState = State.Authenticated;\n          this.loginToken = token;\n          this.loginUser = user;\n        } catch (e) {\n          this.loginState = State.NotAuthenticated;\n          this.loginToken = '';\n          this.loginUser = Object.assign({}, EmptyUser);\n        }\n      }\n    });\n    this.doLogout = flow(function* doLogout() {\n      localStorage.removeItem(LocalStorageTokenKey);\n\n      try {\n        yield axios.post('/api/v1/authentications/signout');\n        console.log(this);\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n      } catch (e) {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n      }\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"loginType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return localStorage.getItem(LocalStorageSaveTypeKey);\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"login\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return Object.assign({}, EmptyLogin);\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"loginState\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return State.NotAuthenticated;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"loginToken\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"loginUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return Object.assign({}, EmptyUser);\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"checkLoginId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      const loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n      const savedId = localStorage.getItem(LocalStorageSaveIdKey);\n      const saveTeacherIdType = localStorage.getItem(LocalStorageSaveTeacherTypeKey);\n      const saveEmail = localStorage.getItem(LocalStorageSaveEmailKey);\n      const teacherNickName = localStorage.getItem(LocalStorageSaveTeacherNickNameKey);\n      const saveName = localStorage.getItem(LocalStorageSaveNameKey);\n\n      if (loginType === 'USER') {\n        this.login.id = savedId;\n        this.saveId = true;\n      } else if (loginType === 'MEMBER') {\n        this.member.type = saveTeacherIdType ? saveTeacherIdType : 'email';\n        this.member.email = saveEmail ? saveEmail : '';\n        this.member.teacherNickName = teacherNickName ? teacherNickName : '';\n        this.member.name = saveName;\n        this.saveId = true;\n      } else if (loginType === 'ADMIN') {\n        this.loginType = 'ADMIN';\n        this.login.id = savedId;\n        this.saveId = true;\n      } else {\n        this.loginType = 'USER';\n      }\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"changeLoginPassword\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return password => {\n      this.login.password = password;\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"invalidateLogin\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.login = Object.assign({}, EmptyLogin);\n      this.loginState = State.NotAuthenticated;\n      this.loginToken = '';\n      this.loginUser = Object.assign({}, EmptyUser);\n    };\n  }\n})), _class);\nexport { AuthStore as default };","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/stores/AuthStore.js"],"names":["action","flow","observable","axios","State","Authenticated","NotAuthenticated","Pending","Failed","LocalStorageTokenKey","LocalStorageSaveTypeKey","EmptyLogin","id","password","EmptyUser","name","type","createdDatetime","updatedDatetime","AuthStore","doLogin","loginState","param","login","response","post","token","data","user","localStorage","setItem","console","log","loginToken","loginUser","e","Object","assign","checkLogin","getItem","get","doLogout","removeItem","loginType","savedId","LocalStorageSaveIdKey","saveTeacherIdType","LocalStorageSaveTeacherTypeKey","saveEmail","LocalStorageSaveEmailKey","teacherNickName","LocalStorageSaveTeacherNickNameKey","saveName","LocalStorageSaveNameKey","saveId","member","email"],"mappings":"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","sourcesContent":["import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nexport const State = {\n    Authenticated: 'Authenticated',\n    NotAuthenticated: 'NotAuthenticated',\n    Pending: 'Pending',\n    Failed: 'Failed',\n};\n\nexport const LocalStorageTokenKey = '_BASKITOP_AUTHENTICATION_TOKEN_';\nexport const LocalStorageSaveTypeKey = \"_OTL_AUTHENTICATION_TYPE_\";\nconst EmptyLogin = {\n    id: '',\n    password: '',\n};\n\nconst EmptyUser = {\n    id: '',\n    name: '',\n    type: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n};\n\nexport default class AuthStore {\n    @observable loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n    @observable login = Object.assign({}, EmptyLogin);\n    @observable loginState = State.NotAuthenticated;\n    @observable loginToken = '';\n    @observable loginUser = Object.assign({}, EmptyUser);\n\n    @action checkLoginId = () => {\n        const loginType = localStorage.getItem(LocalStorageSaveTypeKey);\n        const savedId = localStorage.getItem(LocalStorageSaveIdKey);\n        const saveTeacherIdType = localStorage.getItem(LocalStorageSaveTeacherTypeKey);\n        const saveEmail = localStorage.getItem(LocalStorageSaveEmailKey);\n        const teacherNickName = localStorage.getItem(LocalStorageSaveTeacherNickNameKey);\n        const saveName = localStorage.getItem(LocalStorageSaveNameKey);\n\n        if(loginType === 'USER') {\n            this.login.id = savedId;\n            this.saveId = true;\n        } else if(loginType === 'MEMBER') {\n            this.member.type = saveTeacherIdType ? saveTeacherIdType : 'email';\n            this.member.email = saveEmail ? saveEmail : '';\n            this.member.teacherNickName = teacherNickName ? teacherNickName : '';\n            this.member.name = saveName;\n            this.saveId = true;\n        } else if(loginType === 'ADMIN') {\n            this.loginType = 'ADMIN';\n            this.login.id = savedId;\n            this.saveId = true;\n        } else {\n            this.loginType = 'USER';\n        }\n    };\n\n    @action changeLoginPassword = (password) => {\n        this.login.password = password;\n    };\n\n    @action invalidateLogin = () => {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n    };\n\n    doLogin = flow(function* doLogin() {\n        this.loginState = State.Pending;\n\n        try {\n            const param = this.login;\n            const response = yield axios.post('/api/v1/authentications/signin', param);\n            const token = response.data.token;\n            const user = response.data.user;\n\n            localStorage.setItem(LocalStorageTokenKey, token);\n\n            console.log('doLogin');\n            console.log(this);\n\n            this.loginState = State.Authenticated;\n            this.loginToken = token;\n            this.loginUser = user;\n        } catch (e) {\n            this.loginState = State.Failed;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n\n    checkLogin = flow(function* checkLogin() {\n        const token = localStorage.getItem(LocalStorageTokenKey);\n\n        if(token) {\n            try {\n                const response = yield axios.get('/api/v1/authentications/signcheck');\n                const token = response.data.token;\n                const user = response.data.user;\n\n                this.loginState = State.Authenticated;\n                this.loginToken = token;\n                this.loginUser = user;\n            } catch(e) {\n                this.loginState = State.NotAuthenticated;\n                this.loginToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        }\n    });\n\n    doLogout = flow(function* doLogout() {\n        localStorage.removeItem(LocalStorageTokenKey);\n\n        try {\n            yield axios.post('/api/v1/authentications/signout');\n\n            console.log(this);\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        } catch(e) {\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _initializerDefineProperty from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;\n\nimport { action, flow, observable } from \"mobx\";\nimport axios from \"axios\";\nimport { State } from \"./AuthStore\";\nconst AddState = {\n  Closed: 'Closed',\n  Opened: 'Opened',\n  Adding: 'Adding',\n  Added: 'Added',\n  AddFailed: 'AddFailed'\n};\nconst UpdateState = {\n  Closed: 'Closed',\n  Loading: 'Loading',\n  Loaded: 'Loaded',\n  LoadFailed: 'LoadFailed',\n  Updating: 'Updating',\n  Updated: 'Updated',\n  UpdateFailed: 'UpdateFailed',\n  Uploading: 'Uploading',\n  Uploaded: 'Uploaded',\n  UploadFailed: 'UploadFailed'\n};\nlet FileUploadStore = (_class = (_temp = class FileUploadStore {\n  constructor() {\n    _initializerDefineProperty(this, \"fileList\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"uploadFile\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"addState\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"updateState\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"state\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"changeUploadFile\", _descriptor6, this);\n\n    this.imgupload = flow(function* uploadFile(file) {\n      this.updateState = UpdateState.Uploading;\n\n      try {\n        const fileParam = new FormData();\n        fileParam.append('file', this.uploadFile);\n        yield axios.post('/api/v1/img/uploadFile', fileParam);\n        const fileResponse = yield axios.get(`/api/v1/img/uploadFile`);\n        const files = fileResponse.data;\n        this.uploadFile = '';\n        this.fileList = files;\n        this.updateState = UpdateState.Uploaded;\n      } catch (error) {\n        this.updateState = UpdateState.UploadFailed;\n      }\n    });\n    this.addNewImg = flow(function* addNewBoard() {\n      this.addState = AddState.Adding;\n\n      try {\n        const fileParam = new FormData();\n        fileParam.append('file', this.uploadFile);\n        yield axios.post('/api/v1/files/board-attach', fileParam);\n        this.file = '';\n        this.addState = AddState.Added;\n      } catch (error) {\n        this.addState = AddState.AddFailed;\n      }\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"fileList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"uploadFile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"addState\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return AddState.Closed;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"updateState\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return UpdateState.Closed;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"state\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return State.Ready;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"changeUploadFile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return file => {\n      this.uploadFile = file;\n    };\n  }\n})), _class);\nexport { FileUploadStore as default };","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/stores/FileUploadStore.js"],"names":["action","flow","observable","axios","State","AddState","Closed","Opened","Adding","Added","AddFailed","UpdateState","Loading","Loaded","LoadFailed","Updating","Updated","UpdateFailed","Uploading","Uploaded","UploadFailed","FileUploadStore","imgupload","uploadFile","file","updateState","fileParam","FormData","append","post","fileResponse","get","files","data","fileList","error","addNewImg","addNewBoard","addState","Ready"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,UAAtB,QAAuC,MAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAE,QADK;AAEbC,EAAAA,MAAM,EAAE,QAFK;AAGbC,EAAAA,MAAM,EAAE,QAHK;AAIbC,EAAAA,KAAK,EAAE,OAJM;AAKbC,EAAAA,SAAS,EAAE;AALE,CAAjB;AAOA,MAAMC,WAAW,GAAG;AAChBL,EAAAA,MAAM,EAAE,QADQ;AAEhBM,EAAAA,OAAO,EAAE,SAFO;AAGhBC,EAAAA,MAAM,EAAE,QAHQ;AAIhBC,EAAAA,UAAU,EAAE,YAJI;AAKhBC,EAAAA,QAAQ,EAAE,UALM;AAMhBC,EAAAA,OAAO,EAAE,SANO;AAOhBC,EAAAA,YAAY,EAAE,cAPE;AAQhBC,EAAAA,SAAS,EAAE,WARK;AAShBC,EAAAA,QAAQ,EAAE,UATM;AAUhBC,EAAAA,YAAY,EAAE;AAVE,CAApB;IAYqBC,e,sBAAN,MAAMA,eAAN,CAAsB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SA+CjCC,SA/CiC,GA+CrBrB,IAAI,CAAC,UAAUsB,UAAV,CAAqBC,IAArB,EAA2B;AACxC,WAAKC,WAAL,GAAmBd,WAAW,CAACO,SAA/B;;AAEA,UAAI;AACA,cAAMQ,SAAS,GAAG,IAAIC,QAAJ,EAAlB;AACAD,QAAAA,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB,KAAKL,UAA9B;AAEA,cAAMpB,KAAK,CAAC0B,IAAN,CAAW,wBAAX,EAAqCH,SAArC,CAAN;AAEA,cAAMI,YAAY,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CAAW,wBAAX,CAA3B;AACA,cAAMC,KAAK,GAAGF,YAAY,CAACG,IAA3B;AAEA,aAAKV,UAAL,GAAkB,EAAlB;AACA,aAAKW,QAAL,GAAgBF,KAAhB;AACA,aAAKP,WAAL,GAAmBd,WAAW,CAACQ,QAA/B;AACH,OAZD,CAYE,OAAOgB,KAAP,EAAc;AACZ,aAAKV,WAAL,GAAmBd,WAAW,CAACS,YAA/B;AACH;AACJ,KAlBe,CA/CiB;AAAA,SAkEjCgB,SAlEiC,GAkErBnC,IAAI,CAAC,UAAUoC,WAAV,GAAwB;AACrC,WAAKC,QAAL,GAAgBjC,QAAQ,CAACG,MAAzB;;AAEA,UAAI;AACI,cAAMkB,SAAS,GAAG,IAAIC,QAAJ,EAAlB;AACAD,QAAAA,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB,KAAKL,UAA9B;AAEA,cAAMpB,KAAK,CAAC0B,IAAN,CAAW,4BAAX,EAAyCH,SAAzC,CAAN;AACJ,aAAKF,IAAL,GAAY,EAAZ;AACA,aAAKc,QAAL,GAAgBjC,QAAQ,CAACI,KAAzB;AACH,OAPD,CAOE,OAAM0B,KAAN,EAAa;AACX,aAAKG,QAAL,GAAgBjC,QAAQ,CAACK,SAAzB;AACH;AACJ,KAbe,CAlEiB;AAAA;;AAAA,C,kFAChCR,U;;;;;WAAsB,E;;8EACtBA,U;;;;;WAAwB,E;;4EACxBA,U;;;;;WAAsBG,QAAQ,CAACC,M;;+EAC/BJ,U;;;;;WAAyBS,WAAW,CAACL,M;;yEACrCJ,U;;;;;WAAmBE,KAAK,CAACmC,K;;oFAMzBvC,M;;;;;WAA2BwB,IAAD,IAAU;AACjC,WAAKD,UAAL,GAAkBC,IAAlB;AACH,K;;;SAbgBH,e","sourcesContent":["import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\nimport {State} from \"./AuthStore\";\n\nconst AddState = {\n    Closed: 'Closed',\n    Opened: 'Opened',\n    Adding: 'Adding',\n    Added: 'Added',\n    AddFailed: 'AddFailed',\n};\nconst UpdateState = {\n    Closed: 'Closed',\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n    Updating: 'Updating',\n    Updated: 'Updated',\n    UpdateFailed: 'UpdateFailed',\n    Uploading: 'Uploading',\n    Uploaded: 'Uploaded',\n    UploadFailed: 'UploadFailed',\n};\nexport default class FileUploadStore {\n    @observable fileList = [];\n    @observable uploadFile = '';\n    @observable addState = AddState.Closed;\n    @observable updateState = UpdateState.Closed;\n    @observable state = State.Ready;\n/*\n    @action fileUploadHandle = () => {\n        this.fileUpload();\n    }\n*/\n    @action changeUploadFile = (file) => {\n        this.uploadFile = file;\n    }\n\n\n/*    @computed get isAdding() {\n        return this.addState === AddState.Adding;\n    }\n\n    @computed get isAdded() {\n        return this.addState === AddState.Added;\n    }\n\n    @computed get isAddFailed() {\n        return this.addState === AddState.AddFailed;\n    }*/\n\n\n /*   fileUpload = flow(function* fileUpload(e) {\n        const formData = new FormData()\n\n        formData.append('file', blob, 'filename.jpg')\n        formData.append('subPath', 'shop')\n\n        const res = await axios.post(`/api/v1/img/uploadImgFile`, formData)\n        try {\n            const formData = new FormData();\n            formData.append('file', e.target.file[0]);\n            const response = yield axios.post('/api/v1/img/uploadImgFile', formData);\n            if(response.status === 200) {\n            }\n        } catch (e) {\n            console.log('error다 이놈아');\n        }\n    });*/\n\n    imgupload = flow(function* uploadFile(file) {\n        this.updateState = UpdateState.Uploading;\n\n        try {\n            const fileParam = new FormData();\n            fileParam.append('file', this.uploadFile);\n\n            yield axios.post('/api/v1/img/uploadFile', fileParam);\n\n            const fileResponse = yield axios.get(`/api/v1/img/uploadFile`);\n            const files = fileResponse.data;\n\n            this.uploadFile = '';\n            this.fileList = files;\n            this.updateState = UpdateState.Uploaded;\n        } catch (error) {\n            this.updateState = UpdateState.UploadFailed;\n        }\n    })\n    addNewImg = flow(function* addNewBoard() {\n        this.addState = AddState.Adding;\n\n        try {\n                const fileParam = new FormData();\n                fileParam.append('file', this.uploadFile);\n\n                yield axios.post('/api/v1/files/board-attach', fileParam);\n            this.file = '';\n            this.addState = AddState.Added;\n        } catch(error) {\n            this.addState = AddState.AddFailed;\n        }\n    })\n\n}"]},"metadata":{},"sourceType":"module"}
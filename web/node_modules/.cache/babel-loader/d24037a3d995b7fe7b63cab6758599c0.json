{"ast":null,"code":"var _jsxFileName = \"/Users/jangseong-yeol/kfashion.ws/web/src/components/DropzoneFuck.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\n\nclass DropzoneFuck extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      files: []\n    };\n\n    this.fileSelectedHandler = file => {\n      let addedFiles = this.state.files.concat(file);\n      this.setState({\n        files: addedFiles\n      });\n      console.log(\"upload file \" + file.name);\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"files\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(this.state.selectedFile); // Request made to the backend api\n      // Send formData object\n\n      axios.post(\"/api/v1/kfashion/img/uploadMultipleFiles\", formData);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, \"File Details:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, \"File Name: \", this.state.selectedFile.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        }, \"File Type: \", this.state.selectedFile.type), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, \"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }, \"Choose before Pressing the Upload button\"));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileSelectedHandler,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onFileUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Upload!\")), this.fileData());\n  }\n\n}\n\nexport default DropzoneFuck;","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/components/DropzoneFuck.js"],"names":["axios","React","Component","DropzoneFuck","state","files","fileSelectedHandler","file","addedFiles","concat","setState","console","log","name","onFileUpload","formData","FormData","append","selectedFile","post","fileData","type","lastModifiedDate","toDateString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCE,KAFiC,GAEzB;AAEJ;AACAC,MAAAA,KAAK,EAAE;AAHH,KAFyB;;AAAA,SASjCC,mBATiC,GASVC,IAAD,IAAe;AACjC,UAAIC,UAAU,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,CAAwBF,IAAxB,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEG;AAAT,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBL,IAAI,CAACM,IAAlC;AACH,KAbgC;;AAAA,SAgBjCC,YAhBiC,GAgBlB,MAAM;AAEjB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAHiB,CAMjB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACI,OADJ,EAEI,KAAKb,KAAL,CAAWc,YAFf,EAGI,KAAKd,KAAL,CAAWc,YAAX,CAAwBL,IAH5B,EAPiB,CAajB;;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWc,YAAvB,EAdiB,CAgBjB;AACA;;AACAlB,MAAAA,KAAK,CAACmB,IAAN,CAAW,0CAAX,EAAuDJ,QAAvD;AACH,KAnCgC;;AAAA,SAuCjCK,QAvCiC,GAuCtB,MAAM;AAEb,UAAI,KAAKhB,KAAL,CAAWc,YAAf,EAA6B;AAEzB,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,KAAKd,KAAL,CAAWc,YAAX,CAAwBL,IAAvC,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,KAAKT,KAAL,CAAWc,YAAX,CAAwBG,IAAvC,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACmB,GADnB,EAEK,KAAKjB,KAAL,CAAWc,YAAX,CAAwBI,gBAAxB,CAAyCC,YAAzC,EAFL,CAJJ,CADJ;AAWH,OAbD,MAaO;AACH,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFJ,CADJ;AAMH;AACJ,KA9DgC;AAAA;;AAgEjCC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKlB,mBAAlC;AAAuD,MAAA,QAAQ,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKQ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,EAOK,KAAKM,QAAL,EAPL,CADJ;AAWH;;AA7EgC;;AAgFrC,eAAejB,YAAf","sourcesContent":["import axios from 'axios';\n\nimport React,{Component} from 'react';\n\nclass DropzoneFuck extends Component {\n\n    state = {\n\n        // Initially, no file is selected\n        files: []\n    };\n\n    // On file select (from the pop up)\n    fileSelectedHandler = (file: any) => {\n        let addedFiles = this.state.files.concat(file)\n        this.setState({ files: addedFiles })\n        console.log(\"upload file \" + file.name)\n    }\n\n    // On file upload (click the upload button)\n    onFileUpload = () => {\n\n        // Create an object of formData\n        const formData = new FormData();\n\n\n        // Update the formData object\n        formData.append(\n            \"files\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        // Details of the uploaded file\n        console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"/api/v1/kfashion/img/uploadMultipleFiles\", formData);\n    };\n\n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n\n        if (this.state.selectedFile) {\n\n            return (\n                <div>\n                    <h2>File Details:</h2>\n                    <p>File Name: {this.state.selectedFile.name}</p>\n                    <p>File Type: {this.state.selectedFile.type}</p>\n                    <p>\n                        Last Modified:{\" \"}\n                        {this.state.selectedFile.lastModifiedDate.toDateString()}\n                    </p>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <br />\n                    <h4>Choose before Pressing the Upload button</h4>\n                </div>\n            );\n        }\n    };\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                    <input type=\"file\" onChange={this.fileSelectedHandler} multiple />\n                    <button onClick={this.onFileUpload}>\n                        Upload!\n                    </button>\n                </div>\n                {this.fileData()}\n            </div>\n        );\n    }\n}\n\nexport default DropzoneFuck;"]},"metadata":{},"sourceType":"module"}
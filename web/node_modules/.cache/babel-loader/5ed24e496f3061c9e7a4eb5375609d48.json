{"ast":null,"code":"import _initializerDefineProperty from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/jangseong-yeol/kfashion.ws/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { action, computed, flow, observable } from \"mobx\";\nimport axios from \"axios\";\nconst EmptyNewAdmin = {\n  id: '',\n  groupNo: '',\n  value: ''\n};\nlet AdminAuthorityStore = (_class = (_temp = class AdminAuthorityStore {\n  constructor() {\n    _initializerDefineProperty(this, \"newAdmin\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"changeNewMemberId\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"changeNewMemberEmail\", _descriptor3, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"newAdmin\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return { ...EmptyNewAdmin\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"changeNewMemberId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      this.newAdmin.id = id;\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"changeNewMemberEmail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return value => {\n      this.newAdmin.groupNo = value;\n    };\n  }\n})), _class);\nexport { AdminAuthorityStore as default };","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/stores/AdminAuthorityStore.js"],"names":["action","computed","flow","observable","axios","EmptyNewAdmin","id","groupNo","value","AdminAuthorityStore","newAdmin"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAiD,MAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,EAAE,EAAG,EADa;AAElBC,EAAAA,OAAO,EAAG,EAFQ;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;IAOqBC,mB,sBAAN,MAAMA,mBAAN,CAA0B;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA,C,kFACpCN,U;;;;;WAAsB,EAAC,GAAGE;AAAJ,K;;qFAEtBL,M;;;;;WAA4BM,EAAD,IAAQ;AAChC,WAAKI,QAAL,CAAcJ,EAAd,GAAmBA,EAAnB;AACH,K;;wFACAN,M;;;;;WAA+BQ,KAAD,IAAW;AACtC,WAAKE,QAAL,CAAcH,OAAd,GAAwBC,KAAxB;AACH,K;;;SARgBC,mB","sourcesContent":["import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\nconst EmptyNewAdmin = {\n    id : '',\n    groupNo : '',\n    value: '',\n}\n\n\nexport default class AdminAuthorityStore {\n    @observable newAdmin = {...EmptyNewAdmin}\n\n    @action changeNewMemberId = (id) => {\n        this.newAdmin.id = id;\n    }\n    @action changeNewMemberEmail = (value) => {\n        this.newAdmin.groupNo = value;\n    }\n}"]},"metadata":{},"sourceType":"module"}
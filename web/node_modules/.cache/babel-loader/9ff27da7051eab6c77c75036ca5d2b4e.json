{"ast":null,"code":"var _jsxFileName = \"/Users/jangseong-yeol/kfashion.ws/web/src/components/DropzoneDialog.js\";\nimport React, { Component } from 'react';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport { withSnackbar } from \"notistack\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { flow } from \"mobx\";\n\nconst styles = theme => ({\n  toolButton: {\n    border: '1px solid black',\n    height: 50,\n    width: '100%'\n  },\n  toolBox: {\n    border: '1px solid black',\n    marginRight: 1,\n    height: '100%'\n  }\n});\n\nDropzoneDialog.defaultProps = {\n  clearOnUnmount: true,\n  filesLimit: 20,\n  initialFiles: []\n};\n\nclass DropzoneDialogExample extends Component {\n  constructor(props) {\n    super(props);\n    this.fileupload = flow(function* handleSave(files) {\n      this.setState({\n        files: files,\n        open: false\n      });\n\n      try {\n        const fileParam = new FormData();\n        fileParam.append('file', this.state);\n        yield axios.post('/api/v1/img/uploadFile', fileParam);\n      } catch (error) {\n        console.log('error');\n      }\n    });\n    this.state = {\n      open: false,\n      files: []\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleOpen.bind(this),\n      className: classes.toolButton,\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Add Image\"), /*#__PURE__*/React.createElement(DropzoneDialog, {\n      open: this.state.open,\n      onSave: this.fileupload.bind(this),\n      acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n      showPreviews: true,\n      maxFileSize: 5000000,\n      onClose: this.handleClose.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withSnackbar(withRouter(withStyles(styles)(DropzoneDialogExample)));","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/components/DropzoneDialog.js"],"names":["React","Component","DropzoneDialog","Button","withSnackbar","withRouter","withStyles","axios","flow","styles","theme","toolButton","border","height","width","toolBox","marginRight","defaultProps","clearOnUnmount","filesLimit","initialFiles","DropzoneDialogExample","constructor","props","fileupload","handleSave","files","setState","open","fileParam","FormData","append","state","post","error","console","log","handleClose","handleOpen","render","classes","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {DropzoneDialog} from 'material-ui-dropzone'\nimport Button from '@material-ui/core/Button';\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {flow} from \"mobx\";\n\nconst styles = theme => ({\n    toolButton:{\n        border:'1px solid black',\n        height:50,\n        width:'100%',\n    },\n    toolBox:{\n        border:'1px solid black',\n        marginRight: 1,\n        height:'100%',\n    },\n});\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 20,\n    initialFiles: [],\n};\nclass DropzoneDialogExample extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            files: []\n        };\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n    fileupload = flow(function* handleSave(files) {\n        this.setState({\n            files: files,\n            open: false\n        });\n        try {\n            const fileParam = new FormData();\n            fileParam.append('file', this.state);\n            yield axios.post('/api/v1/img/uploadFile', fileParam);\n        } catch (error) {\n            console.log('error')\n        }\n    });\n\n    handleOpen() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Button onClick={this.handleOpen.bind(this)} className={classes.toolButton} variant=\"contained\"\n                        color=\"primary\">\n                    Add Image\n                </Button>\n                <DropzoneDialog\n                    open={this.state.open}\n                    onSave={this.fileupload.bind(this)}\n                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                    showPreviews={true}\n                    maxFileSize={5000000}\n                    onClose={this.handleClose.bind(this)}\n                />\n            </div>\n        );\n    }\n}\nexport default withSnackbar(withRouter(withStyles(styles) (DropzoneDialogExample)));"]},"metadata":{},"sourceType":"module"}
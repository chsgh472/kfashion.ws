{"ast":null,"code":"var _jsxFileName = \"/Users/jangseong-yeol/kfashion.ws/web/src/views/labeling/Test.js\";\nimport React, { Component } from 'react';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      files: []\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleSave(files) {\n    //Saving files to state for further use and closing Modal.\n    this.setState({\n      files: files,\n      open: false\n    });\n  }\n\n  onDrop(accepted, rejected) {\n    if (rejected.length) {//do something with rejected files\n    } else {\n      let data = new FormData();\n\n      for (let i = 0; i < this.state.files.length; i++) {\n        let file = accepted[i];\n        data.append(\"files\" + i, file, file.name);\n      }\n\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n        }\n      };\n      axios.post(\"/api/v1/kfashion/img/uploadMultipleFiles\", data, config);\n    }\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleOpen.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Add Image\"), /*#__PURE__*/React.createElement(DropzoneDialog, {\n      open: this.state.open,\n      onSave: this.handleSave.bind(this),\n      acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n      onDrop: (filesToUpload, e) => {},\n      showPreviews: true,\n      maxFileSize: 5000000,\n      onClose: this.handleClose.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jangseong-yeol/kfashion.ws/web/src/views/labeling/Test.js"],"names":["React","Component","DropzoneDialog","Button","axios","Test","constructor","props","state","open","files","handleClose","setState","handleSave","onDrop","accepted","rejected","length","data","FormData","i","file","append","name","config","headers","post","handleOpen","render","bind","filesToUpload","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,cAAR,QAA6B,sBAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KADG;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAEDC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,CAAc;AACVH,MAAAA,IAAI,EAAE;AADI,KAAd;AAGH;;AAEDI,EAAAA,UAAU,CAACH,KAAD,EAAQ;AACd;AACA,SAAKE,QAAL,CAAc;AACVF,MAAAA,KAAK,EAAEA,KADG;AAEVD,MAAAA,IAAI,EAAE;AAFI,KAAd;AAIH;;AAEDK,EAAAA,MAAM,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACvB,QAAIA,QAAQ,CAACC,MAAb,EAAqB,CACjB;AACH,KAFD,MAEO;AACH,UAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,KAAL,CAAWE,KAAX,CAAiBO,MAArC,EAA6CG,CAAC,EAA9C,EAAkD;AAC9C,YAAIC,IAAI,GAAGN,QAAQ,CAACK,CAAD,CAAnB;AACAF,QAAAA,IAAI,CAACI,MAAL,CAAY,UAAUF,CAAtB,EAAyBC,IAAzB,EAA+BA,IAAI,CAACE,IAApC;AACH;;AACD,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AADE,OAAf;AAGArB,MAAAA,KAAK,CAACsB,IAAN,CAAW,0CAAX,EAAuDR,IAAvD,EAA6DM,MAA7D;AACH;AACJ;;AAEDG,EAAAA,UAAU,GAAG;AACT,SAAKf,QAAL,CAAc;AACVH,MAAAA,IAAI,EAAE;AADI,KAAd;AAGH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKD,UAAL,CAAgBE,IAAhB,CAAqB,IAArB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAII,oBAAC,cAAD;AACI,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWC,IADrB;AAEI,MAAA,MAAM,EAAE,KAAKI,UAAL,CAAgBgB,IAAhB,CAAqB,IAArB,CAFZ;AAGI,MAAA,aAAa,EAAE,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAHnB;AAII,MAAA,MAAM,EAAE,CAACC,aAAD,EAAgBC,CAAhB,KAAsB,CAC7B,CALL;AAMI,MAAA,YAAY,EAAE,IANlB;AAOI,MAAA,WAAW,EAAE,OAPjB;AAQI,MAAA,OAAO,EAAE,KAAKpB,WAAL,CAAiBkB,IAAjB,CAAsB,IAAtB,CARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAiBH;;AA/DuC","sourcesContent":["import React, { Component } from 'react'\nimport {DropzoneDialog} from 'material-ui-dropzone'\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\n\nexport default class Test extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            files: []\n        };\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleSave(files) {\n        //Saving files to state for further use and closing Modal.\n        this.setState({\n            files: files,\n            open: false\n        });\n    }\n\n    onDrop(accepted, rejected) {\n        if (rejected.length) {\n            //do something with rejected files\n        } else {\n            let data = new FormData();\n            for (let i = 0; i < this.state.files.length; i++) {\n                let file = accepted[i];\n                data.append(\"files\" + i, file, file.name);\n            }\n            const config = {\n                headers: { 'content-type': 'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p' }\n            };\n            axios.post(\"/api/v1/kfashion/img/uploadMultipleFiles\", data, config);\n        }\n    };\n\n    handleOpen() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpen.bind(this)}>\n                    Add Image\n                </Button>\n                <DropzoneDialog\n                    open={this.state.open}\n                    onSave={this.handleSave.bind(this)}\n                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                    onDrop={(filesToUpload, e) => {\n                    }}\n                    showPreviews={true}\n                    maxFileSize={5000000}\n                    onClose={this.handleClose.bind(this)}\n                />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
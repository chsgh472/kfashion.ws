{"version":3,"sources":["components/TopBar.js","components/SideMenu.js","components/ScrollToTop.js","components/DropzoneDialog.js","views/Home.js","views/Step.js","views/Step2/Gender.js","views/Step2/Color.js","views/Step2/ClothLength.js","views/Step2/Category.js","views/Step2/Print.js","views/Step2/SleeveLength.js","views/Step2.js","views/Step3.js","views/Labeling/BoundaryBox.js","views/Labeling/ListTable.js","views/Labeling/BoundaryBoxList.js","views/Labeling/Segmentaion.js","views/Labeling/Polygon.js","views/Labeling/Test.js","stores/AuthStore.js","views/SignIn.js","views/SignUp.js","App.js","serviceWorker.js","stores/CategoryStore.js","common/Validation.js","stores/SignUpStore.js","stores/SecondStepStore.js","stores/FileUploadStore.js","stores/index.js","index.js","configureTheme.js"],"names":["useStyles","makeStyles","theme","appBar","breakpoints","up","width","drawerWidth","marginLeft","menuButton","marginRight","spacing","display","title","sideMenuWidth","paddingLeft","flexGrow","link","textDecoration","color","TopBar","props","classes","mobileOpen","setMobileOpen","isLoggedIn","doLogout","AppBar","position","className","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","to","drawer","flexShrink","paddingRight","mixins","toolbar","drawerPaper","height","border","backgroundColor","palette","primary","main","boxShadow","logo","menu","borderRight","nested","SideMenu","useTheme","React","useState","open1","setOpen1","open","setOpen","List","ListSubheader","inset","ListItem","button","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","component","disablePadding","Divider","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","src","alt","xsDown","ScrollToTop","prevProps","this","location","pathname","window","scrollTo","children","Component","DropzoneDialog","defaultProps","clearOnUnmount","filesLimit","initialFiles","DropzoneDialogExample","inject","observer","state","files","setState","fileUploadStore","fileupload","Button","handleOpen","bind","toolButton","onSave","handleSave","acceptedFiles","showPreviews","maxFileSize","handleClose","withSnackbar","withRouter","withStyles","toolBox","Home","enqueueSnackbar","Container","mainContainer","appBarSpacer","mainContent","padding","marginTop","flexDirection","alignItems","test","float","Step","Color","secondStepStore","loadColorList","colorList","Table","stickyHeader","size","TableHead","TableRow","TableCell","TableBody","length","map","key","no","categoryItemName","Checkbox","createData","label","handleChangeColor","e","changeCategory","loadCategoryList","categoryList","category","SleeveLength","loadSleeveList","sleeveList","sleeve","Step2","Grid","container","item","xs","content","style","insertButton","startIcon","type","buttonType1","buttonType2","createStyleData","cm","ItemRows","FormControlLabel","value","control","Radio","styleRows","Step3","align-items-xs-center","FormControl","RadioGroup","row","name","checked","table","TextField","id","margin","onChange","handleChangeId","required","fullWidth","sub","FormGroup","handleSubmitForm","BoundaryBox","handleChangeUploadFile","event","file","target","changeUploadFile","handleOk","addNewImg","uploadFile","canvas","maxWidth","fileText","paddingTop","textAlign","filebox","fileSelection","overflow","clip","borderRadius","Customer","image","date","step","customers","Step1","Paper","root","c","action","unit","overflowX","minWidth","Segmentation","submit","Polygon","Test","State","Authenticated","NotAuthenticated","Pending","Failed","EmptyLogin","password","EmptyUser","createdDatetime","updatedDatetime","AuthStore","doLogin","flow","loginState","param","login","axios","post","response","token","data","user","localStorage","setItem","console","log","loginToken","loginUser","Object","assign","checkLogin","getItem","get","removeItem","observable","SignIn","authStore","changeLoginId","handleChangePassword","changeLoginPassword","handleKeyUpPassword","keyCode","Avatar","lockOutAvatar","store","form","onKeyUp","disabled","CircularProgress","lockOpenAvatar","secondary","SignUp","signUpStore","changeNewMemberId","handleChangeEmail","changeNewMemberEmail","changeNewMemberPassword","handleChangePasswordConfirm","changeNewMemberPasswordConfirm","handleChangeUserName","changeNewMemberUserName","handleChangeNickName","changeNewMemberNickName","handleChangeAllAgreements","changeAgreementsAll","handleChangeServiceAgreements","changeAgreementsService","handleChangePrivacyAgreements","changeAgreementsPrivacy","handleClickOK","doSignUp","handleClickToHome","history","push","search","slice","indexOf","split","reduce","params","hash","val","decodeURIComponent","prevState","snapshot","isSignUpFailed","clearState","isNotAvailableEmail","isEmailInputed","isValidId","isValidEmail","isValidPassword","isPasswordConfirmed","isValidUsername","isValidNickName","isPending","isSignUpSuccess","canSignUp","newMember","agreements","serverMode","Fragment","mainTitle","mainComment","gutterMargin","InputLabelProps","shrink","helperText","autoFocus","email","autoComplete","passwordConfirm","userName","nickName","titleArea","all","checkAgreeTotal","service","align","Link","underline","href","termsCaption","privacy","okButton","successContainer","successTitle","successHeader","successHeader2","successBody","successButton","paddingBottom","justifyContent","marginBottom","down","fontWeight","checkAgreeMargin","fontSize","fontFamily","App","interceptors","request","use","config","headers","error","Promise","reject","status","invalidateLogin","CssBaseline","path","exact","BoundaryBoxList","Boolean","hostname","match","ListState","CategoryStore","listState","categorys","validateEmail","String","toLowerCase","EmptyNewMember","EmptyAgreements","SignUpStore","doAction","toJS","undefined","emailVerification","validation","allAgreement","serviceAgreements","privacyAgreements","computed","SecondStepStore","getCategoryList","getColorList","getSleeveList","sleeveLengthList","AddState","UpdateState","FileUploadStore","formData","FormData","i","append","then","catch","Ready","stores","categoryStore","configure","enforceActions","createMuiTheme","ReactDOM","render","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.726b98a9.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppBar, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\n\nconst logoWidth = 120;\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${theme.drawerWidth}px)`,\n            marginLeft: theme.drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        marginLeft: (theme.sideMenuWidth - logoWidth) / 2,\n        paddingLeft: theme.spacing(3),\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}));\n\nexport default function TopBar(props) {\n    const classes = useStyles();\n    const { mobileOpen, setMobileOpen, isLoggedIn, doLogout } = props;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"start\"\n                    onClick={handleDrawerToggle}\n                    className={classes.menuButton}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap className={classes.title}>\n                    <Link to='/' className={classes.link}>\n                        K-FASHION\n                    </Link>\n                </Typography>\n\n                { isLoggedIn ? (\n                    <IconButton color=\"inherit\" onClick={doLogout}>\n                        <ExitToAppIcon />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/SignUp\" className={classes.link}>\n                        <IconButton color=\"inherit\">\n                            <AssignmentIndIcon />\n                            <Typography variant=\"h6\" noWrap className={classes.title}>\n                                회원가입\n                            </Typography>\n                        </IconButton>\n                    </Link>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {Divider, Drawer, Hidden, List, ListItem, ListItemIcon, ListItemText, ListSubheader, Toolbar} from \"@material-ui/core\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport FormatShapesIcon from '@material-ui/icons/FormatShapes';\nimport CompareIcon from '@material-ui/icons/Compare';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst logoWidth = 129;\nconst logoHeight = 22;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: theme.drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        width: theme.drawerWidth,\n        paddingLeft: 0,\n        paddingRight: 0,\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        width: theme.drawerWidth,\n        height: '100%',\n        border: 'none',\n    },\n    toolbar: {\n        width: theme.drawerWidth,\n        backgroundColor: theme.palette.primary.main,\n        paddingLeft: 0,\n        paddingRight: 0,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    logo: {\n        width: logoWidth,\n        height: logoHeight,\n        marginLeft: (theme.drawerWidth - logoWidth) / 2,\n        marginRight: (theme.drawerWidth - logoWidth) / 2,\n    },\n    menu: {\n        borderRight: '1px solid rgba(0,0,0,0.12)',\n        height: '100%',\n    },\n\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function SideMenu(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { mobileOpen, setMobileOpen, isLoggedIn } = props;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n\n    };\n    const [open1, setOpen1] = React.useState(true);\n    const [open, setOpen] = React.useState(true);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    const handleClickAdmin = () => {\n        setOpen1(!open1);\n    };\n    const drawer = (\n        <div className={classes.menu}>\n            <List>\n                <ListSubheader inset>Process</ListSubheader>\n\n                <Link to=\"/home\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><ComputerIcon /></ListItemIcon>\n                        <ListItemText primary=\"홈\"></ListItemText>\n                    </ListItem>\n                </Link>\n                    <Link to=\"/step\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><WallpaperIcon /></ListItemIcon>\n                        <ListItemText button onClick={handleClick} primary=\"1단계 레이블링\"></ListItemText>\n                        {open ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                </Link>\n                <Link to=\"/step/boundaryBox\" className={classes.link}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <AspectRatioIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"BoundaryBox\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n                </Link>\n                <Link to=\"/Step/boundaryBoxList\" className={classes.link}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem button className={classes.nested}>\n                                <ListItemIcon>\n                                    <AspectRatioIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"BoundaryBoxList\" />\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                </Link>\n                <Link to=\"/step/segmentation\" className={classes.link}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <CompareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Segmentation\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n                </Link>\n                <Link to=\"/step/polygon\" className={classes.link}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <FormatShapesIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Polygon\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n                </Link>\n                <Link to=\"/step2\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><FormatListBulletedIcon /></ListItemIcon>\n                        <ListItemText primary=\"2단계 기본값\"></ListItemText>\n                    </ListItem>\n                </Link>\n                <Link to=\"/step3\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><PlaylistAddCheckIcon /></ListItemIcon>\n                        <ListItemText primary=\"3단계 검수\"></ListItemText>\n                    </ListItem>\n                </Link>\n            </List>\n\n            <Divider />\n            <Link to=\"/admin\" className={classes.link}>\n                <ListItem button>\n                    <ListItemIcon><WallpaperIcon /></ListItemIcon>\n                    <ListItemText button onClick={handleClickAdmin} primary=\"관리자 메뉴\"></ListItemText>\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n            </Link>\n            <Link to=\"/admin/createGroupAdmin\" className={classes.link}>\n                <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <AspectRatioIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"그룹 관리자 생성\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </Link>\n            <Link to=\"/admin/userList\" className={classes.link}>\n                <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <AspectRatioIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"회원 리스트\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </Link>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Hidden smUp implementation=\"css\">\n\n                <Drawer variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <Drawer variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n\n                        open\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n};","import React from \"react\";\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default ScrollToTop;\n","import React, { Component } from 'react'\nimport {DropzoneDialog} from 'material-ui-dropzone'\nimport Button from '@material-ui/core/Button';\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {inject, observer} from \"mobx-react\";\n\nconst styles = theme => ({\n    toolButton:{\n        border:'1px solid black',\n        height:50,\n        width:'100%',\n    },\n    toolBox:{\n        border:'1px solid black',\n        marginRight: 1,\n        height:'100%',\n    },\n});\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 20,\n    initialFiles: [],\n};\n\n@inject('fileUploadStore')\n@observer\nclass DropzoneDialogExample extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            files: []\n        };\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n    handleSave(files){\n        this.setState({\n            open: false,\n            files: []\n        });\n        this.props.fileUploadStore.fileupload(files);\n    }\n\n    handleOpen() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Button onClick={this.handleOpen.bind(this)} className={classes.toolButton} variant=\"contained\"\n                        color=\"primary\">\n                    Add Image\n                </Button>\n                <DropzoneDialog\n                    open={this.state.open}\n                    onSave={this.handleSave.bind(this)}\n                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                    showPreviews={true}\n                    maxFileSize={5000000}\n                    onClose={this.handleClose.bind(this)}\n                />\n            </div>\n        );\n    }\n}\nexport default withSnackbar(withRouter(withStyles(styles) (DropzoneDialogExample)));","import React, { Component } from 'react'\nimport DropzoneDialogExample from \"../components/DropzoneDialog\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    test:{\n        float: 'left'\n    },\n});\n\nclass Home extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Welcome\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            Home 1024 x 720\n                        </Typography>\n                    </Toolbar>\n\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Home)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Container, Toolbar, Typography} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\nclass Step extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Labeling Work\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            이미지 업로드\n                        </Typography>\n                    </Toolbar>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Step)));","import RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport React from \"react\";\n\nclass Gender extends React.Component{\n    render() {\n        return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup row aria-label=\"gender\" name=\"gender\">\n                <FormControlLabel value=\"male\" control={<Radio/>} label=\"남성\"/>\n                <FormControlLabel value=\"female\" control={<Radio/>} label=\"여성\"/>\n                <FormControlLabel value=\"unisex\" control={<Radio/>} label=\"공용\"/>\n            </RadioGroup>\n        </FormControl>\n        );\n    }\n};\nexport default Gender;","import TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {inject, observer} from \"mobx-react\";\nimport {Checkbox} from \"@material-ui/core\";\n\n@inject('secondStepStore')\n@observer\nexport default class Color extends React.Component {\n    componentDidMount() {\n        this.props.secondStepStore.loadColorList();\n    }\n    render(){\n        const {colorList} = this.props.secondStepStore;\n        return(\n            <Table stickyHeader size=\"small\" aria-label=\"a dense table, sticky table\" >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Main</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {colorList.length > 0 ?\n                        colorList.map((color) =>\n                            <TableRow key={color.no}>\n                                <TableCell>\n                                    {color.categoryItemName}\n                                </TableCell>\n                                <TableCell>\n                                    <Checkbox color=\"primary\"/>\n                                </TableCell>\n                            </TableRow>\n                        )\n                        :\n                        ''\n                    }\n                </TableBody>\n            </Table>\n        );\n    }\n};","import TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nfunction createData(label, main) {\n    return { label, main};\n}\n\nexport default class ClothLength extends React.Component {\n    render(){\n        const Rows = [\n            createData('Long', <FormControlLabel value=\"male\" control={<Radio />}  />),\n            createData('Middle', <FormControlLabel value=\"male\" control={<Radio />} />),\n            createData('Short', <FormControlLabel value=\"male\" control={<Radio />}  />),\n        ];\n        return(\n            <Table size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Main</TableCell>\n                    </TableRow>\n                </TableHead>\n                {Rows.map((row) => (\n                    <TableRow key={row.label}>\n                        <TableCell>{row.label}</TableCell>\n                        <TableCell>{row.main}</TableCell>\n                    </TableRow>\n                ))}\n            </Table>\n        );\n    }\n};\n","import TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport {inject, observer} from \"mobx-react\";\n\nfunction createData(label, main) {\n    return { label, main};\n}\n\n@inject('secondStepStore')\n@observer\nexport default class Category extends React.Component {\n    componentDidMount() {\n        this.props.secondStepStore.loadCategoryList();\n    }\n\n    handleChangeColor = (e) => {\n        this.props.secondStepStore.changeCategory();\n    }\n\n    render(){\n        const {categoryList} = this.props.secondStepStore;\n        return(\n            <Table size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Main</TableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n                    {categoryList.length > 0 ?\n                        categoryList.map((category) =>\n                            <TableRow key={category.no}>\n                                <TableCell>\n                                    {category.no}\n                                </TableCell>\n                                <TableCell>\n                                    {category.categoryItemName}\n                                </TableCell>\n                            </TableRow>\n                        )\n                        :\n                        <TableRow>\n\n                        </TableRow>\n                    }\n                </TableBody>\n            </Table>\n        );\n\n    }\n};","import TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nfunction createData(label, main) {\n    return { label, main};\n}\n\nexport default class Print extends React.Component {\n    render(){\n        const PrintRows = [\n            createData('꽃무늬', <FormControlLabel value=\"male\" control={<Radio />}  />),\n            createData('가로 줄무늬', <FormControlLabel value=\"male\" control={<Radio />} />),\n            createData('세로 줄무늬', <FormControlLabel value=\"male\" control={<Radio />} />),\n        ];\n        return(\n            <Table size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Main</TableCell>\n                    </TableRow>\n                </TableHead>\n                {PrintRows.map((row) => (\n                    <TableRow key={row.label}>\n                        <TableCell>{row.label}</TableCell>\n                        <TableCell>{row.main}</TableCell>\n                    </TableRow>\n                ))}\n            </Table>\n        );\n    }\n};\n","import TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {inject, observer} from \"mobx-react\";\nimport {Checkbox} from \"@material-ui/core\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\n@inject('secondStepStore')\n@observer\nexport default class SleeveLength extends React.Component {\n    componentDidMount() {\n        this.props.secondStepStore.loadSleeveList();\n    }\n    render(){\n        const {sleeveList} = this.props.secondStepStore;\n        return(\n            <Table size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Main</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {sleeveList.length > 0 ?\n                        sleeveList.map((sleeve) =>\n                            <TableRow key={sleeve.no}>\n                                <TableCell>\n                                    {sleeve.categoryItemName}\n                                </TableCell>\n                                <TableCell>\n                                    <Checkbox color=\"primary\"/>\n                                </TableCell>\n                            </TableRow>\n                        )\n                        :\n                        <TableRow>\n\n                        </TableRow>\n                    }\n                </TableBody>\n            </Table>\n        );\n    }\n};\n","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Button, Container, Grid, ListItemIcon, Typography} from \"@material-ui/core\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Gender from \"./Step2/Gender\";\nimport Color from \"./Step2/Color\";\nimport ClothLength from \"./Step2/ClothLength\";\nimport Category from \"./Step2/Category\";\nimport Print from \"./Step2/Print\";\nimport SleeveLength from \"./Step2/SleeveLength\";\nimport AddIcon from '@material-ui/icons/Add';\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    content:{\n        marginTop: 15,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n    insertButton:{\n        width:110,\n        marginLeft: 'auto',\n    },\n});\n\nclass Step2 extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Step2\", {\n            variant: 'info'\n        });\n    }\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            기본정보 입력\n                        </Typography>\n                 <Grid container spacing={3}>\n                     <Grid item xs={6}>\n                         <img src=\"https://placeimg.com/450/650/any\" alt={\"\"}></img>\n                     </Grid>\n                     <Grid item xs={6}>\n\n                         <div className={classes.content}>\n                             <div style={{display:\"inline-flex\"}}>\n                             <Typography variant=\"h4\" component=\"h2\">\n                                 색상\n                             </Typography>\n                             <Button\n                                 variant=\"outlined\"\n                                 color=\"primary\"\n                                 className={classes.insertButton}\n                                 startIcon={<AddIcon />}\n                             >\n                                 항목추가\n                             </Button>\n                             </div>\n                             <div>\n                                 <hr></hr>\n                             </div>\n                             <Color />\n                         </div>\n                         <div className={classes.content}>\n                             <div style={{display:\"inline-flex\"}}>\n                                 <Typography variant=\"h4\" component=\"h2\">\n                                     소매 길이\n                                 </Typography>\n                                 <Button\n                                     variant=\"outlined\"\n                                     color=\"primary\"\n                                     className={classes.insertButton}\n                                     startIcon={<AddIcon />}\n                                 >\n                                     항목추가\n                                 </Button>\n                             </div>\n                             <div>\n                                 <hr></hr>\n                             </div>\n                             <SleeveLength />\n                         </div>\n                         {/*<Grid container spacing={3} row>\n                         <Grid item xs={6}>\n                             <div className={classes.content}>\n                                 <div style={{display:\"inline-flex\"}}>\n                                 <Typography variant=\"h4\" component=\"h2\">\n                                     의상 길이\n                                 </Typography>\n                                 <Button\n                                     variant=\"outlined\"\n                                     color=\"primary\"\n                                     className={classes.insertButton}\n                                     startIcon={<AddIcon />}\n                                 >\n                                     항목추가\n                                 </Button>\n                             </div>\n                                 <div>\n                                     <hr></hr>\n                                 </div>\n                                 <SleeveLength />\n                             </div>\n                        </Grid>*/}\n                     </Grid>\n                 </Grid>\n                </div>\n                <hr></hr>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType1}\n                    variant=\"outlined\"\n                    >\n                    Previous\n                </Button>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType1}\n                    variant=\"outlined\"\n                     >\n                    Next\n                </Button>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType2}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    >\n                    Save and Next\n                </Button>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Step2)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Button, Container, Grid, TextField, Typography} from \"@material-ui/core\";\nimport Table from '@material-ui/core/Table';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormGroup from '@material-ui/core/FormGroup';\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    content:{\n        marginTop: 20,\n        display: 'flex',\n        flexDirection: 'column',\n\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n});\nfunction createData(label, main) {\n    return { label, main};\n}\nfunction createStyleData(label, main, cm) {\n    return { label, main, cm};\n}\n\nconst ItemRows = [\n    createData('소매길이', <FormControlLabel value=\"male\" control={<Radio />}  />),\n    createData('의상길이', <FormControlLabel value=\"male\" control={<Radio />} />),\n];\n\nconst styleRows = [\n    createStyleData('sleeve(소매길이)', ),\n    createStyleData('chest(가슴둘레)',),\n    createStyleData('Length(총 기장)',),\n    createStyleData('shoulder(어깨너비)'),\n\n];\n\nclass Step3 extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Step3\", {\n            variant: 'info'\n        });\n    }\n\n\n    render() {\n        const {classes} = this.props;\n\n            return (\n                <Container component=\"main\" className={classes.mainContainer}>\n                    <div className={classes.appBarSpacer}/>\n                    <div className={classes.mainContent}>\n                        <Typography variant=\"h2\" component=\"h2\">\n                            전문정보 입력\n                        </Typography>\n\n\n                        <Grid container spacing={2} >\n                            <Grid item xs={7} align-items-xs-center>\n                                <img src=\"https://placeimg.com/500/800/any\" alt={''}></img>\n                            </Grid>\n                            <Grid item xs={5}>\n                                <div className={classes.content}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        카테고리\n                                    </Typography>\n                                    <div>\n                                        <hr></hr>\n                                    </div>\n                                    <FormControl component=\"fieldset\">\n                                        <RadioGroup row aria-label=\"gender\" name=\"gender\">\n                                            <FormControlLabel value=\"male\" control={<Radio/>} label=\"Male\" checked={true}/>\n\n                                            <FormControlLabel value=\"female\" control={<Radio/>} label=\"Female\"/>\n                                            <FormControlLabel value=\"unisex\" control={<Radio/>} label=\"Unisex\"/>\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                                <div className={classes.content}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        색상\n                                    </Typography>\n                                    <div>\n                                        <hr></hr>\n                                    </div>\n                                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Label</TableCell>\n                                                <TableCell>Main</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        {ItemRows.map((row) => (\n                                            <TableRow key={row.label}>\n                                                <TableCell>{row.label}</TableCell>\n                                                <TableCell>{row.main}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </Table>\n                                </div>\n                                <div className={classes.content}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        clothes standard\n                                    </Typography>\n                                    <div>\n                                        <hr></hr>\n                                    </div>\n                                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Label</TableCell>\n                                                <TableCell>Main</TableCell>\n                                                <TableCell>Sub</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        {styleRows.map((row) => (\n                                            <TableRow key={row.label}>\n                                                <TableCell>{row.label}</TableCell>\n                                                <TableCell> <TextField id=\"length\"\n                                                                       name=\"length\"\n                                                                       label={row.label}\n                                                                       variant=\"outlined\"\n                                                                       margin=\"normal\"\n                                                                       // value={}\n                                                                       onChange={this.handleChangeId}\n                                                                       required fullWidth /></TableCell>\n                                                <TableCell>{row.sub}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </Table>\n                                </div>\n                                <Grid container spacing={3} row>\n                                    <Grid item xs={6}>\n                                        <div className={classes.content}>\n                                            <Typography variant=\"h5\" component=\"h5\">\n                                                의상길이\n                                            </Typography>\n                                            <div>\n                                                <hr></hr>\n                                            </div>\n                                            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Label</TableCell>\n                                                        <TableCell>Main</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                {ItemRows.map((row) => (\n                                                    <TableRow key={row.label}>\n                                                        <TableCell>{row.label}</TableCell>\n                                                        <TableCell>{row.main}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </Table>\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <div className={classes.content}>\n                                            <Typography variant=\"h5\" component=\"h5\">\n                                              프린트\n                                            </Typography>\n                                            <div>\n                                                <hr></hr>\n                                            </div>\n                                            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Label</TableCell>\n                                                        <TableCell>Main</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                {ItemRows.map((row) => (\n                                                    <TableRow key={row.label}>\n                                                        <TableCell>{row.label}</TableCell>\n                                                        <TableCell>{row.main}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </Table>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                                <div className={classes.content}>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={<Checkbox name=\"checkedA\"/>}\n                                            label=\"Not fashion Image\"/>\n                                    </FormGroup>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <hr></hr>\n                    {/*<div className={classes.content} >\n                             <div style={{display:\"inline-flex\"}}>\n                             <Typography variant=\"h4\" component=\"h2\">\n                                 카테고리\n                             </Typography>\n                             <Button\n                                 variant=\"outlined\"\n                                 color=\"primary\"\n                                 className={classes.insertButton}\n                                 startIcon={<AddIcon />}\n                             >\n                                 항목추가\n                             </Button>\n                             </div>\n                             <div>\n                                 <hr></hr>\n                                 <Category />\n                             </div>\n\n                         </div>*/}\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm}>\n                        Previous\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm}>\n                        Next\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType2}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick=\"/home\">\n                        Save and Next\n                    </Button>\n                </Container>\n            );\n        }\n\n    };\n\nexport default withSnackbar(withRouter(withStyles(styles) (Step3)));","import\n    React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\"\nimport {Container, Toolbar, Typography, Button, Grid, TextField, CircularProgress} from \"@material-ui/core\";\nimport {inject, observer} from \"mobx-react\";\nimport DropzoneDialogExample from \"../../components/DropzoneDialog\";\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        marginTop:20,\n        maxWidth:'100%',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n        padding:0,\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n    toolButton:{\n        border:'1px solid black',\n        height:50,\n        width:'100%',\n    },\n    test:{\n        border:'1px solid black',\n        height: '50%',\n    },\n    toolBox:{\n        border:'1px solid black',\n        marginRight: 1,\n        height:'100%',\n    },\n    canvas:{\n        backgroundColor:'black',\n    },\n    fileText: {\n        paddingTop: 32,\n        paddingRight: theme.spacing(2),\n        textAlign: 'left'\n\n    },\n    filebox: {\n        paddingTop: 35,\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    fileSelection: {\n        position: 'absolute',\n        width: 1,\n        height: 1,\n        padding: 0,\n        margin: -1,\n        overflow: 'hidden',\n        clip: 'rect(0,0,0,0)',\n        border: 0,\n        borderRadius: 12,\n    },\n});\n\n\n@inject('fileUploadStore')\n@observer\nclass BoundaryBox extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"BoundaryBox Work\", {\n            variant: 'info'\n        });\n    }\n    handleChangeUploadFile = (event) => {\n        const file = event.target.files[0];\n\n        this.props.fileUploadStore.changeUploadFile(file);\n    }\n    handleOk = () => {\n        this.props.fileUploadStore.addNewImg();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { uploadFile} = this.props.fileUploadStore;\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                {/*Stepper*/}\n                <div style={{marginTop:70}}>\n                </div>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Grid container>\n                            <Grid item xs={1} style={{marginRight:5}}>\n                                <DropzoneDialogExample />\n                            </Grid>\n                            <Grid item xs={1} style={{marginRight:5}}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.toolButton} >\n                                    Open DIR\n                                </Button>\n                            </Grid>\n                            <Grid item xs={1} style={{marginRight:5}}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.toolButton} >\n                                    Change Save Dir\n                                </Button>\n                            </Grid>\n                            <Grid item xs={1} style={{marginRight:5}}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.toolButton} >\n                                    Zoom In\n                                </Button>\n                            </Grid>\n                            <Grid item xs={1} style={{marginRight:5}}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.toolButton} >\n                                    Zoom Out\n                                </Button>\n                        </Grid>\n                        </Grid>\n                        {/*Img*/}\n                    </Toolbar>\n                    <hr></hr>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <div className={classes.toolBox}>\n                                Tool Box\n                            </div>\n                        </Grid>\n                        <Grid item xs={8} className={classes.canvas}>\n                            <img src=\"https://placeimg.com/1000/800/any\" alt={''} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <div className={classes.test}>\n                            <Typography>\n                                작업리스트\n                            </Typography>\n                                <hr></hr>\n                            </div>\n\n                            <div className={classes.test}>\n                            <Typography>\n                                완료리스트\n                            </Typography>\n                            <hr></hr>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div>\n                    <hr></hr>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Previous\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType1}\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Next\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        className={classes.buttonType2}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        Save and Next\n                    </Button>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (BoundaryBox)));","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport {Button} from \"@material-ui/core\";\n\n\n\nclass Customer extends React.Component {\n\n    render() {\n        return (\n            <TableRow>\n                <TableCell>{this.props.id}</TableCell>\n                <TableCell><img src={this.props.image} alt=\"profile\"/></TableCell>\n                <TableCell>{this.props.name}</TableCell>\n                <TableCell>{this.props.date}</TableCell>\n                <TableCell>{this.props.step}</TableCell>\n                <TableCell>\n                    <Button\n                        type=\"submit\"\n                        variant=\"outlined\"\n                        onClick={this.handleSubmitForm} >\n                        레이블링\n                    </Button>\n                </TableCell>\n            </TableRow>\n        )\n    }\n}\n\nexport default Customer;\n\n","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Button, Container, Typography} from \"@material-ui/core\";\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport Customer from './ListTable'\nimport Paper from '@material-ui/core/Paper';\n\nconst customers = [\n    {\n        'id': 1,\n        'image': 'https://placeimg.com/48/48/1',\n        'name': '홍길동',\n        'date': '200428',\n        'step': 'step1'\n    },\n    {\n        'id': 2,\n        'image': 'https://placeimg.com/48/48/2',\n        'name': '나동빈',\n        'date': '200516',\n        'step': 'step2'\n    },\n    {\n        'id': 3,\n        'image': 'https://placeimg.com/48/48/3',\n        'name': '이순신',\n        'date': '200614',\n        'step': 'step3'\n    }\n]\n\n\nconst styles = theme => ({\n\n    root: {\n        width: \"100%\",\n        marginTop: theme.spacing.unit * 3,\n        overflowX: \"auto\"\n    },\n    table: {\n        minWidth: 1080\n    },\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    content:{\n        margin: 15,\n        display: 'flex',\n        flexDirection: 'column',\n\n    },\n    buttonType1:{\n        width: 100,\n        marginRight: theme.spacing(2),\n    },\n    buttonType2:{\n        width: 150,\n        float:'right',\n\n    },\n});\n\nclass Step1 extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Step2\", {\n            variant: 'info'\n        });\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <hr></hr>\n                <div className={classes.mainContent}>\n                    <Typography variant=\"h4\" component=\"h2\">\n                        BoundaryBoxList\n                    </Typography>\n                    <Paper className={classes.root}>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>번호</TableCell>\n                                    <TableCell>이미지</TableCell>\n                                    <TableCell>작성자</TableCell>\n                                    <TableCell>업로드 날짜</TableCell>\n                                    <TableCell>진행 상황</TableCell>\n                                    <TableCell>작업하기</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {customers.map(c => {\n                                    return <Customer key={c.id} id={c.id} image={c.image} name={c.name} date={c.date} step={c.step} action={c.action} />\n                                })}\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </div>\n                <hr></hr>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType1}\n                    variant=\"outlined\"\n                    onClick={this.handleSubmitForm} >\n                    Previous\n                </Button>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType1}\n                    variant=\"outlined\"\n                    onClick={this.handleSubmitForm} >\n                    Next\n                </Button>\n                <Button\n                    type=\"submit\"\n                    className={classes.buttonType2}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={this.handleSubmitForm} >\n                    Save and Next\n                </Button>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Step1)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography, Button} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\nclass Segmentation extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Segmentation Work\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            Segmentation Edit\n                            <div>\n                                <img src=\"https://placeimg.com/500/800/any\" alt={''}></img>\n                            </div>\n                        </Typography>\n                    </Toolbar>\n                    <div>\n                        <Button\n                            type=\"submit\"\n                            className={classes.submit}\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={this.handleSubmitForm}\n                            fullWidth >Next\n                        </Button>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Segmentation)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography, Button} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\nclass Polygon extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Polygon Work\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            Polygon Edit\n                            <div>\n                                <img src=\"https://placeimg.com/500/800/any\" alt={''}></img>\n                            </div>\n                        </Typography>\n                    </Toolbar>\n                    <div>\n                        <Button\n                            type=\"submit\"\n                            className={classes.submit}\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={this.handleSubmitForm}\n                            fullWidth >Next\n                        </Button>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Polygon)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography, Button} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n});\n\nclass Test extends React.Component {\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Test\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" className={classes.mainContainer}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.mainContent}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            BoundaryBox Edit\n                            <div>\n                                <img src=\"https://placeimg.com/500/800/any\" alt={''}></img>\n                            </div>\n                        </Typography>\n                    </Toolbar>\n                    <div>\n                        <Button\n                            type=\"submit\"\n                            className={classes.submit}\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={this.handleSubmitForm}\n                            fullWidth >Next\n                        </Button>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(styles) (Test)));","import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nexport const State = {\n    Authenticated: 'Authenticated',\n    NotAuthenticated: 'NotAuthenticated',\n    Pending: 'Pending',\n    Failed: 'Failed',\n};\n\nexport const LocalStorageTokenKey = '_BASKITOP_AUTHENTICATION_TOKEN_';\n\nconst EmptyLogin = {\n    id: '',\n    password: '',\n};\n\nconst EmptyUser = {\n    id: '',\n    name: '',\n    type: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n};\n\nexport default class AuthStore {\n    @observable login = Object.assign({}, EmptyLogin);\n    @observable loginState = State.NotAuthenticated;\n    @observable loginToken = '';\n    @observable loginUser = Object.assign({}, EmptyUser);\n\n    @action changeLoginId = (id) => {\n        this.login.id = id;\n    };\n\n    @action changeLoginPassword = (password) => {\n        this.login.password = password;\n    };\n\n    @action invalidateLogin = () => {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n    };\n\n    doLogin = flow(function* doLogin() {\n        this.loginState = State.Pending;\n\n        try {\n            const param = this.login;\n            const response = yield axios.post('/api/v1/authentications/signin', param);\n            const token = response.data.token;\n            const user = response.data.user;\n\n            localStorage.setItem(LocalStorageTokenKey, token);\n\n            console.log('doLogin');\n            console.log(this);\n\n            this.loginState = State.Authenticated;\n            this.loginToken = token;\n            this.loginUser = user;\n        } catch (e) {\n            this.loginState = State.Failed;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n\n    checkLogin = flow(function* checkLogin() {\n        const token = localStorage.getItem(LocalStorageTokenKey);\n\n        if(token) {\n            try {\n                const response = yield axios.get('/api/v1/authentications/signcheck');\n                const token = response.data.token;\n                const user = response.data.user;\n\n                this.loginState = State.Authenticated;\n                this.loginToken = token;\n                this.loginUser = user;\n            } catch(e) {\n                this.loginState = State.NotAuthenticated;\n                this.loginToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        }\n    });\n\n    doLogout = flow(function* doLogout() {\n        localStorage.removeItem(LocalStorageTokenKey);\n\n        try {\n            yield axios.post('/api/v1/authentications/signout');\n\n            console.log(this);\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        } catch(e) {\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n}","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {inject, observer} from \"mobx-react\";\n\nimport {Avatar, Button, CircularProgress, Container, TextField, Typography} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport * as store from \"../stores/AuthStore\";\n\n\nconst style = theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    lockOpenAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    lockOutAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\n@inject('authStore')\n@observer\nclass SignIn extends React.Component {\n    handleChangeId = (e) => {\n        this.props.authStore.changeLoginId(e.target.value);\n    }\n\n    handleChangePassword = (e) => {\n        this.props.authStore.changeLoginPassword(e.target.value);\n    }\n\n    handleKeyUpPassword = (e) => {\n        if(e.keyCode === 13) {\n            this.props.authStore.doLogin();\n        }\n    }\n\n    handleSubmitForm = (e) => {\n        this.props.authStore.doLogin();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loginState, login } = this.props.authStore;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <div className={classes.appBarSpacer} />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.lockOutAvatar}><LockOutlinedIcon/></Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {loginState === store.State.Failed ? 'Sign in failed.' : 'Please sign in.'}\n                        </Typography>\n                        <div className={classes.form}>\n                            <TextField id=\"id\"\n                                       name=\"id\"\n                                       label=\"ID\"\n                                       variant=\"outlined\"\n                                       margin=\"normal\"\n                                       value={login.id}\n                                       onChange={this.handleChangeId}\n                                       required fullWidth />\n                            <TextField id=\"password\"\n                                       name=\"password\"\n                                       label=\"Password\"\n                                       type=\"password\"\n                                       variant=\"outlined\"\n                                       margin=\"normal\"\n                                       value={login.password}\n                                       onChange={this.handleChangePassword}\n                                       onKeyUp={this.handleKeyUpPassword}\n                                       required fullWidth />\n                            <Button type=\"submit\"\n                                    className={classes.submit}\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    disabled={loginState === store.State.Pending}\n                                    onClick={this.handleSubmitForm}\n                                    fullWidth >\n                                {loginState === store.State.Pending ? <CircularProgress size={22}/> : 'Sign In'}\n                            </Button>\n                        </div>\n                    </div>\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(style) (SignIn)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {inject, observer} from \"mobx-react\";\n\nimport {\n    Button,\n    Checkbox,\n    CircularProgress,\n    Container,\n    FormControlLabel,\n    Grid,\n    Link,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\n\n\nconst style = theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom:'20px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent:'center',\n        padding: '60px 80px 40px 80px',\n        border:'1px solid #ddd',\n        //marginBottom:theme.spacing(2),\n        backgroundColor:'#fff',\n        [theme.breakpoints.down(\"sm\")]: {\n            padding:'0',\n            border:'0 none',\n        },\n    },\n    mainTitle: {\n        textAlign: 'center',\n        margin: theme.spacing(2, 0, 0),\n        padding: theme.spacing(1, 0),\n        fontWeight:'700'\n    },\n    mainContent: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    mainComment:{\n        textAlign: 'right',\n    },\n    checkAgreeMargin: {\n        marginTop: theme.spacing(3),\n    },\n    titleArea:{\n        position:'relative'\n    },\n    checkAgreeTotal:{\n        padding:'0 4px 0 0',\n    },\n    termsCaption:{\n        fontSize:'12px',\n        color:'#c1c1c1',\n        fontWeight:'600'\n    },\n    gutterMargin:{\n        margin:theme.spacing(3, 0, 2),\n        '& input[type=password]':{\n            fontFamily:'initial',\n        }\n    },\n    okButton: {\n        borderRadius: 24,\n    },\n\n    successContainer: {\n        textAlign: 'center',\n    },\n    successTitle: {\n        fontSize: 38,\n        color: '#333333',\n        paddingTop: theme.spacing(6),\n    },\n    successHeader: {\n        fontSize: 16,\n        color: '#333333',\n        paddingTop: theme.spacing(5),\n    },\n    successHeader2: {\n        fontSize: 16,\n        color: '#333333',\n    },\n    successBody: {\n        fontSize: 14,\n        color: '#b7b7b7',\n        paddingTop: theme.spacing(1),\n    },\n    successButton: {\n        borderRadius: 24,\n        fontSize: 16,\n        width: 200,\n        height: 48,\n        marginTop: theme.spacing(4),\n    },\n});\n\nconst decodeURLParams = search => {\n    const hashes = search.slice(search.indexOf(\"?\") + 1).split(\"&\");\n    return hashes.reduce((params, hash) => {\n        const split = hash.indexOf(\"=\");\n\n        if (split < 0) {\n            return Object.assign(params, {\n                [hash]: null\n            });\n        }\n\n        const key = hash.slice(0, split);\n        const val = hash.slice(split + 1);\n\n        return Object.assign(params, { [key]: decodeURIComponent(val) });\n    }, {});\n};\n\n@inject('signUpStore')\n@observer\nclass SignUp extends React.Component {\n    componentDidMount() {\n        const params = decodeURLParams(this.props.location.search);\n\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.signUpStore.isSignUpFailed) {\n            this.props.enqueueSnackbar('회원 가입에 실패하였습니다.', {\n                variant: 'error'\n            });\n\n            this.props.signUpStore.clearState();\n        }\n\n        if(this.props.signUpStore.isNotAvailableEmail) {\n            this.props.enqueueSnackbar('이미 존재하는 이메일 혹은 별칭 입니다.', {\n                variant: 'error'\n            });\n\n            this.props.signUpStore.clearState();\n        }\n    }\n    handleChangeId = (event) => {\n        this.props.signUpStore.changeNewMemberId(event.target.value);\n    }\n\n    handleChangeEmail = (event) => {\n        this.props.signUpStore.changeNewMemberEmail(event.target.value);\n    }\n\n    handleChangePassword = (event) => {\n        this.props.signUpStore.changeNewMemberPassword(event.target.value);\n    }\n\n    handleChangePasswordConfirm = (event) => {\n        this.props.signUpStore.changeNewMemberPasswordConfirm(event.target.value);\n    }\n\n    handleChangeUserName = (event) => {\n        this.props.signUpStore.changeNewMemberUserName(event.target.value);\n    }\n\n    handleChangeNickName = (event) => {\n        this.props.signUpStore.changeNewMemberNickName(event.target.value);\n    }\n\n    handleChangeAllAgreements = (event) => {\n        this.props.signUpStore.changeAgreementsAll(event.target.checked);\n    }\n\n    handleChangeServiceAgreements = (event) => {\n        this.props.signUpStore.changeAgreementsService(event.target.checked);\n    }\n\n    handleChangePrivacyAgreements = (event) => {\n        this.props.signUpStore.changeAgreementsPrivacy(event.target.checked);\n    }\n\n    handleClickOK = () => {\n        this.props.signUpStore.doSignUp();\n\n    }\n\n    handleClickToHome = () => {\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { isEmailInputed, isValidId, isValidEmail, isValidPassword, isPasswordConfirmed, isValidUsername, isValidNickName, isPending, isSignUpSuccess, canSignUp, newMember, agreements, serverMode} = this.props.signUpStore;\n\n        return (\n            <React.Fragment>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <div className={classes.appBarSpacer} />\n                    <div className={classes.paper}>\n                        <img src=\"https://placeimg.com/100/100/any\" alt={\"\"}/>\n                        {!isSignUpSuccess ?\n                            <div className={classes.mainContent}>\n                                <Typography className={classes.mainTitle} component=\"h1\" variant=\"h3\" >\n                                    회원가입\n                                </Typography>\n\n                                <Grid container>\n                                    <Grid item xs={12}>\n                                        <Typography variant=\"body2\" className={classes.mainComment}>* 필수입력</Typography>\n                                    </Grid>\n                                </Grid>\n                               <TextField id=\"id\"\n                                           name=\"id\"\n                                           label=\"아이디\"\n                                           margin=\"dense\"\n                                           value={newMember.id}\n                                           onChange={this.handleChangeId}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidPassword ? '' : '최소 4 글자 이상을 입력해 주세요.'}\n                                           autoFocus={isValidId ? false : true} required fullWidth/>\n                                <TextField id=\"email\"\n                                           name=\"email\"\n                                           label=\"이메일 주소\"\n                                           margin=\"dense\"\n                                           value={newMember.email}\n                                           onChange={this.handleChangeEmail}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidEmail ? '' : '이메일 형식이 아닙니다.'}\n                                           autoFocus={isEmailInputed ? false : true} required fullWidth/>\n\n                                <TextField id=\"password\"\n                                           type=\"password\"\n                                           name=\"password\"\n                                           label=\"비밀번호\"\n                                           margin=\"dense\"\n                                           autoComplete={\"off\"}\n                                           value={newMember.password}\n                                           onChange={this.handleChangePassword}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidPassword ? '' : '최소 4 글자 이상을 입력해 주세요.'}\n                                           autoFocus={isValidPassword ? true : false} required fullWidth/>\n                                <TextField id=\"passwordConfirm\"\n                                           type=\"password\"\n                                           name=\"passwordConfirm\"\n                                           label=\"비밀번호 확인\"\n                                           margin=\"dense\"\n                                           autoComplete={\"off\"}\n                                           value={newMember.passwordConfirm}\n                                           onChange={this.handleChangePasswordConfirm}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isPasswordConfirmed ? '' : '패스워드가 일치하지 않습니다.'}\n                                           required fullWidth/>\n                                <TextField id=\"name\"\n                                           name=\"name\"\n                                           label=\"이름\"\n                                           margin=\"dense\"\n                                           value={newMember.userName}\n                                           onChange={this.handleChangeUserName}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidUsername ? '' : '최소 2 글자 이상을 입력해 주세요.'}\n                                           required fullWidth/>\n                                <TextField id=\"nickName\"\n                                           name=\"nickName\"\n                                           label=\"별칭\"\n                                           margin=\"dense\"\n                                           value={newMember.nickName}\n                                           onChange={this.handleChangeNickName}\n                                           className={classes.gutterMargin}\n                                           InputLabelProps={{shrink: true}}\n                                           helperText={isValidNickName ? '' : '최소 2 글자 이상을 입력해 주세요.'}\n                                           required fullWidth/>\n                                <div className={classes.titleArea}>\n                                    <Typography variant=\"h5\" component=\"h5\">\n                                        약관 동의\n                                    </Typography>\n                                    <hr></hr>\n                                    <FormControlLabel\n                                        variant=\"body2\"\n                                        name=\"checkAgreeTotal\"\n                                        style={{paddingLeft: 9}}\n                                        control={\n                                            <Checkbox\n                                                checked={agreements.all}\n                                                onChange={this.handleChangeAllAgreements}\n                                                color=\"primary\"\n                                                className={classes.checkAgreeTotal}\n                                            />\n                                        }\n                                        label=\"전체 동의\"\n                                    />\n                                </div>\n                                <Grid item xs={12} style={{display: 'flex'}}>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            name=\"checkAgreeService\"\n                                            control={\n                                                <Checkbox\n                                                    checked={agreements.service}\n                                                    onChange={this.handleChangeServiceAgreements}\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"서비스 이용 약관\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs align={\"right\"}>\n                                        <Link underline={\"always\"} href=\"/terms/terms\"\n                                              className={classes.termsCaption}>내용보기</Link>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} style={{display: 'flex'}}>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            name=\"checkAgreePersonal\"\n                                            control={\n                                                <Checkbox\n                                                    checked={agreements.privacy}\n                                                    onChange={this.handleChangePrivacyAgreements}\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"개인 정보 처리 방침\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs align={\"right\"}>\n                                        <Link underline={\"always\"} href=\"/terms/privacy\"\n                                              className={classes.termsCaption}>내용보기</Link>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} align={\"center\"}>\n                                    <Button color=\"primary\" variant=\"contained\" className={classes.okButton}\n                                            disabled={(!canSignUp) || (isPending)}\n                                            onClick={this.handleClickOK}\n                                            fullWidth>\n                                        {isPending ? <CircularProgress size={16}/> : '회원 가입'}\n                                    </Button>\n                                </Grid>\n                            </div>\n                            :\n                            ''\n                        }\n                        {isSignUpSuccess ?\n                            <div className={classes.successContainer}>\n                                {serverMode === 'SERVER' ?\n                                    <React.Fragment>\n                                        <Typography className={classes.successTitle}>회원 가입 신청 완료</Typography>\n                                        <Typography className={classes.successHeader}>{`${newMember.email}로 회원 가입 신청 되었습니다.`}</Typography>\n                                        <Typography className={classes.successHeader2}>가입이 완료 되려면 관리자의 승인이 필요합니다.</Typography>\n                                        <Typography className={classes.successBody}>승인 후에 ONTHELIVE의 서비스를<br/> 이용하실 수 있습니다.</Typography>\n                                    </React.Fragment>\n                                    :\n                                    <React.Fragment>\n                                        <Typography className={classes.successTitle}>회원 가입 완료</Typography>\n                                        <Typography className={classes.successHeader}>{`${newMember.email}로 전송된 이메일을 확인하여`}</Typography>\n                                        <Typography className={classes.successHeader2}>가입절차를 완료해 주세요.</Typography>\n                                        <Typography className={classes.successBody}>이메일인증 완료 후에 ONTHELIVE의 서비스를<br/> 이용하실 수 있습니다.</Typography>\n                                    </React.Fragment>\n                                }\n                                <Button color=\"primary\" variant=\"contained\"\n                                        className={classes.successButton}\n                                        onClick={() => this.handleClickToHome()}>\n                                    메인으로 가기\n                                </Button>\n                            </div>\n                            :\n                            ''\n                        }\n                    </div>\n                    <Grid container style={{ backgroundColor: '#fafafa', paddingBottom: 30}}>\n                        <Grid container item xs={12} style={{paddingTop: 16}} >\n                            <Grid item xs={12} style={{display: 'flex', justifyContent: 'center', paddingBottom: 16}}>\n                                <ErrorIcon style={{width: 16, height: 16, paddingTop: 2, paddingRight: 2}} /><Typography variant=\"subtitle2\">로그인 시스템</Typography>\n                            </Grid>\n                            <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n                                <Typography variant=\"body2\" style={{textAlign: 'left'}}>\n                                    회원 가입을 통해 <b>생성되는 아이디는 그룹 관리자 계정</b>입니다.<br/>\n                                    일반 계정은 로그인 후, 그룹 메뉴를 통해 직접 생성하시면 됩니다.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </React.Fragment>\n        );\n    }\n};\nexport default withSnackbar(withRouter(withStyles(style) (SignUp)));","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {inject, observer} from \"mobx-react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {CssBaseline} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport TopBar from \"./components/TopBar\";\nimport SideMenu from \"./components/SideMenu\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Home from \"./views/Home\";\nimport Step from \"./views/Step\";\nimport Step2 from \"./views/Step2\";\nimport Step3 from \"./views/Step3\";\nimport BoundaryBox from \"./views/Labeling/BoundaryBox\";\nimport BoundaryBoxList from \"./views/Labeling/BoundaryBoxList\";\nimport Segmentation from \"./views/Labeling/Segmentaion\";\nimport Polygon from \"./views/Labeling/Polygon\";\nimport Test from \"./views/Labeling/Test\";\nimport SignIn from \"./views/SignIn\";\nimport * as store from \"./stores/AuthStore\";\nimport SignUp from \"./views/SignUp\";\n\n\nconst style = () => ({\n    root: {\n        display: 'flex',\n    }\n});\n\n\n@inject('authStore')\n@observer\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobileOpen: false,\n        };\n\n        this.setMobileOpen = this.setMobileOpen.bind(this);\n    }\n\n    componentDidMount() {\n        const axiosRequestInterceptors = (config) => {\n            const token = localStorage.getItem(store.LocalStorageTokenKey);\n\n            if(token) {\n                config.headers['X-Auth-Token'] = token;\n            }\n\n            return config;\n        };\n\n        const axiosRequestErrorHandler = (error) => {\n            return Promise.reject(error);\n        };\n\n        const axiosResponseInterceptor = (response) => {\n            if(response.status === 403) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return response;\n        };\n\n        const axiosResponseErrorHandler = (error) => {\n            if((error.response) && (error.response.status === 403)) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return Promise.reject(error);\n        };\n\n        console.log(\"========== RGate App componentDidMount ==========\");\n        axios.interceptors.request.use(axiosRequestInterceptors, axiosRequestErrorHandler);\n        axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n\n        this.props.authStore.checkLogin();\n    }\n\n    setMobileOpen(mobileOpen) {\n        this.setState({mobileOpen: mobileOpen});\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loginState } = this.props.authStore;\n\n        return (\n            <div className={classes.root}>\n                <Router>\n                    <CssBaseline />\n\n                    <Route path=\"/\" component={ScrollToTop}>\n                        <TopBar mobileOpen={this.state.mobileOpen}\n                                setMobileOpen={this.setMobileOpen}\n                                isLoggedIn={loginState === store.State.Authenticated}\n                                doLogout={() => this.props.authStore.doLogout()} />\n                        <SideMenu mobileOpen={this.state.mobileOpen}\n                                  setMobileOpen={this.setMobileOpen}\n                                  isLoggedIn={loginState === store.State.Authenticated} />\n\n                        {loginState === store.State.Authenticated ? (\n                            <React.Fragment>\n                              <Switch>\n                                <Route exact path=\"/\" component={Home} />\n                                <Route exact path=\"/home\" component={Home} />\n                                  <Route exact path=\"/step\" component={Step} />\n                                  <Route exact path=\"/step2\" component={Step2} />\n                                  <Route exact path=\"/step3\" component={Step3} />\n                                  <Route exact path=\"/Step/BoundaryBox\" component={BoundaryBox} />\n                                  <Route exact path=\"/Step/BoundaryBoxList\" component={BoundaryBoxList} />\n                                  <Route exact path=\"/Step/Segmentation\" component={Segmentation} />\n                                  <Route exact path=\"/Step/Polygon\" component={Polygon} />\n                                  <Route exact path=\"/Test\" component={Test} />\n                              </Switch>\n                            </React.Fragment>\n                        ) : (\n                            <Switch>\n                            <Route path=\"/SignUp\" component={SignUp} />\n                            <Route path=\"/\" component={SignIn} />\n                            </Switch>\n                        )}\n                  </Route>\n                </Router>\n            </div>\n        );\n    }\n};\n\nexport default withStyles(style) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\n\nconst ListState = {\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n};\n\nexport default class CategoryStore {\n\n    @observable listState = ListState.Loaded;\n    @observable categoryList = [];\n\n    @action changeCategory = () => {\n        this.loadCategoryList();\n    }\n\n    loadCategoryList = flow(function* loadColorList() {\n        this.listState = ListState.Loading;\n\n        try {\n            let response = yield axios.get(`/api/v1/category/item/basic/category`)\n            const categorys = response.data.categoryList;\n            this.categoryList = categorys;\n            this.listState = ListState.Loaded;\n        } catch(error) {\n            this.listState = ListState.LoadFailed;\n        }\n\n    })\n\n\n\n}","export function validateEmail(email) {\n    const regExp = /([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    return regExp.test(String(email).toLowerCase());\n}","import {action, computed, flow, observable, toJS} from \"mobx\";\nimport axios from \"axios\";\nimport * as validation from \"../common/Validation\";\n\nconst MinUserId = 4;\nconst MinUserName = 2;\nconst MinPassword = 4;\nconst MinNickName = 2;\n\nconst State = {\n    Ready: 'Ready',\n    Pending: 'Pending',\n    NotAvailableEmail: 'NotAvailableEmail',\n    Success: 'Success',\n    Fail: 'Fail',\n}\n\nconst EmptyNewMember = {\n    id: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n    name: '',\n    nickName: '',\n}\n\nconst EmptyAgreements = {\n    all: false,\n    service: false,\n    privacy: false,\n}\n\nexport default class SignUpStore {\n    @observable state = State.Ready;\n    @observable newMember = {...EmptyNewMember}\n    @observable agreements = {...EmptyAgreements}\n    @observable serverMode = '';\n\n    @action initialize = (email) => {\n        this.state = State.Ready;\n        this.newMember = {...EmptyNewMember}\n        this.agreements = {...EmptyAgreements}\n\n        if((email !== undefined) && (email !== null) && (email.length > 0) && validation.validateEmail(email)) {\n            this.newMember.email = email;\n        }\n    }\n\n    @action clearState = () => {\n        this.state = State.Ready;\n    }\n    @action changeNewMemberId = (id) => {\n        this.newMember.id = id;\n    }\n    @action changeNewMemberEmail = (email) => {\n        this.newMember.email = email;\n    }\n\n    @action changeNewMemberPassword = (password) => {\n        this.newMember.password = password;\n    }\n\n    @action changeNewMemberPasswordConfirm = (passwordConfirm) => {\n        this.newMember.passwordConfirm = passwordConfirm;\n    }\n\n    @action changeNewMemberUserName = (name) => {\n        this.newMember.name = name;\n    }\n\n    @action changeNewMemberNickName = (nickName) => {\n        this.newMember.nickName = nickName;\n    }\n\n    @action changeAgreementsAll = (allAgreement) => {\n        if(allAgreement) {\n            this.agreements.all = true;\n            this.agreements.service = true;\n            this.agreements.privacy = true;\n        } else {\n            this.agreements.all = false;\n            this.agreements.service = false;\n            this.agreements.privacy = false;\n        }\n    }\n\n    @action changeAgreementsService = (serviceAgreements) => {\n        if(serviceAgreements) {\n            this.agreements.service = true;\n        } else {\n            this.agreements.all = false;\n            this.agreements.service = false;\n        }\n    }\n\n    @action changeAgreementsPrivacy = (privacyAgreements) => {\n        if(privacyAgreements) {\n            this.agreements.privacy = true;\n        } else {\n            this.agreements.all = false;\n            this.agreements.privacy = false;\n        }\n    }\n\n    @computed get isEmailInputed() {\n        return (this.newMember.email !== undefined) && (this.newMember.email !== null) && (this.newMember.email.length > 0);\n    }\n\n    @computed get canSignUp() {\n        const id = this.newMember.id.length >= MinUserId;\n        const emailVerification = validation.validateEmail(this.newMember.email);\n        const agreements = this.agreements.service && this.agreements.privacy;\n        const passwordConfirm = this.newMember.password === this.newMember.passwordConfirm;\n        const password = this.newMember.password.length >= MinPassword;\n        const userName = this.newMember.name.length >= MinUserName;\n        const nickName = this.newMember.nickName.length >= MinNickName;\n\n        return emailVerification && agreements && passwordConfirm && password && userName && nickName;\n    }\n\n    @computed get canAdminSignUp() {\n        const id = this.newMember.id.length >= MinUserId;\n        const emailVerification = validation.validateEmail(this.newMember.email);\n        const passwordConfirm = this.newMember.password === this.newMember.passwordConfirm;\n        const password = this.newMember.password.length >= MinPassword;\n        const userName = this.newMember.name.length >= MinUserName;\n        const nickName = this.newMember.nickName.length >= MinNickName;\n\n        return emailVerification && passwordConfirm && password && userName && nickName;\n    }\n\n    @computed get isValidId() {\n        return this.newMember.id.length >= MinUserId;\n    }\n    @computed get isValidEmail() {\n        return validation.validateEmail(this.newMember.email);\n    }\n\n    @computed get isValidPassword() {\n        return this.newMember.password.length >= MinPassword;\n    }\n\n    @computed get isPasswordConfirmed() {\n        return this.newMember.password === this.newMember.passwordConfirm;\n    }\n\n    @computed get isValidUsername() {\n        return this.newMember.name.length >= MinUserName;\n    }\n\n    @computed get isValidNickName() {\n        return this.newMember.nickName.length >= MinNickName;\n    }\n\n    @computed get isPending() {\n        return this.state === State.Pending;\n    }\n\n    @computed get isSignUpSuccess() {\n        return this.state === State.Success;\n    }\n\n    @computed get isSignUpFailed() {\n        return this.state === State.Fail;\n    }\n\n    @computed get isNotAvailableEmail() {\n        return this.state === State.NotAvailableEmail;\n    }\n\n    doSignUp = flow(function* doSignUp(doAction) {\n        this.state = State.Pending;\n\n\n                const param = toJS(this.newMember);\n                delete param.passwordConfirm;\n\n                const resp = yield axios.post('/api/v1/kfashion/users/signup', param);\n                if(resp.status === 200) {\n                    this.state = State.Success;\n                    if (doAction !== undefined) doAction();\n\n            }\n    });\n\n}","import {action, computed, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nconst ListState = {\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n};\n\nexport default class SecondStepStore {\n    @observable listState = ListState.Loaded;\n    @observable categoryList = []\n    @observable colorList = []\n    @observable sleeveList = []\n\n    @computed\n    get category() {\n        return this.categoryList === undefined ? [] : this.categoryList;\n    }\n    @computed\n    get color() {\n        return this.colorList === undefined ? [] : this.colorList;\n    }\n    @computed\n    get sleeve() {\n        return this.sleeveLengthList === undefined ? [] : this.sleeveLengthList;\n    }\n    /*@computed\n    get clothLength() {\n        return this.clothLengthList === undefined ? [] : this.clothLengthList;\n    }\n    @computed\n    get print() {\n        return this.printList === undefined ? [] : this.printList;\n    }\n    @action changeCategory =() => {\n        this.loadCategoryList();\n    }\n    @action changeColor =() => {\n        this.loadColorList();\n    }*/\n\n    loadCategoryList = flow(function* getCategoryList() {\n        this.listState = ListState.Loading;\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/category`)\n            if(response.status === 200) {\n                const category =response.data.categoryList;\n                this.categoryList=category\n                this.listState = ListState.Loaded;\n            }\n        } catch(error) {\n            console.log(\"error getCategoryList\", error);\n        }\n    })\n\n    loadColorList = flow(function* getColorList() {\n        this.listState = ListState.Loading;\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/color`)\n            if(response.status === 200) {\n                const color =response.data.colorList;\n                this.colorList=color\n                this.listState = ListState.Loaded;\n            }\n        } catch(error) {\n            console.log(\"error getColorList\", error);\n        }\n    })\n\n    loadSleeveList = flow(function* getSleeveList() {\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/sleeve`)\n            if(response.status === 200) {\n                const sleeve =response.data.sleeveList;\n                this.sleeveList=sleeve\n                this.listState = ListState.Loaded;\n            }\n        } catch(error) {\n            console.log(\"error getSleeveList\", error);\n        }\n    })\n\n   /* loadClothList = flow(function* getClothList() {\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/cloth`)\n            if(response.status === 200) {\n                this.clothLengthList = response.data;\n            }\n        } catch(error) {\n            console.log(\"error getClothList\", error);\n        }\n    })\n\n    loadPrintList = flow(function* getPrintList() {\n        try {\n            const response = yield axios.get(`/api/v1/category/item/basic/print`)\n            if(response.status === 200) {\n                this.printList = response.data;\n            }\n        } catch(error) {\n            console.log(\"error getPrintList\", error);\n        }\n    })*/\n\n\n    /*changeCategoryStatus = flow(function* changeCategoryStatus(userId, statusCode) {\n        try {\n            const response = yield axios.put(`/api/v1/admin/users`, [{\"userId\": userId, \"statusCode\": statusCode}])\n            if(response.status === 200) {\n                this.loadCategoryList();\n            }\n        } catch(error) {\n            console.log(\"error getUserList\", error);\n        }\n    })*/\n\n}","import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\nimport {State} from \"./AuthStore\";\n\nconst AddState = {\n    Closed: 'Closed',\n    Opened: 'Opened',\n    Adding: 'Adding',\n    Added: 'Added',\n    AddFailed: 'AddFailed',\n};\nconst UpdateState = {\n    Closed: 'Closed',\n    Loading: 'Loading',\n    Loaded: 'Loaded',\n    LoadFailed: 'LoadFailed',\n    Updating: 'Updating',\n    Updated: 'Updated',\n    UpdateFailed: 'UpdateFailed',\n    Uploading: 'Uploading',\n    Uploaded: 'Uploaded',\n    UploadFailed: 'UploadFailed',\n};\nexport default class FileUploadStore {\n    @observable fileList = [];\n    @observable uploadFile = '';\n    @observable addState = AddState.Closed;\n    @observable updateState = UpdateState.Closed;\n    @observable state = State.Ready;\n/*\n    @action fileUploadHandle = () => {\n        this.fileUpload();\n    }\n*/\n    @action changeUploadFile = (file) => {\n        this.uploadFile = file;\n    }\n/*    @computed get isAdding() {\n        return this.addState === AddState.Adding;\n    }\n\n    @computed get isAdded() {\n        return this.addState === AddState.Added;\n    }\n\n    @computed get isAddFailed() {\n        return this.addState === AddState.AddFailed;\n    }*/\n\n\n /*   fileUpload = flow(function* fileUpload(e) {\n        const formData = new FormData()\n\n        formData.append('file', blob, 'filename.jpg')\n        formData.append('subPath', 'shop')\n\n        const res = await axios.post(`/api/v1/img/uploadImgFile`, formData)\n        try {\n            const formData = new FormData();\n            formData.append('file', e.target.file[0]);\n            const response = yield axios.post('/api/v1/img/uploadImgFile', formData);\n            if(response.status === 200) {\n            }\n        } catch (e) {\n            console.log('error다 이놈아');\n        }\n    });*/\n    fileupload = flow(function* handleSave(files) {\n        try {\n            const formData = new FormData();\n            for(let i = 0; i < files.length; i++ ) {\n                console.log(files.length);\n                formData.append(\"file\", files[0]);\n            }\n            console.log(\"formData[]\",formData.file);\n\n            yield axios.post( '/api/v1/img/uploadMultipleFiles',formData,\n            ).then(function(){\n            })\n                .catch(function(){\n                });\n        } catch (error) {\n            console.log('error')\n        }\n    });\n\n}","import { default as AuthStore } from \"./AuthStore\";\nimport {default as CategoryStore} from \"./CategoryStore\";\nimport SignUpStore from \"./SignUpStore\";\nimport SecondStepStore from \"./SecondStepStore\";\nimport FileUploadStore from \"./FileUploadStore\";\n\nexport const stores = {\n    signUpStore: new SignUpStore(),\n    authStore:  new AuthStore(),\n    categoryStore : new CategoryStore(),\n    secondStepStore: new SecondStepStore(),\n    fileUploadStore: new FileUploadStore(),\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {configure} from \"mobx\";\nimport {Provider as MobxProvider} from \"mobx-react\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {SnackbarProvider} from \"notistack\";\nimport {stores} from \"./stores\";\nimport configureTheme from \"./configureTheme\";\n\nconfigure({enforceActions: \"always\"});\n\nconst theme = configureTheme();\n\nReactDOM.render(\n    <MobxProvider {...stores}>\n        <ThemeProvider theme={theme}>\n            <SnackbarProvider maxSnack={3} anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}>\n                <App />\n            </SnackbarProvider>\n        </ThemeProvider>\n    </MobxProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createMuiTheme} from \"@material-ui/core\";\n\nexport default function configureTheme() {\n    return createMuiTheme({\n        drawerWidth: 240,\n    });\n};\n"],"sourceRoot":""}